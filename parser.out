Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALL
    DIVIDE
    Literal
    MINUS
    NCName
    NMTOKEN
    NOT
    Name
    PLUS
    PlainLiteral
    THAT
    TIMES
    XMLLiteral
    anyURI
    base64Binary
    boolean
    byte
    dateTime
    dateTimeStamp
    decimal
    double
    float
    hexBinary
    int
    integer
    langString
    languague
    long
    negativeInteger
    nonNegativeInteger
    owl
    rational
    rdf
    rdfs
    real
    string
    xsd

Grammar

Rule 0     S' -> statements
Rule 1     statements -> Class CLASS_IDENTIFIER statement_defined_class statements
Rule 2     statements -> Class CLASS_IDENTIFIER statement_defined_class
Rule 3     statements -> Class CLASS_IDENTIFIER statement_primitive_class
Rule 4     statements -> Class CLASS_IDENTIFIER statement_primitive_class statements
Rule 5     statements -> empty
Rule 6     statement_defined_class -> EquivalentTo_possible maybe_suclassof statement_class_disjoin statement_class_individuals
Rule 7     statement_defined_class -> subclassof_possible EquivalentTo_possible statement_class_disjoin statement_class_individuals
Rule 8     statement_primitive_class -> subclassof_possible statement_class_disjoin statement_class_individuals
Rule 9     EquivalentTo_possible -> EquivalentTo JustDefined
Rule 10    EquivalentTo_possible -> EquivalentTo nested
Rule 11    EquivalentTo_possible -> EquivalentTo statement_closed_axiom_class
Rule 12    EquivalentTo_possible -> EquivalentTo statement_enumerated_class
Rule 13    EquivalentTo_possible -> EquivalentTo statement_covered_class
Rule 14    maybe_suclassof -> subclassof_possible
Rule 15    maybe_suclassof -> empty
Rule 16    subclassof_possible -> SubClassOf nested
Rule 17    subclassof_possible -> SubClassOf statement_closed_axiom_class
Rule 18    subclassof_possible -> SubClassOf statement_enumerated_class
Rule 19    subclassof_possible -> SubClassOf statement_covered_class
Rule 20    subclassof_possible -> SubClassOf primitive_class_mandatory
Rule 21    JustDefined -> CLASS_IDENTIFIER COMMA expression statement_class_disjoin statement_class_individuals
Rule 22    JustDefined -> CLASS_IDENTIFIER AND expression statement_class_disjoin statement_class_individuals
Rule 23    JustDefined -> expression statement_class_disjoin statement_class_individuals
Rule 24    JustDefined -> CLASS_IDENTIFIER
Rule 25    JustDefined -> empty
Rule 26    statement_reserved_word -> SOME
Rule 27    statement_reserved_word -> EXACTLY
Rule 28    statement_reserved_word -> MIN
Rule 29    statement_reserved_word -> MAX
Rule 30    statement_reserved_word -> OR
Rule 31    statement_reserved_word -> AND
Rule 32    statement_reserved_word -> VALUE
Rule 33    statement_others_reserved_word -> SOME
Rule 34    statement_others_reserved_word -> ONLY
Rule 35    statement_others_reserved_word -> MIN
Rule 36    statement_others_reserved_word -> EXACTLY
Rule 37    statement_others_reserved_word -> OR
Rule 38    statement_others_reserved_word -> MAX
Rule 39    statement_others_reserved_word -> AND
Rule 40    statement_property_identify -> PROPERTY_IDENTIFIER_has
Rule 41    statement_property_identify -> PROPERTY_IDENTIFIER_is_Of
Rule 42    statement_property_identify -> PROPERTY_IDENTIFIER
Rule 43    primitive_class_mandatory -> CLASS_IDENTIFIER COMMA expression statement_class_disjoin statement_class_individuals
Rule 44    primitive_class_mandatory -> CLASS_IDENTIFIER AND expression statement_class_disjoin statement_class_individuals
Rule 45    primitive_class_mandatory -> expression statement_class_disjoin statement_class_individuals
Rule 46    primitive_class_mandatory -> CLASS_IDENTIFIER
Rule 47    primitive_class_mandatory -> empty
Rule 48    statement_class_disjoin -> empty
Rule 49    statement_class_disjoin -> DisjointClasses statement_class_disjoin_check
Rule 50    statement_class_disjoin -> DisjointWith statement_class_disjoin_check
Rule 51    statement_class_disjoin_check -> CLASS_IDENTIFIER
Rule 52    statement_class_disjoin_check -> CLASS_IDENTIFIER COMMA statement_class_disjoin_check
Rule 53    statement_class_individuals -> empty
Rule 54    statement_class_individuals -> Individuals statement_class_individuals_check
Rule 55    statement_class_individuals_check -> IndividualNames
Rule 56    statement_class_individuals_check -> IndividualNames COMMA statement_class_individuals_check
Rule 57    statement_defined_class_equivalent -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN
Rule 58    statement_defined_class_equivalent -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent
Rule 59    statement_defined_class_equivalent -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN
Rule 60    statement_defined_class_equivalent -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent
Rule 61    statement_operator_symbol -> LESS_THAN
Rule 62    statement_operator_symbol -> GREATER_THAN
Rule 63    statement_operator_symbol -> EQUALS
Rule 64    statement_operator_symbol -> GREATER_THAN EQUALS
Rule 65    statement_operator_symbol -> LESS_THAN EQUALS
Rule 66    usually_inside_paren -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER
Rule 67    usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
Rule 68    usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE
Rule 69    usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER
Rule 70    usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
Rule 71    usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
Rule 72    usually_others_paren -> statement_property_identify statement_others_reserved_word LEFT_PAREN usually_others_others_paren
Rule 73    usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE
Rule 74    usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE
Rule 75    usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER
Rule 76    usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
Rule 77    usually_others_others_paren -> CLASS_IDENTIFIER RIGHT_PAREN
Rule 78    usually_others_others_paren -> CLASS_IDENTIFIER OR usually_others_others_paren
Rule 79    simple_paren -> LEFT_PAREN usually_inside_paren RIGHT_PAREN
Rule 80    expression -> usually_inside_paren
Rule 81    expression -> usually_inside_paren COMMA expression
Rule 82    expression -> simple_paren
Rule 83    expression -> simple_paren COMMA expression
Rule 84    expression -> simple_paren AND expression
Rule 85    other_expression -> usually_inside_paren
Rule 86    other_expression -> usually_others_paren
Rule 87    other_expression -> usually_inside_paren COMMA other_expression
Rule 88    other_expression -> simple_paren
Rule 89    other_expression -> simple_paren AND other_expression
Rule 90    other_expression -> usually_others_paren AND other_expression
Rule 91    nested -> CLASS_IDENTIFIER AND nested_descriptions
Rule 92    nested -> CLASS_IDENTIFIER COMMA nested_descriptions
Rule 93    nested_descriptions -> nested_descriptions AND nested_descriptions
Rule 94    nested_descriptions -> nested_descriptions OR nested_descriptions
Rule 95    nested_descriptions -> LEFT_PAREN nested_descriptions RIGHT_PAREN
Rule 96    nested_descriptions -> statement_property_identify statement_others_reserved_word nested_descriptions
Rule 97    nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
Rule 98    nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER
Rule 99    nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE IndividualNames
Rule 100   nested_descriptions -> statement_property_identify VALUE IndividualNames
Rule 101   nested_descriptions -> statement_property_identify VALUE CLASS_IDENTIFIER
Rule 102   nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE nested_descriptions
Rule 103   nested_descriptions -> statement_property_identify statement_others_reserved_word NUMBER nested_descriptions
Rule 104   nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER
Rule 105   nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY nested_descriptions
Rule 106   nested_descriptions -> statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER
Rule 107   nested_descriptions -> statement_property_identify statement_others_reserved_word SOME nested_descriptions
Rule 108   nested_descriptions -> CLASS_IDENTIFIER
Rule 109   statement_closed_axiom_class -> CLASS_IDENTIFIER COMMA other_expression
Rule 110   statement_closed_axiom_class -> CLASS_IDENTIFIER AND other_expression
Rule 111   statement_closed_axiom_class -> CLASS_IDENTIFIER other_expression
Rule 112   closed_axiom_restriction_combination -> CLASS_IDENTIFIER
Rule 113   closed_axiom_restriction_combination -> CLASS_IDENTIFIER OR closed_axiom_restriction_combination
Rule 114   statement_enumerated_class -> LEFT_CURLY_BRACKET statement_enumerated_class_check RIGHT_CURLY_BRACKET
Rule 115   statement_enumerated_class_check -> IndividualNames
Rule 116   statement_enumerated_class_check -> IndividualNames COMMA statement_enumerated_class_check
Rule 117   statement_covered_class -> statement_covered_class_check
Rule 118   statement_covered_class_check -> CLASS_IDENTIFIER
Rule 119   statement_covered_class_check -> CLASS_IDENTIFIER OR statement_covered_class_check
Rule 120   empty -> <empty>

Terminals, with rules where they appear

ALL                  : 
AND                  : 22 31 39 44 84 89 90 91 93 110
CLASS_IDENTIFIER     : 1 2 3 4 21 22 24 43 44 46 51 52 57 58 66 69 71 75 77 78 91 92 97 98 101 104 106 108 109 110 111 112 113 118 119
COMMA                : 21 43 52 56 58 60 81 83 87 92 109 116
Class                : 1 2 3 4
DATA_TYPE            : 59 60 67 68 70 73 74 76
DIVIDE               : 
DisjointClasses      : 49
DisjointWith         : 50
EQUALS               : 63 64 65
EXACTLY              : 27 36
EquivalentTo         : 9 10 11 12 13
GREATER_THAN         : 62 64
IndividualNames      : 55 56 99 100 115 116
Individuals          : 54
LEFT_BRACKET         : 59 60 70 76
LEFT_CURLY_BRACKET   : 114
LEFT_PAREN           : 72 79 95
LESS_THAN            : 61 65
Literal              : 
MAX                  : 29 38
MIN                  : 28 35
MINUS                : 
NAMESPACEID          : 59 60 67 68 70 73 74 76
NCName               : 
NMTOKEN              : 
NOT                  : 
NUMBER               : 59 60 68 69 70 74 75 76 103
Name                 : 
ONLY                 : 34 104 105
OR                   : 30 37 78 94 113 119
PLUS                 : 
PROPERTY_IDENTIFIER  : 42
PROPERTY_IDENTIFIER_has : 40
PROPERTY_IDENTIFIER_is_Of : 41
PlainLiteral         : 
RIGHT_BRACKET        : 59 60 70 76
RIGHT_CURLY_BRACKET  : 114
RIGHT_PAREN          : 57 58 59 60 77 79 95
SOME                 : 26 33 106 107
SubClassOf           : 16 17 18 19 20
THAT                 : 
TIMES                : 
VALUE                : 32 98 99 100 101 102
XMLLiteral           : 
anyURI               : 
base64Binary         : 
boolean              : 
byte                 : 
dateTime             : 
dateTimeStamp        : 
decimal              : 
double               : 
error                : 
float                : 
hexBinary            : 
int                  : 
integer              : 
langString           : 
languague            : 
long                 : 
negativeInteger      : 
nonNegativeInteger   : 
owl                  : 
rational             : 
rdf                  : 
rdfs                 : 
real                 : 
string               : 
xsd                  : 

Nonterminals, with rules where they appear

EquivalentTo_possible : 6 7
JustDefined          : 9
closed_axiom_restriction_combination : 113
empty                : 5 15 25 47 48 53
expression           : 21 22 23 43 44 45 81 83 84
maybe_suclassof      : 6
nested               : 10 16
nested_descriptions  : 91 92 93 93 94 94 95 96 102 103 105 107
other_expression     : 87 89 90 109 110 111
primitive_class_mandatory : 20
simple_paren         : 82 83 84 88 89
statement_class_disjoin : 6 7 8 21 22 23 43 44 45
statement_class_disjoin_check : 49 50 52
statement_class_individuals : 6 7 8 21 22 23 43 44 45
statement_class_individuals_check : 54 56
statement_closed_axiom_class : 11 17
statement_covered_class : 13 19
statement_covered_class_check : 117 119
statement_defined_class : 1 2
statement_defined_class_equivalent : 58 60
statement_enumerated_class : 12 18
statement_enumerated_class_check : 114 116
statement_operator_symbol : 59 60 70 76
statement_others_reserved_word : 71 72 73 74 75 76 96 97 98 99 102 103 104 105 106 107
statement_primitive_class : 3 4
statement_property_identify : 57 58 59 60 66 67 68 69 70 71 72 73 74 75 76 96 97 98 99 100 101 102 103 104 105 106 107
statement_reserved_word : 57 58 59 60 66 67 68 69 70
statements           : 1 4 0
subclassof_possible  : 7 8 14
usually_inside_paren : 79 80 81 85 87
usually_others_others_paren : 72 78
usually_others_paren : 86 90

Parsing method: LALR

state 0

    (0) S' -> . statements
    (1) statements -> . Class CLASS_IDENTIFIER statement_defined_class statements
    (2) statements -> . Class CLASS_IDENTIFIER statement_defined_class
    (3) statements -> . Class CLASS_IDENTIFIER statement_primitive_class
    (4) statements -> . Class CLASS_IDENTIFIER statement_primitive_class statements
    (5) statements -> . empty
    (120) empty -> .

    Class           shift and go to state 2
    $end            reduce using rule 120 (empty -> .)

    statements                     shift and go to state 1
    empty                          shift and go to state 3

state 1

    (0) S' -> statements .



state 2

    (1) statements -> Class . CLASS_IDENTIFIER statement_defined_class statements
    (2) statements -> Class . CLASS_IDENTIFIER statement_defined_class
    (3) statements -> Class . CLASS_IDENTIFIER statement_primitive_class
    (4) statements -> Class . CLASS_IDENTIFIER statement_primitive_class statements

    CLASS_IDENTIFIER shift and go to state 4


state 3

    (5) statements -> empty .

    $end            reduce using rule 5 (statements -> empty .)


state 4

    (1) statements -> Class CLASS_IDENTIFIER . statement_defined_class statements
    (2) statements -> Class CLASS_IDENTIFIER . statement_defined_class
    (3) statements -> Class CLASS_IDENTIFIER . statement_primitive_class
    (4) statements -> Class CLASS_IDENTIFIER . statement_primitive_class statements
    (6) statement_defined_class -> . EquivalentTo_possible maybe_suclassof statement_class_disjoin statement_class_individuals
    (7) statement_defined_class -> . subclassof_possible EquivalentTo_possible statement_class_disjoin statement_class_individuals
    (8) statement_primitive_class -> . subclassof_possible statement_class_disjoin statement_class_individuals
    (9) EquivalentTo_possible -> . EquivalentTo JustDefined
    (10) EquivalentTo_possible -> . EquivalentTo nested
    (11) EquivalentTo_possible -> . EquivalentTo statement_closed_axiom_class
    (12) EquivalentTo_possible -> . EquivalentTo statement_enumerated_class
    (13) EquivalentTo_possible -> . EquivalentTo statement_covered_class
    (16) subclassof_possible -> . SubClassOf nested
    (17) subclassof_possible -> . SubClassOf statement_closed_axiom_class
    (18) subclassof_possible -> . SubClassOf statement_enumerated_class
    (19) subclassof_possible -> . SubClassOf statement_covered_class
    (20) subclassof_possible -> . SubClassOf primitive_class_mandatory

    EquivalentTo    shift and go to state 9
    SubClassOf      shift and go to state 10

    statement_defined_class        shift and go to state 5
    statement_primitive_class      shift and go to state 6
    EquivalentTo_possible          shift and go to state 7
    subclassof_possible            shift and go to state 8

state 5

    (1) statements -> Class CLASS_IDENTIFIER statement_defined_class . statements
    (2) statements -> Class CLASS_IDENTIFIER statement_defined_class .
    (1) statements -> . Class CLASS_IDENTIFIER statement_defined_class statements
    (2) statements -> . Class CLASS_IDENTIFIER statement_defined_class
    (3) statements -> . Class CLASS_IDENTIFIER statement_primitive_class
    (4) statements -> . Class CLASS_IDENTIFIER statement_primitive_class statements
    (5) statements -> . empty
    (120) empty -> .

  ! reduce/reduce conflict for $end resolved using rule 2 (statements -> Class CLASS_IDENTIFIER statement_defined_class .)
    $end            reduce using rule 2 (statements -> Class CLASS_IDENTIFIER statement_defined_class .)
    Class           shift and go to state 2

  ! $end            [ reduce using rule 120 (empty -> .) ]

    statements                     shift and go to state 11
    empty                          shift and go to state 3

state 6

    (3) statements -> Class CLASS_IDENTIFIER statement_primitive_class .
    (4) statements -> Class CLASS_IDENTIFIER statement_primitive_class . statements
    (1) statements -> . Class CLASS_IDENTIFIER statement_defined_class statements
    (2) statements -> . Class CLASS_IDENTIFIER statement_defined_class
    (3) statements -> . Class CLASS_IDENTIFIER statement_primitive_class
    (4) statements -> . Class CLASS_IDENTIFIER statement_primitive_class statements
    (5) statements -> . empty
    (120) empty -> .

  ! reduce/reduce conflict for $end resolved using rule 3 (statements -> Class CLASS_IDENTIFIER statement_primitive_class .)
    $end            reduce using rule 3 (statements -> Class CLASS_IDENTIFIER statement_primitive_class .)
    Class           shift and go to state 2

  ! $end            [ reduce using rule 120 (empty -> .) ]

    statements                     shift and go to state 12
    empty                          shift and go to state 3

state 7

    (6) statement_defined_class -> EquivalentTo_possible . maybe_suclassof statement_class_disjoin statement_class_individuals
    (14) maybe_suclassof -> . subclassof_possible
    (15) maybe_suclassof -> . empty
    (16) subclassof_possible -> . SubClassOf nested
    (17) subclassof_possible -> . SubClassOf statement_closed_axiom_class
    (18) subclassof_possible -> . SubClassOf statement_enumerated_class
    (19) subclassof_possible -> . SubClassOf statement_covered_class
    (20) subclassof_possible -> . SubClassOf primitive_class_mandatory
    (120) empty -> .

    SubClassOf      shift and go to state 10
    DisjointClasses reduce using rule 120 (empty -> .)
    DisjointWith    reduce using rule 120 (empty -> .)
    Individuals     reduce using rule 120 (empty -> .)
    Class           reduce using rule 120 (empty -> .)
    $end            reduce using rule 120 (empty -> .)

    maybe_suclassof                shift and go to state 13
    subclassof_possible            shift and go to state 14
    empty                          shift and go to state 15

state 8

    (7) statement_defined_class -> subclassof_possible . EquivalentTo_possible statement_class_disjoin statement_class_individuals
    (8) statement_primitive_class -> subclassof_possible . statement_class_disjoin statement_class_individuals
    (9) EquivalentTo_possible -> . EquivalentTo JustDefined
    (10) EquivalentTo_possible -> . EquivalentTo nested
    (11) EquivalentTo_possible -> . EquivalentTo statement_closed_axiom_class
    (12) EquivalentTo_possible -> . EquivalentTo statement_enumerated_class
    (13) EquivalentTo_possible -> . EquivalentTo statement_covered_class
    (48) statement_class_disjoin -> . empty
    (49) statement_class_disjoin -> . DisjointClasses statement_class_disjoin_check
    (50) statement_class_disjoin -> . DisjointWith statement_class_disjoin_check
    (120) empty -> .

    EquivalentTo    shift and go to state 9
    DisjointClasses shift and go to state 19
    DisjointWith    shift and go to state 20
    Individuals     reduce using rule 120 (empty -> .)
    Class           reduce using rule 120 (empty -> .)
    $end            reduce using rule 120 (empty -> .)

    EquivalentTo_possible          shift and go to state 16
    statement_class_disjoin        shift and go to state 17
    empty                          shift and go to state 18

state 9

    (9) EquivalentTo_possible -> EquivalentTo . JustDefined
    (10) EquivalentTo_possible -> EquivalentTo . nested
    (11) EquivalentTo_possible -> EquivalentTo . statement_closed_axiom_class
    (12) EquivalentTo_possible -> EquivalentTo . statement_enumerated_class
    (13) EquivalentTo_possible -> EquivalentTo . statement_covered_class
    (21) JustDefined -> . CLASS_IDENTIFIER COMMA expression statement_class_disjoin statement_class_individuals
    (22) JustDefined -> . CLASS_IDENTIFIER AND expression statement_class_disjoin statement_class_individuals
    (23) JustDefined -> . expression statement_class_disjoin statement_class_individuals
    (24) JustDefined -> . CLASS_IDENTIFIER
    (25) JustDefined -> . empty
    (91) nested -> . CLASS_IDENTIFIER AND nested_descriptions
    (92) nested -> . CLASS_IDENTIFIER COMMA nested_descriptions
    (109) statement_closed_axiom_class -> . CLASS_IDENTIFIER COMMA other_expression
    (110) statement_closed_axiom_class -> . CLASS_IDENTIFIER AND other_expression
    (111) statement_closed_axiom_class -> . CLASS_IDENTIFIER other_expression
    (114) statement_enumerated_class -> . LEFT_CURLY_BRACKET statement_enumerated_class_check RIGHT_CURLY_BRACKET
    (117) statement_covered_class -> . statement_covered_class_check
    (80) expression -> . usually_inside_paren
    (81) expression -> . usually_inside_paren COMMA expression
    (82) expression -> . simple_paren
    (83) expression -> . simple_paren COMMA expression
    (84) expression -> . simple_paren AND expression
    (120) empty -> .
    (118) statement_covered_class_check -> . CLASS_IDENTIFIER
    (119) statement_covered_class_check -> . CLASS_IDENTIFIER OR statement_covered_class_check
    (66) usually_inside_paren -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (67) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (68) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (69) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER
    (70) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (79) simple_paren -> . LEFT_PAREN usually_inside_paren RIGHT_PAREN
    (40) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (41) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (42) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 26
    LEFT_CURLY_BRACKET shift and go to state 29
    SubClassOf      reduce using rule 120 (empty -> .)
    DisjointClasses reduce using rule 120 (empty -> .)
    DisjointWith    reduce using rule 120 (empty -> .)
    Individuals     reduce using rule 120 (empty -> .)
    Class           reduce using rule 120 (empty -> .)
    $end            reduce using rule 120 (empty -> .)
    LEFT_PAREN      shift and go to state 34
    PROPERTY_IDENTIFIER_has shift and go to state 35
    PROPERTY_IDENTIFIER_is_Of shift and go to state 36
    PROPERTY_IDENTIFIER shift and go to state 37

    JustDefined                    shift and go to state 21
    nested                         shift and go to state 22
    statement_closed_axiom_class   shift and go to state 23
    statement_enumerated_class     shift and go to state 24
    statement_covered_class        shift and go to state 25
    expression                     shift and go to state 27
    empty                          shift and go to state 28
    statement_covered_class_check  shift and go to state 30
    usually_inside_paren           shift and go to state 31
    simple_paren                   shift and go to state 32
    statement_property_identify    shift and go to state 33

state 10

    (16) subclassof_possible -> SubClassOf . nested
    (17) subclassof_possible -> SubClassOf . statement_closed_axiom_class
    (18) subclassof_possible -> SubClassOf . statement_enumerated_class
    (19) subclassof_possible -> SubClassOf . statement_covered_class
    (20) subclassof_possible -> SubClassOf . primitive_class_mandatory
    (91) nested -> . CLASS_IDENTIFIER AND nested_descriptions
    (92) nested -> . CLASS_IDENTIFIER COMMA nested_descriptions
    (109) statement_closed_axiom_class -> . CLASS_IDENTIFIER COMMA other_expression
    (110) statement_closed_axiom_class -> . CLASS_IDENTIFIER AND other_expression
    (111) statement_closed_axiom_class -> . CLASS_IDENTIFIER other_expression
    (114) statement_enumerated_class -> . LEFT_CURLY_BRACKET statement_enumerated_class_check RIGHT_CURLY_BRACKET
    (117) statement_covered_class -> . statement_covered_class_check
    (43) primitive_class_mandatory -> . CLASS_IDENTIFIER COMMA expression statement_class_disjoin statement_class_individuals
    (44) primitive_class_mandatory -> . CLASS_IDENTIFIER AND expression statement_class_disjoin statement_class_individuals
    (45) primitive_class_mandatory -> . expression statement_class_disjoin statement_class_individuals
    (46) primitive_class_mandatory -> . CLASS_IDENTIFIER
    (47) primitive_class_mandatory -> . empty
    (118) statement_covered_class_check -> . CLASS_IDENTIFIER
    (119) statement_covered_class_check -> . CLASS_IDENTIFIER OR statement_covered_class_check
    (80) expression -> . usually_inside_paren
    (81) expression -> . usually_inside_paren COMMA expression
    (82) expression -> . simple_paren
    (83) expression -> . simple_paren COMMA expression
    (84) expression -> . simple_paren AND expression
    (120) empty -> .
    (66) usually_inside_paren -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (67) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (68) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (69) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER
    (70) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (79) simple_paren -> . LEFT_PAREN usually_inside_paren RIGHT_PAREN
    (40) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (41) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (42) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 43
    LEFT_CURLY_BRACKET shift and go to state 29
    EquivalentTo    reduce using rule 120 (empty -> .)
    DisjointClasses reduce using rule 120 (empty -> .)
    DisjointWith    reduce using rule 120 (empty -> .)
    Individuals     reduce using rule 120 (empty -> .)
    Class           reduce using rule 120 (empty -> .)
    $end            reduce using rule 120 (empty -> .)
    LEFT_PAREN      shift and go to state 34
    PROPERTY_IDENTIFIER_has shift and go to state 35
    PROPERTY_IDENTIFIER_is_Of shift and go to state 36
    PROPERTY_IDENTIFIER shift and go to state 37

    nested                         shift and go to state 38
    statement_closed_axiom_class   shift and go to state 39
    statement_enumerated_class     shift and go to state 40
    statement_covered_class        shift and go to state 41
    primitive_class_mandatory      shift and go to state 42
    statement_covered_class_check  shift and go to state 30
    expression                     shift and go to state 44
    empty                          shift and go to state 45
    usually_inside_paren           shift and go to state 31
    simple_paren                   shift and go to state 32
    statement_property_identify    shift and go to state 33

state 11

    (1) statements -> Class CLASS_IDENTIFIER statement_defined_class statements .

    $end            reduce using rule 1 (statements -> Class CLASS_IDENTIFIER statement_defined_class statements .)


state 12

    (4) statements -> Class CLASS_IDENTIFIER statement_primitive_class statements .

    $end            reduce using rule 4 (statements -> Class CLASS_IDENTIFIER statement_primitive_class statements .)


state 13

    (6) statement_defined_class -> EquivalentTo_possible maybe_suclassof . statement_class_disjoin statement_class_individuals
    (48) statement_class_disjoin -> . empty
    (49) statement_class_disjoin -> . DisjointClasses statement_class_disjoin_check
    (50) statement_class_disjoin -> . DisjointWith statement_class_disjoin_check
    (120) empty -> .

    DisjointClasses shift and go to state 19
    DisjointWith    shift and go to state 20
    Individuals     reduce using rule 120 (empty -> .)
    Class           reduce using rule 120 (empty -> .)
    $end            reduce using rule 120 (empty -> .)

    statement_class_disjoin        shift and go to state 46
    empty                          shift and go to state 18

state 14

    (14) maybe_suclassof -> subclassof_possible .

    DisjointClasses reduce using rule 14 (maybe_suclassof -> subclassof_possible .)
    DisjointWith    reduce using rule 14 (maybe_suclassof -> subclassof_possible .)
    Individuals     reduce using rule 14 (maybe_suclassof -> subclassof_possible .)
    Class           reduce using rule 14 (maybe_suclassof -> subclassof_possible .)
    $end            reduce using rule 14 (maybe_suclassof -> subclassof_possible .)


state 15

    (15) maybe_suclassof -> empty .

    DisjointClasses reduce using rule 15 (maybe_suclassof -> empty .)
    DisjointWith    reduce using rule 15 (maybe_suclassof -> empty .)
    Individuals     reduce using rule 15 (maybe_suclassof -> empty .)
    Class           reduce using rule 15 (maybe_suclassof -> empty .)
    $end            reduce using rule 15 (maybe_suclassof -> empty .)


state 16

    (7) statement_defined_class -> subclassof_possible EquivalentTo_possible . statement_class_disjoin statement_class_individuals
    (48) statement_class_disjoin -> . empty
    (49) statement_class_disjoin -> . DisjointClasses statement_class_disjoin_check
    (50) statement_class_disjoin -> . DisjointWith statement_class_disjoin_check
    (120) empty -> .

    DisjointClasses shift and go to state 19
    DisjointWith    shift and go to state 20
    Individuals     reduce using rule 120 (empty -> .)
    Class           reduce using rule 120 (empty -> .)
    $end            reduce using rule 120 (empty -> .)

    statement_class_disjoin        shift and go to state 47
    empty                          shift and go to state 18

state 17

    (8) statement_primitive_class -> subclassof_possible statement_class_disjoin . statement_class_individuals
    (53) statement_class_individuals -> . empty
    (54) statement_class_individuals -> . Individuals statement_class_individuals_check
    (120) empty -> .

    Individuals     shift and go to state 50
    Class           reduce using rule 120 (empty -> .)
    $end            reduce using rule 120 (empty -> .)

    statement_class_individuals    shift and go to state 48
    empty                          shift and go to state 49

state 18

    (48) statement_class_disjoin -> empty .

    Individuals     reduce using rule 48 (statement_class_disjoin -> empty .)
    Class           reduce using rule 48 (statement_class_disjoin -> empty .)
    $end            reduce using rule 48 (statement_class_disjoin -> empty .)
    SubClassOf      reduce using rule 48 (statement_class_disjoin -> empty .)
    DisjointClasses reduce using rule 48 (statement_class_disjoin -> empty .)
    DisjointWith    reduce using rule 48 (statement_class_disjoin -> empty .)
    EquivalentTo    reduce using rule 48 (statement_class_disjoin -> empty .)


state 19

    (49) statement_class_disjoin -> DisjointClasses . statement_class_disjoin_check
    (51) statement_class_disjoin_check -> . CLASS_IDENTIFIER
    (52) statement_class_disjoin_check -> . CLASS_IDENTIFIER COMMA statement_class_disjoin_check

    CLASS_IDENTIFIER shift and go to state 52

    statement_class_disjoin_check  shift and go to state 51

state 20

    (50) statement_class_disjoin -> DisjointWith . statement_class_disjoin_check
    (51) statement_class_disjoin_check -> . CLASS_IDENTIFIER
    (52) statement_class_disjoin_check -> . CLASS_IDENTIFIER COMMA statement_class_disjoin_check

    CLASS_IDENTIFIER shift and go to state 52

    statement_class_disjoin_check  shift and go to state 53

state 21

    (9) EquivalentTo_possible -> EquivalentTo JustDefined .

    SubClassOf      reduce using rule 9 (EquivalentTo_possible -> EquivalentTo JustDefined .)
    DisjointClasses reduce using rule 9 (EquivalentTo_possible -> EquivalentTo JustDefined .)
    DisjointWith    reduce using rule 9 (EquivalentTo_possible -> EquivalentTo JustDefined .)
    Individuals     reduce using rule 9 (EquivalentTo_possible -> EquivalentTo JustDefined .)
    Class           reduce using rule 9 (EquivalentTo_possible -> EquivalentTo JustDefined .)
    $end            reduce using rule 9 (EquivalentTo_possible -> EquivalentTo JustDefined .)


state 22

    (10) EquivalentTo_possible -> EquivalentTo nested .

    SubClassOf      reduce using rule 10 (EquivalentTo_possible -> EquivalentTo nested .)
    DisjointClasses reduce using rule 10 (EquivalentTo_possible -> EquivalentTo nested .)
    DisjointWith    reduce using rule 10 (EquivalentTo_possible -> EquivalentTo nested .)
    Individuals     reduce using rule 10 (EquivalentTo_possible -> EquivalentTo nested .)
    Class           reduce using rule 10 (EquivalentTo_possible -> EquivalentTo nested .)
    $end            reduce using rule 10 (EquivalentTo_possible -> EquivalentTo nested .)


state 23

    (11) EquivalentTo_possible -> EquivalentTo statement_closed_axiom_class .

    SubClassOf      reduce using rule 11 (EquivalentTo_possible -> EquivalentTo statement_closed_axiom_class .)
    DisjointClasses reduce using rule 11 (EquivalentTo_possible -> EquivalentTo statement_closed_axiom_class .)
    DisjointWith    reduce using rule 11 (EquivalentTo_possible -> EquivalentTo statement_closed_axiom_class .)
    Individuals     reduce using rule 11 (EquivalentTo_possible -> EquivalentTo statement_closed_axiom_class .)
    Class           reduce using rule 11 (EquivalentTo_possible -> EquivalentTo statement_closed_axiom_class .)
    $end            reduce using rule 11 (EquivalentTo_possible -> EquivalentTo statement_closed_axiom_class .)


state 24

    (12) EquivalentTo_possible -> EquivalentTo statement_enumerated_class .

    SubClassOf      reduce using rule 12 (EquivalentTo_possible -> EquivalentTo statement_enumerated_class .)
    DisjointClasses reduce using rule 12 (EquivalentTo_possible -> EquivalentTo statement_enumerated_class .)
    DisjointWith    reduce using rule 12 (EquivalentTo_possible -> EquivalentTo statement_enumerated_class .)
    Individuals     reduce using rule 12 (EquivalentTo_possible -> EquivalentTo statement_enumerated_class .)
    Class           reduce using rule 12 (EquivalentTo_possible -> EquivalentTo statement_enumerated_class .)
    $end            reduce using rule 12 (EquivalentTo_possible -> EquivalentTo statement_enumerated_class .)


state 25

    (13) EquivalentTo_possible -> EquivalentTo statement_covered_class .

    SubClassOf      reduce using rule 13 (EquivalentTo_possible -> EquivalentTo statement_covered_class .)
    DisjointClasses reduce using rule 13 (EquivalentTo_possible -> EquivalentTo statement_covered_class .)
    DisjointWith    reduce using rule 13 (EquivalentTo_possible -> EquivalentTo statement_covered_class .)
    Individuals     reduce using rule 13 (EquivalentTo_possible -> EquivalentTo statement_covered_class .)
    Class           reduce using rule 13 (EquivalentTo_possible -> EquivalentTo statement_covered_class .)
    $end            reduce using rule 13 (EquivalentTo_possible -> EquivalentTo statement_covered_class .)


state 26

    (21) JustDefined -> CLASS_IDENTIFIER . COMMA expression statement_class_disjoin statement_class_individuals
    (22) JustDefined -> CLASS_IDENTIFIER . AND expression statement_class_disjoin statement_class_individuals
    (24) JustDefined -> CLASS_IDENTIFIER .
    (91) nested -> CLASS_IDENTIFIER . AND nested_descriptions
    (92) nested -> CLASS_IDENTIFIER . COMMA nested_descriptions
    (109) statement_closed_axiom_class -> CLASS_IDENTIFIER . COMMA other_expression
    (110) statement_closed_axiom_class -> CLASS_IDENTIFIER . AND other_expression
    (111) statement_closed_axiom_class -> CLASS_IDENTIFIER . other_expression
    (118) statement_covered_class_check -> CLASS_IDENTIFIER .
    (119) statement_covered_class_check -> CLASS_IDENTIFIER . OR statement_covered_class_check
    (85) other_expression -> . usually_inside_paren
    (86) other_expression -> . usually_others_paren
    (87) other_expression -> . usually_inside_paren COMMA other_expression
    (88) other_expression -> . simple_paren
    (89) other_expression -> . simple_paren AND other_expression
    (90) other_expression -> . usually_others_paren AND other_expression
    (66) usually_inside_paren -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (67) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (68) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (69) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER
    (70) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (71) usually_others_paren -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (72) usually_others_paren -> . statement_property_identify statement_others_reserved_word LEFT_PAREN usually_others_others_paren
    (73) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE
    (74) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (75) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER
    (76) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (79) simple_paren -> . LEFT_PAREN usually_inside_paren RIGHT_PAREN
    (40) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (41) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (42) statement_property_identify -> . PROPERTY_IDENTIFIER

  ! reduce/reduce conflict for SubClassOf resolved using rule 24 (JustDefined -> CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for DisjointClasses resolved using rule 24 (JustDefined -> CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for DisjointWith resolved using rule 24 (JustDefined -> CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for Individuals resolved using rule 24 (JustDefined -> CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for Class resolved using rule 24 (JustDefined -> CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 24 (JustDefined -> CLASS_IDENTIFIER .)
    COMMA           shift and go to state 54
    AND             shift and go to state 55
    SubClassOf      reduce using rule 24 (JustDefined -> CLASS_IDENTIFIER .)
    DisjointClasses reduce using rule 24 (JustDefined -> CLASS_IDENTIFIER .)
    DisjointWith    reduce using rule 24 (JustDefined -> CLASS_IDENTIFIER .)
    Individuals     reduce using rule 24 (JustDefined -> CLASS_IDENTIFIER .)
    Class           reduce using rule 24 (JustDefined -> CLASS_IDENTIFIER .)
    $end            reduce using rule 24 (JustDefined -> CLASS_IDENTIFIER .)
    OR              shift and go to state 57
    LEFT_PAREN      shift and go to state 34
    PROPERTY_IDENTIFIER_has shift and go to state 35
    PROPERTY_IDENTIFIER_is_Of shift and go to state 36
    PROPERTY_IDENTIFIER shift and go to state 37

  ! SubClassOf      [ reduce using rule 118 (statement_covered_class_check -> CLASS_IDENTIFIER .) ]
  ! DisjointClasses [ reduce using rule 118 (statement_covered_class_check -> CLASS_IDENTIFIER .) ]
  ! DisjointWith    [ reduce using rule 118 (statement_covered_class_check -> CLASS_IDENTIFIER .) ]
  ! Individuals     [ reduce using rule 118 (statement_covered_class_check -> CLASS_IDENTIFIER .) ]
  ! Class           [ reduce using rule 118 (statement_covered_class_check -> CLASS_IDENTIFIER .) ]
  ! $end            [ reduce using rule 118 (statement_covered_class_check -> CLASS_IDENTIFIER .) ]

    other_expression               shift and go to state 56
    usually_inside_paren           shift and go to state 58
    usually_others_paren           shift and go to state 59
    simple_paren                   shift and go to state 60
    statement_property_identify    shift and go to state 61

state 27

    (23) JustDefined -> expression . statement_class_disjoin statement_class_individuals
    (48) statement_class_disjoin -> . empty
    (49) statement_class_disjoin -> . DisjointClasses statement_class_disjoin_check
    (50) statement_class_disjoin -> . DisjointWith statement_class_disjoin_check
    (120) empty -> .

  ! shift/reduce conflict for DisjointClasses resolved as shift
  ! shift/reduce conflict for DisjointWith resolved as shift
    DisjointClasses shift and go to state 19
    DisjointWith    shift and go to state 20
    Individuals     reduce using rule 120 (empty -> .)
    SubClassOf      reduce using rule 120 (empty -> .)
    Class           reduce using rule 120 (empty -> .)
    $end            reduce using rule 120 (empty -> .)

  ! DisjointClasses [ reduce using rule 120 (empty -> .) ]
  ! DisjointWith    [ reduce using rule 120 (empty -> .) ]

    statement_class_disjoin        shift and go to state 62
    empty                          shift and go to state 18

state 28

    (25) JustDefined -> empty .

    SubClassOf      reduce using rule 25 (JustDefined -> empty .)
    DisjointClasses reduce using rule 25 (JustDefined -> empty .)
    DisjointWith    reduce using rule 25 (JustDefined -> empty .)
    Individuals     reduce using rule 25 (JustDefined -> empty .)
    Class           reduce using rule 25 (JustDefined -> empty .)
    $end            reduce using rule 25 (JustDefined -> empty .)


state 29

    (114) statement_enumerated_class -> LEFT_CURLY_BRACKET . statement_enumerated_class_check RIGHT_CURLY_BRACKET
    (115) statement_enumerated_class_check -> . IndividualNames
    (116) statement_enumerated_class_check -> . IndividualNames COMMA statement_enumerated_class_check

    IndividualNames shift and go to state 64

    statement_enumerated_class_check shift and go to state 63

state 30

    (117) statement_covered_class -> statement_covered_class_check .

    SubClassOf      reduce using rule 117 (statement_covered_class -> statement_covered_class_check .)
    DisjointClasses reduce using rule 117 (statement_covered_class -> statement_covered_class_check .)
    DisjointWith    reduce using rule 117 (statement_covered_class -> statement_covered_class_check .)
    Individuals     reduce using rule 117 (statement_covered_class -> statement_covered_class_check .)
    Class           reduce using rule 117 (statement_covered_class -> statement_covered_class_check .)
    $end            reduce using rule 117 (statement_covered_class -> statement_covered_class_check .)
    EquivalentTo    reduce using rule 117 (statement_covered_class -> statement_covered_class_check .)


state 31

    (80) expression -> usually_inside_paren .
    (81) expression -> usually_inside_paren . COMMA expression

    DisjointClasses reduce using rule 80 (expression -> usually_inside_paren .)
    DisjointWith    reduce using rule 80 (expression -> usually_inside_paren .)
    Individuals     reduce using rule 80 (expression -> usually_inside_paren .)
    SubClassOf      reduce using rule 80 (expression -> usually_inside_paren .)
    Class           reduce using rule 80 (expression -> usually_inside_paren .)
    $end            reduce using rule 80 (expression -> usually_inside_paren .)
    EquivalentTo    reduce using rule 80 (expression -> usually_inside_paren .)
    COMMA           shift and go to state 65


state 32

    (82) expression -> simple_paren .
    (83) expression -> simple_paren . COMMA expression
    (84) expression -> simple_paren . AND expression

    DisjointClasses reduce using rule 82 (expression -> simple_paren .)
    DisjointWith    reduce using rule 82 (expression -> simple_paren .)
    Individuals     reduce using rule 82 (expression -> simple_paren .)
    SubClassOf      reduce using rule 82 (expression -> simple_paren .)
    Class           reduce using rule 82 (expression -> simple_paren .)
    $end            reduce using rule 82 (expression -> simple_paren .)
    EquivalentTo    reduce using rule 82 (expression -> simple_paren .)
    COMMA           shift and go to state 66
    AND             shift and go to state 67


state 33

    (66) usually_inside_paren -> statement_property_identify . statement_reserved_word CLASS_IDENTIFIER
    (67) usually_inside_paren -> statement_property_identify . statement_reserved_word NAMESPACEID DATA_TYPE
    (68) usually_inside_paren -> statement_property_identify . statement_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (69) usually_inside_paren -> statement_property_identify . statement_reserved_word NUMBER CLASS_IDENTIFIER
    (70) usually_inside_paren -> statement_property_identify . statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (26) statement_reserved_word -> . SOME
    (27) statement_reserved_word -> . EXACTLY
    (28) statement_reserved_word -> . MIN
    (29) statement_reserved_word -> . MAX
    (30) statement_reserved_word -> . OR
    (31) statement_reserved_word -> . AND
    (32) statement_reserved_word -> . VALUE

    SOME            shift and go to state 69
    EXACTLY         shift and go to state 70
    MIN             shift and go to state 71
    MAX             shift and go to state 72
    OR              shift and go to state 73
    AND             shift and go to state 74
    VALUE           shift and go to state 75

    statement_reserved_word        shift and go to state 68

state 34

    (79) simple_paren -> LEFT_PAREN . usually_inside_paren RIGHT_PAREN
    (66) usually_inside_paren -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (67) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (68) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (69) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER
    (70) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (40) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (41) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (42) statement_property_identify -> . PROPERTY_IDENTIFIER

    PROPERTY_IDENTIFIER_has shift and go to state 35
    PROPERTY_IDENTIFIER_is_Of shift and go to state 36
    PROPERTY_IDENTIFIER shift and go to state 37

    usually_inside_paren           shift and go to state 76
    statement_property_identify    shift and go to state 33

state 35

    (40) statement_property_identify -> PROPERTY_IDENTIFIER_has .

    SOME            reduce using rule 40 (statement_property_identify -> PROPERTY_IDENTIFIER_has .)
    EXACTLY         reduce using rule 40 (statement_property_identify -> PROPERTY_IDENTIFIER_has .)
    MIN             reduce using rule 40 (statement_property_identify -> PROPERTY_IDENTIFIER_has .)
    MAX             reduce using rule 40 (statement_property_identify -> PROPERTY_IDENTIFIER_has .)
    OR              reduce using rule 40 (statement_property_identify -> PROPERTY_IDENTIFIER_has .)
    AND             reduce using rule 40 (statement_property_identify -> PROPERTY_IDENTIFIER_has .)
    VALUE           reduce using rule 40 (statement_property_identify -> PROPERTY_IDENTIFIER_has .)
    ONLY            reduce using rule 40 (statement_property_identify -> PROPERTY_IDENTIFIER_has .)


state 36

    (41) statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .

    SOME            reduce using rule 41 (statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .)
    EXACTLY         reduce using rule 41 (statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .)
    MIN             reduce using rule 41 (statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .)
    MAX             reduce using rule 41 (statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .)
    OR              reduce using rule 41 (statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .)
    AND             reduce using rule 41 (statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .)
    VALUE           reduce using rule 41 (statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .)
    ONLY            reduce using rule 41 (statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .)


state 37

    (42) statement_property_identify -> PROPERTY_IDENTIFIER .

    SOME            reduce using rule 42 (statement_property_identify -> PROPERTY_IDENTIFIER .)
    EXACTLY         reduce using rule 42 (statement_property_identify -> PROPERTY_IDENTIFIER .)
    MIN             reduce using rule 42 (statement_property_identify -> PROPERTY_IDENTIFIER .)
    MAX             reduce using rule 42 (statement_property_identify -> PROPERTY_IDENTIFIER .)
    OR              reduce using rule 42 (statement_property_identify -> PROPERTY_IDENTIFIER .)
    AND             reduce using rule 42 (statement_property_identify -> PROPERTY_IDENTIFIER .)
    VALUE           reduce using rule 42 (statement_property_identify -> PROPERTY_IDENTIFIER .)
    ONLY            reduce using rule 42 (statement_property_identify -> PROPERTY_IDENTIFIER .)


state 38

    (16) subclassof_possible -> SubClassOf nested .

    EquivalentTo    reduce using rule 16 (subclassof_possible -> SubClassOf nested .)
    DisjointClasses reduce using rule 16 (subclassof_possible -> SubClassOf nested .)
    DisjointWith    reduce using rule 16 (subclassof_possible -> SubClassOf nested .)
    Individuals     reduce using rule 16 (subclassof_possible -> SubClassOf nested .)
    Class           reduce using rule 16 (subclassof_possible -> SubClassOf nested .)
    $end            reduce using rule 16 (subclassof_possible -> SubClassOf nested .)


state 39

    (17) subclassof_possible -> SubClassOf statement_closed_axiom_class .

    EquivalentTo    reduce using rule 17 (subclassof_possible -> SubClassOf statement_closed_axiom_class .)
    DisjointClasses reduce using rule 17 (subclassof_possible -> SubClassOf statement_closed_axiom_class .)
    DisjointWith    reduce using rule 17 (subclassof_possible -> SubClassOf statement_closed_axiom_class .)
    Individuals     reduce using rule 17 (subclassof_possible -> SubClassOf statement_closed_axiom_class .)
    Class           reduce using rule 17 (subclassof_possible -> SubClassOf statement_closed_axiom_class .)
    $end            reduce using rule 17 (subclassof_possible -> SubClassOf statement_closed_axiom_class .)


state 40

    (18) subclassof_possible -> SubClassOf statement_enumerated_class .

    EquivalentTo    reduce using rule 18 (subclassof_possible -> SubClassOf statement_enumerated_class .)
    DisjointClasses reduce using rule 18 (subclassof_possible -> SubClassOf statement_enumerated_class .)
    DisjointWith    reduce using rule 18 (subclassof_possible -> SubClassOf statement_enumerated_class .)
    Individuals     reduce using rule 18 (subclassof_possible -> SubClassOf statement_enumerated_class .)
    Class           reduce using rule 18 (subclassof_possible -> SubClassOf statement_enumerated_class .)
    $end            reduce using rule 18 (subclassof_possible -> SubClassOf statement_enumerated_class .)


state 41

    (19) subclassof_possible -> SubClassOf statement_covered_class .

    EquivalentTo    reduce using rule 19 (subclassof_possible -> SubClassOf statement_covered_class .)
    DisjointClasses reduce using rule 19 (subclassof_possible -> SubClassOf statement_covered_class .)
    DisjointWith    reduce using rule 19 (subclassof_possible -> SubClassOf statement_covered_class .)
    Individuals     reduce using rule 19 (subclassof_possible -> SubClassOf statement_covered_class .)
    Class           reduce using rule 19 (subclassof_possible -> SubClassOf statement_covered_class .)
    $end            reduce using rule 19 (subclassof_possible -> SubClassOf statement_covered_class .)


state 42

    (20) subclassof_possible -> SubClassOf primitive_class_mandatory .

    EquivalentTo    reduce using rule 20 (subclassof_possible -> SubClassOf primitive_class_mandatory .)
    DisjointClasses reduce using rule 20 (subclassof_possible -> SubClassOf primitive_class_mandatory .)
    DisjointWith    reduce using rule 20 (subclassof_possible -> SubClassOf primitive_class_mandatory .)
    Individuals     reduce using rule 20 (subclassof_possible -> SubClassOf primitive_class_mandatory .)
    Class           reduce using rule 20 (subclassof_possible -> SubClassOf primitive_class_mandatory .)
    $end            reduce using rule 20 (subclassof_possible -> SubClassOf primitive_class_mandatory .)


state 43

    (91) nested -> CLASS_IDENTIFIER . AND nested_descriptions
    (92) nested -> CLASS_IDENTIFIER . COMMA nested_descriptions
    (109) statement_closed_axiom_class -> CLASS_IDENTIFIER . COMMA other_expression
    (110) statement_closed_axiom_class -> CLASS_IDENTIFIER . AND other_expression
    (111) statement_closed_axiom_class -> CLASS_IDENTIFIER . other_expression
    (43) primitive_class_mandatory -> CLASS_IDENTIFIER . COMMA expression statement_class_disjoin statement_class_individuals
    (44) primitive_class_mandatory -> CLASS_IDENTIFIER . AND expression statement_class_disjoin statement_class_individuals
    (46) primitive_class_mandatory -> CLASS_IDENTIFIER .
    (118) statement_covered_class_check -> CLASS_IDENTIFIER .
    (119) statement_covered_class_check -> CLASS_IDENTIFIER . OR statement_covered_class_check
    (85) other_expression -> . usually_inside_paren
    (86) other_expression -> . usually_others_paren
    (87) other_expression -> . usually_inside_paren COMMA other_expression
    (88) other_expression -> . simple_paren
    (89) other_expression -> . simple_paren AND other_expression
    (90) other_expression -> . usually_others_paren AND other_expression
    (66) usually_inside_paren -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (67) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (68) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (69) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER
    (70) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (71) usually_others_paren -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (72) usually_others_paren -> . statement_property_identify statement_others_reserved_word LEFT_PAREN usually_others_others_paren
    (73) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE
    (74) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (75) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER
    (76) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (79) simple_paren -> . LEFT_PAREN usually_inside_paren RIGHT_PAREN
    (40) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (41) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (42) statement_property_identify -> . PROPERTY_IDENTIFIER

  ! reduce/reduce conflict for EquivalentTo resolved using rule 46 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for DisjointClasses resolved using rule 46 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for DisjointWith resolved using rule 46 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for Individuals resolved using rule 46 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for Class resolved using rule 46 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 46 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    AND             shift and go to state 77
    COMMA           shift and go to state 78
    EquivalentTo    reduce using rule 46 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    DisjointClasses reduce using rule 46 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    DisjointWith    reduce using rule 46 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    Individuals     reduce using rule 46 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    Class           reduce using rule 46 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    $end            reduce using rule 46 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    OR              shift and go to state 57
    LEFT_PAREN      shift and go to state 34
    PROPERTY_IDENTIFIER_has shift and go to state 35
    PROPERTY_IDENTIFIER_is_Of shift and go to state 36
    PROPERTY_IDENTIFIER shift and go to state 37

  ! EquivalentTo    [ reduce using rule 118 (statement_covered_class_check -> CLASS_IDENTIFIER .) ]
  ! DisjointClasses [ reduce using rule 118 (statement_covered_class_check -> CLASS_IDENTIFIER .) ]
  ! DisjointWith    [ reduce using rule 118 (statement_covered_class_check -> CLASS_IDENTIFIER .) ]
  ! Individuals     [ reduce using rule 118 (statement_covered_class_check -> CLASS_IDENTIFIER .) ]
  ! Class           [ reduce using rule 118 (statement_covered_class_check -> CLASS_IDENTIFIER .) ]
  ! $end            [ reduce using rule 118 (statement_covered_class_check -> CLASS_IDENTIFIER .) ]

    other_expression               shift and go to state 56
    usually_inside_paren           shift and go to state 58
    usually_others_paren           shift and go to state 59
    simple_paren                   shift and go to state 60
    statement_property_identify    shift and go to state 61

state 44

    (45) primitive_class_mandatory -> expression . statement_class_disjoin statement_class_individuals
    (48) statement_class_disjoin -> . empty
    (49) statement_class_disjoin -> . DisjointClasses statement_class_disjoin_check
    (50) statement_class_disjoin -> . DisjointWith statement_class_disjoin_check
    (120) empty -> .

  ! shift/reduce conflict for DisjointClasses resolved as shift
  ! shift/reduce conflict for DisjointWith resolved as shift
    DisjointClasses shift and go to state 19
    DisjointWith    shift and go to state 20
    Individuals     reduce using rule 120 (empty -> .)
    EquivalentTo    reduce using rule 120 (empty -> .)
    Class           reduce using rule 120 (empty -> .)
    $end            reduce using rule 120 (empty -> .)

  ! DisjointClasses [ reduce using rule 120 (empty -> .) ]
  ! DisjointWith    [ reduce using rule 120 (empty -> .) ]

    statement_class_disjoin        shift and go to state 79
    empty                          shift and go to state 18

state 45

    (47) primitive_class_mandatory -> empty .

    EquivalentTo    reduce using rule 47 (primitive_class_mandatory -> empty .)
    DisjointClasses reduce using rule 47 (primitive_class_mandatory -> empty .)
    DisjointWith    reduce using rule 47 (primitive_class_mandatory -> empty .)
    Individuals     reduce using rule 47 (primitive_class_mandatory -> empty .)
    Class           reduce using rule 47 (primitive_class_mandatory -> empty .)
    $end            reduce using rule 47 (primitive_class_mandatory -> empty .)


state 46

    (6) statement_defined_class -> EquivalentTo_possible maybe_suclassof statement_class_disjoin . statement_class_individuals
    (53) statement_class_individuals -> . empty
    (54) statement_class_individuals -> . Individuals statement_class_individuals_check
    (120) empty -> .

    Individuals     shift and go to state 50
    Class           reduce using rule 120 (empty -> .)
    $end            reduce using rule 120 (empty -> .)

    statement_class_individuals    shift and go to state 80
    empty                          shift and go to state 49

state 47

    (7) statement_defined_class -> subclassof_possible EquivalentTo_possible statement_class_disjoin . statement_class_individuals
    (53) statement_class_individuals -> . empty
    (54) statement_class_individuals -> . Individuals statement_class_individuals_check
    (120) empty -> .

    Individuals     shift and go to state 50
    Class           reduce using rule 120 (empty -> .)
    $end            reduce using rule 120 (empty -> .)

    statement_class_individuals    shift and go to state 81
    empty                          shift and go to state 49

state 48

    (8) statement_primitive_class -> subclassof_possible statement_class_disjoin statement_class_individuals .

    Class           reduce using rule 8 (statement_primitive_class -> subclassof_possible statement_class_disjoin statement_class_individuals .)
    $end            reduce using rule 8 (statement_primitive_class -> subclassof_possible statement_class_disjoin statement_class_individuals .)


state 49

    (53) statement_class_individuals -> empty .

    Class           reduce using rule 53 (statement_class_individuals -> empty .)
    $end            reduce using rule 53 (statement_class_individuals -> empty .)
    SubClassOf      reduce using rule 53 (statement_class_individuals -> empty .)
    DisjointClasses reduce using rule 53 (statement_class_individuals -> empty .)
    DisjointWith    reduce using rule 53 (statement_class_individuals -> empty .)
    Individuals     reduce using rule 53 (statement_class_individuals -> empty .)
    EquivalentTo    reduce using rule 53 (statement_class_individuals -> empty .)


state 50

    (54) statement_class_individuals -> Individuals . statement_class_individuals_check
    (55) statement_class_individuals_check -> . IndividualNames
    (56) statement_class_individuals_check -> . IndividualNames COMMA statement_class_individuals_check

    IndividualNames shift and go to state 83

    statement_class_individuals_check shift and go to state 82

state 51

    (49) statement_class_disjoin -> DisjointClasses statement_class_disjoin_check .

    Individuals     reduce using rule 49 (statement_class_disjoin -> DisjointClasses statement_class_disjoin_check .)
    Class           reduce using rule 49 (statement_class_disjoin -> DisjointClasses statement_class_disjoin_check .)
    $end            reduce using rule 49 (statement_class_disjoin -> DisjointClasses statement_class_disjoin_check .)
    SubClassOf      reduce using rule 49 (statement_class_disjoin -> DisjointClasses statement_class_disjoin_check .)
    DisjointClasses reduce using rule 49 (statement_class_disjoin -> DisjointClasses statement_class_disjoin_check .)
    DisjointWith    reduce using rule 49 (statement_class_disjoin -> DisjointClasses statement_class_disjoin_check .)
    EquivalentTo    reduce using rule 49 (statement_class_disjoin -> DisjointClasses statement_class_disjoin_check .)


state 52

    (51) statement_class_disjoin_check -> CLASS_IDENTIFIER .
    (52) statement_class_disjoin_check -> CLASS_IDENTIFIER . COMMA statement_class_disjoin_check

    Individuals     reduce using rule 51 (statement_class_disjoin_check -> CLASS_IDENTIFIER .)
    Class           reduce using rule 51 (statement_class_disjoin_check -> CLASS_IDENTIFIER .)
    $end            reduce using rule 51 (statement_class_disjoin_check -> CLASS_IDENTIFIER .)
    SubClassOf      reduce using rule 51 (statement_class_disjoin_check -> CLASS_IDENTIFIER .)
    DisjointClasses reduce using rule 51 (statement_class_disjoin_check -> CLASS_IDENTIFIER .)
    DisjointWith    reduce using rule 51 (statement_class_disjoin_check -> CLASS_IDENTIFIER .)
    EquivalentTo    reduce using rule 51 (statement_class_disjoin_check -> CLASS_IDENTIFIER .)
    COMMA           shift and go to state 84


state 53

    (50) statement_class_disjoin -> DisjointWith statement_class_disjoin_check .

    Individuals     reduce using rule 50 (statement_class_disjoin -> DisjointWith statement_class_disjoin_check .)
    Class           reduce using rule 50 (statement_class_disjoin -> DisjointWith statement_class_disjoin_check .)
    $end            reduce using rule 50 (statement_class_disjoin -> DisjointWith statement_class_disjoin_check .)
    SubClassOf      reduce using rule 50 (statement_class_disjoin -> DisjointWith statement_class_disjoin_check .)
    DisjointClasses reduce using rule 50 (statement_class_disjoin -> DisjointWith statement_class_disjoin_check .)
    DisjointWith    reduce using rule 50 (statement_class_disjoin -> DisjointWith statement_class_disjoin_check .)
    EquivalentTo    reduce using rule 50 (statement_class_disjoin -> DisjointWith statement_class_disjoin_check .)


state 54

    (21) JustDefined -> CLASS_IDENTIFIER COMMA . expression statement_class_disjoin statement_class_individuals
    (92) nested -> CLASS_IDENTIFIER COMMA . nested_descriptions
    (109) statement_closed_axiom_class -> CLASS_IDENTIFIER COMMA . other_expression
    (80) expression -> . usually_inside_paren
    (81) expression -> . usually_inside_paren COMMA expression
    (82) expression -> . simple_paren
    (83) expression -> . simple_paren COMMA expression
    (84) expression -> . simple_paren AND expression
    (93) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (94) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (95) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (96) nested_descriptions -> . statement_property_identify statement_others_reserved_word nested_descriptions
    (97) nested_descriptions -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (98) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER
    (99) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE IndividualNames
    (100) nested_descriptions -> . statement_property_identify VALUE IndividualNames
    (101) nested_descriptions -> . statement_property_identify VALUE CLASS_IDENTIFIER
    (102) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE nested_descriptions
    (103) nested_descriptions -> . statement_property_identify statement_others_reserved_word NUMBER nested_descriptions
    (104) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER
    (105) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY nested_descriptions
    (106) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER
    (107) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME nested_descriptions
    (108) nested_descriptions -> . CLASS_IDENTIFIER
    (85) other_expression -> . usually_inside_paren
    (86) other_expression -> . usually_others_paren
    (87) other_expression -> . usually_inside_paren COMMA other_expression
    (88) other_expression -> . simple_paren
    (89) other_expression -> . simple_paren AND other_expression
    (90) other_expression -> . usually_others_paren AND other_expression
    (66) usually_inside_paren -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (67) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (68) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (69) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER
    (70) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (79) simple_paren -> . LEFT_PAREN usually_inside_paren RIGHT_PAREN
    (40) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (41) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (42) statement_property_identify -> . PROPERTY_IDENTIFIER
    (71) usually_others_paren -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (72) usually_others_paren -> . statement_property_identify statement_others_reserved_word LEFT_PAREN usually_others_others_paren
    (73) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE
    (74) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (75) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER
    (76) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET

    LEFT_PAREN      shift and go to state 91
    CLASS_IDENTIFIER shift and go to state 85
    PROPERTY_IDENTIFIER_has shift and go to state 35
    PROPERTY_IDENTIFIER_is_Of shift and go to state 36
    PROPERTY_IDENTIFIER shift and go to state 37

    expression                     shift and go to state 86
    nested_descriptions            shift and go to state 87
    other_expression               shift and go to state 88
    usually_inside_paren           shift and go to state 89
    simple_paren                   shift and go to state 90
    statement_property_identify    shift and go to state 92
    usually_others_paren           shift and go to state 59

state 55

    (22) JustDefined -> CLASS_IDENTIFIER AND . expression statement_class_disjoin statement_class_individuals
    (91) nested -> CLASS_IDENTIFIER AND . nested_descriptions
    (110) statement_closed_axiom_class -> CLASS_IDENTIFIER AND . other_expression
    (80) expression -> . usually_inside_paren
    (81) expression -> . usually_inside_paren COMMA expression
    (82) expression -> . simple_paren
    (83) expression -> . simple_paren COMMA expression
    (84) expression -> . simple_paren AND expression
    (93) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (94) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (95) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (96) nested_descriptions -> . statement_property_identify statement_others_reserved_word nested_descriptions
    (97) nested_descriptions -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (98) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER
    (99) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE IndividualNames
    (100) nested_descriptions -> . statement_property_identify VALUE IndividualNames
    (101) nested_descriptions -> . statement_property_identify VALUE CLASS_IDENTIFIER
    (102) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE nested_descriptions
    (103) nested_descriptions -> . statement_property_identify statement_others_reserved_word NUMBER nested_descriptions
    (104) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER
    (105) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY nested_descriptions
    (106) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER
    (107) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME nested_descriptions
    (108) nested_descriptions -> . CLASS_IDENTIFIER
    (85) other_expression -> . usually_inside_paren
    (86) other_expression -> . usually_others_paren
    (87) other_expression -> . usually_inside_paren COMMA other_expression
    (88) other_expression -> . simple_paren
    (89) other_expression -> . simple_paren AND other_expression
    (90) other_expression -> . usually_others_paren AND other_expression
    (66) usually_inside_paren -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (67) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (68) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (69) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER
    (70) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (79) simple_paren -> . LEFT_PAREN usually_inside_paren RIGHT_PAREN
    (40) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (41) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (42) statement_property_identify -> . PROPERTY_IDENTIFIER
    (71) usually_others_paren -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (72) usually_others_paren -> . statement_property_identify statement_others_reserved_word LEFT_PAREN usually_others_others_paren
    (73) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE
    (74) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (75) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER
    (76) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET

    LEFT_PAREN      shift and go to state 91
    CLASS_IDENTIFIER shift and go to state 85
    PROPERTY_IDENTIFIER_has shift and go to state 35
    PROPERTY_IDENTIFIER_is_Of shift and go to state 36
    PROPERTY_IDENTIFIER shift and go to state 37

    expression                     shift and go to state 93
    nested_descriptions            shift and go to state 94
    other_expression               shift and go to state 95
    usually_inside_paren           shift and go to state 89
    simple_paren                   shift and go to state 90
    statement_property_identify    shift and go to state 92
    usually_others_paren           shift and go to state 59

state 56

    (111) statement_closed_axiom_class -> CLASS_IDENTIFIER other_expression .

    SubClassOf      reduce using rule 111 (statement_closed_axiom_class -> CLASS_IDENTIFIER other_expression .)
    DisjointClasses reduce using rule 111 (statement_closed_axiom_class -> CLASS_IDENTIFIER other_expression .)
    DisjointWith    reduce using rule 111 (statement_closed_axiom_class -> CLASS_IDENTIFIER other_expression .)
    Individuals     reduce using rule 111 (statement_closed_axiom_class -> CLASS_IDENTIFIER other_expression .)
    Class           reduce using rule 111 (statement_closed_axiom_class -> CLASS_IDENTIFIER other_expression .)
    $end            reduce using rule 111 (statement_closed_axiom_class -> CLASS_IDENTIFIER other_expression .)
    EquivalentTo    reduce using rule 111 (statement_closed_axiom_class -> CLASS_IDENTIFIER other_expression .)


state 57

    (119) statement_covered_class_check -> CLASS_IDENTIFIER OR . statement_covered_class_check
    (118) statement_covered_class_check -> . CLASS_IDENTIFIER
    (119) statement_covered_class_check -> . CLASS_IDENTIFIER OR statement_covered_class_check

    CLASS_IDENTIFIER shift and go to state 96

    statement_covered_class_check  shift and go to state 97

state 58

    (85) other_expression -> usually_inside_paren .
    (87) other_expression -> usually_inside_paren . COMMA other_expression

    SubClassOf      reduce using rule 85 (other_expression -> usually_inside_paren .)
    DisjointClasses reduce using rule 85 (other_expression -> usually_inside_paren .)
    DisjointWith    reduce using rule 85 (other_expression -> usually_inside_paren .)
    Individuals     reduce using rule 85 (other_expression -> usually_inside_paren .)
    Class           reduce using rule 85 (other_expression -> usually_inside_paren .)
    $end            reduce using rule 85 (other_expression -> usually_inside_paren .)
    EquivalentTo    reduce using rule 85 (other_expression -> usually_inside_paren .)
    COMMA           shift and go to state 98


state 59

    (86) other_expression -> usually_others_paren .
    (90) other_expression -> usually_others_paren . AND other_expression

    SubClassOf      reduce using rule 86 (other_expression -> usually_others_paren .)
    DisjointClasses reduce using rule 86 (other_expression -> usually_others_paren .)
    DisjointWith    reduce using rule 86 (other_expression -> usually_others_paren .)
    Individuals     reduce using rule 86 (other_expression -> usually_others_paren .)
    Class           reduce using rule 86 (other_expression -> usually_others_paren .)
    $end            reduce using rule 86 (other_expression -> usually_others_paren .)
    EquivalentTo    reduce using rule 86 (other_expression -> usually_others_paren .)
    AND             shift and go to state 99


state 60

    (88) other_expression -> simple_paren .
    (89) other_expression -> simple_paren . AND other_expression

    SubClassOf      reduce using rule 88 (other_expression -> simple_paren .)
    DisjointClasses reduce using rule 88 (other_expression -> simple_paren .)
    DisjointWith    reduce using rule 88 (other_expression -> simple_paren .)
    Individuals     reduce using rule 88 (other_expression -> simple_paren .)
    Class           reduce using rule 88 (other_expression -> simple_paren .)
    $end            reduce using rule 88 (other_expression -> simple_paren .)
    EquivalentTo    reduce using rule 88 (other_expression -> simple_paren .)
    AND             shift and go to state 100


state 61

    (66) usually_inside_paren -> statement_property_identify . statement_reserved_word CLASS_IDENTIFIER
    (67) usually_inside_paren -> statement_property_identify . statement_reserved_word NAMESPACEID DATA_TYPE
    (68) usually_inside_paren -> statement_property_identify . statement_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (69) usually_inside_paren -> statement_property_identify . statement_reserved_word NUMBER CLASS_IDENTIFIER
    (70) usually_inside_paren -> statement_property_identify . statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (71) usually_others_paren -> statement_property_identify . statement_others_reserved_word CLASS_IDENTIFIER
    (72) usually_others_paren -> statement_property_identify . statement_others_reserved_word LEFT_PAREN usually_others_others_paren
    (73) usually_others_paren -> statement_property_identify . statement_others_reserved_word NAMESPACEID DATA_TYPE
    (74) usually_others_paren -> statement_property_identify . statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (75) usually_others_paren -> statement_property_identify . statement_others_reserved_word NUMBER CLASS_IDENTIFIER
    (76) usually_others_paren -> statement_property_identify . statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (26) statement_reserved_word -> . SOME
    (27) statement_reserved_word -> . EXACTLY
    (28) statement_reserved_word -> . MIN
    (29) statement_reserved_word -> . MAX
    (30) statement_reserved_word -> . OR
    (31) statement_reserved_word -> . AND
    (32) statement_reserved_word -> . VALUE
    (33) statement_others_reserved_word -> . SOME
    (34) statement_others_reserved_word -> . ONLY
    (35) statement_others_reserved_word -> . MIN
    (36) statement_others_reserved_word -> . EXACTLY
    (37) statement_others_reserved_word -> . OR
    (38) statement_others_reserved_word -> . MAX
    (39) statement_others_reserved_word -> . AND

    SOME            shift and go to state 102
    EXACTLY         shift and go to state 103
    MIN             shift and go to state 104
    MAX             shift and go to state 105
    OR              shift and go to state 106
    AND             shift and go to state 107
    VALUE           shift and go to state 75
    ONLY            shift and go to state 108

    statement_reserved_word        shift and go to state 68
    statement_others_reserved_word shift and go to state 101

state 62

    (23) JustDefined -> expression statement_class_disjoin . statement_class_individuals
    (53) statement_class_individuals -> . empty
    (54) statement_class_individuals -> . Individuals statement_class_individuals_check
    (120) empty -> .

  ! shift/reduce conflict for Individuals resolved as shift
    Individuals     shift and go to state 50
    SubClassOf      reduce using rule 120 (empty -> .)
    DisjointClasses reduce using rule 120 (empty -> .)
    DisjointWith    reduce using rule 120 (empty -> .)
    Class           reduce using rule 120 (empty -> .)
    $end            reduce using rule 120 (empty -> .)

  ! Individuals     [ reduce using rule 120 (empty -> .) ]

    statement_class_individuals    shift and go to state 109
    empty                          shift and go to state 49

state 63

    (114) statement_enumerated_class -> LEFT_CURLY_BRACKET statement_enumerated_class_check . RIGHT_CURLY_BRACKET

    RIGHT_CURLY_BRACKET shift and go to state 110


state 64

    (115) statement_enumerated_class_check -> IndividualNames .
    (116) statement_enumerated_class_check -> IndividualNames . COMMA statement_enumerated_class_check

    RIGHT_CURLY_BRACKET reduce using rule 115 (statement_enumerated_class_check -> IndividualNames .)
    COMMA           shift and go to state 111


state 65

    (81) expression -> usually_inside_paren COMMA . expression
    (80) expression -> . usually_inside_paren
    (81) expression -> . usually_inside_paren COMMA expression
    (82) expression -> . simple_paren
    (83) expression -> . simple_paren COMMA expression
    (84) expression -> . simple_paren AND expression
    (66) usually_inside_paren -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (67) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (68) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (69) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER
    (70) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (79) simple_paren -> . LEFT_PAREN usually_inside_paren RIGHT_PAREN
    (40) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (41) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (42) statement_property_identify -> . PROPERTY_IDENTIFIER

    LEFT_PAREN      shift and go to state 34
    PROPERTY_IDENTIFIER_has shift and go to state 35
    PROPERTY_IDENTIFIER_is_Of shift and go to state 36
    PROPERTY_IDENTIFIER shift and go to state 37

    usually_inside_paren           shift and go to state 31
    expression                     shift and go to state 112
    simple_paren                   shift and go to state 32
    statement_property_identify    shift and go to state 33

state 66

    (83) expression -> simple_paren COMMA . expression
    (80) expression -> . usually_inside_paren
    (81) expression -> . usually_inside_paren COMMA expression
    (82) expression -> . simple_paren
    (83) expression -> . simple_paren COMMA expression
    (84) expression -> . simple_paren AND expression
    (66) usually_inside_paren -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (67) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (68) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (69) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER
    (70) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (79) simple_paren -> . LEFT_PAREN usually_inside_paren RIGHT_PAREN
    (40) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (41) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (42) statement_property_identify -> . PROPERTY_IDENTIFIER

    LEFT_PAREN      shift and go to state 34
    PROPERTY_IDENTIFIER_has shift and go to state 35
    PROPERTY_IDENTIFIER_is_Of shift and go to state 36
    PROPERTY_IDENTIFIER shift and go to state 37

    simple_paren                   shift and go to state 32
    expression                     shift and go to state 113
    usually_inside_paren           shift and go to state 31
    statement_property_identify    shift and go to state 33

state 67

    (84) expression -> simple_paren AND . expression
    (80) expression -> . usually_inside_paren
    (81) expression -> . usually_inside_paren COMMA expression
    (82) expression -> . simple_paren
    (83) expression -> . simple_paren COMMA expression
    (84) expression -> . simple_paren AND expression
    (66) usually_inside_paren -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (67) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (68) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (69) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER
    (70) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (79) simple_paren -> . LEFT_PAREN usually_inside_paren RIGHT_PAREN
    (40) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (41) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (42) statement_property_identify -> . PROPERTY_IDENTIFIER

    LEFT_PAREN      shift and go to state 34
    PROPERTY_IDENTIFIER_has shift and go to state 35
    PROPERTY_IDENTIFIER_is_Of shift and go to state 36
    PROPERTY_IDENTIFIER shift and go to state 37

    simple_paren                   shift and go to state 32
    expression                     shift and go to state 114
    usually_inside_paren           shift and go to state 31
    statement_property_identify    shift and go to state 33

state 68

    (66) usually_inside_paren -> statement_property_identify statement_reserved_word . CLASS_IDENTIFIER
    (67) usually_inside_paren -> statement_property_identify statement_reserved_word . NAMESPACEID DATA_TYPE
    (68) usually_inside_paren -> statement_property_identify statement_reserved_word . NUMBER NAMESPACEID DATA_TYPE
    (69) usually_inside_paren -> statement_property_identify statement_reserved_word . NUMBER CLASS_IDENTIFIER
    (70) usually_inside_paren -> statement_property_identify statement_reserved_word . NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET

    CLASS_IDENTIFIER shift and go to state 115
    NAMESPACEID     shift and go to state 116
    NUMBER          shift and go to state 117


state 69

    (26) statement_reserved_word -> SOME .

    CLASS_IDENTIFIER reduce using rule 26 (statement_reserved_word -> SOME .)
    NAMESPACEID     reduce using rule 26 (statement_reserved_word -> SOME .)
    NUMBER          reduce using rule 26 (statement_reserved_word -> SOME .)


state 70

    (27) statement_reserved_word -> EXACTLY .

    CLASS_IDENTIFIER reduce using rule 27 (statement_reserved_word -> EXACTLY .)
    NAMESPACEID     reduce using rule 27 (statement_reserved_word -> EXACTLY .)
    NUMBER          reduce using rule 27 (statement_reserved_word -> EXACTLY .)


state 71

    (28) statement_reserved_word -> MIN .

    CLASS_IDENTIFIER reduce using rule 28 (statement_reserved_word -> MIN .)
    NAMESPACEID     reduce using rule 28 (statement_reserved_word -> MIN .)
    NUMBER          reduce using rule 28 (statement_reserved_word -> MIN .)


state 72

    (29) statement_reserved_word -> MAX .

    CLASS_IDENTIFIER reduce using rule 29 (statement_reserved_word -> MAX .)
    NAMESPACEID     reduce using rule 29 (statement_reserved_word -> MAX .)
    NUMBER          reduce using rule 29 (statement_reserved_word -> MAX .)


state 73

    (30) statement_reserved_word -> OR .

    CLASS_IDENTIFIER reduce using rule 30 (statement_reserved_word -> OR .)
    NAMESPACEID     reduce using rule 30 (statement_reserved_word -> OR .)
    NUMBER          reduce using rule 30 (statement_reserved_word -> OR .)


state 74

    (31) statement_reserved_word -> AND .

    CLASS_IDENTIFIER reduce using rule 31 (statement_reserved_word -> AND .)
    NAMESPACEID     reduce using rule 31 (statement_reserved_word -> AND .)
    NUMBER          reduce using rule 31 (statement_reserved_word -> AND .)


state 75

    (32) statement_reserved_word -> VALUE .

    CLASS_IDENTIFIER reduce using rule 32 (statement_reserved_word -> VALUE .)
    NAMESPACEID     reduce using rule 32 (statement_reserved_word -> VALUE .)
    NUMBER          reduce using rule 32 (statement_reserved_word -> VALUE .)


state 76

    (79) simple_paren -> LEFT_PAREN usually_inside_paren . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 118


state 77

    (91) nested -> CLASS_IDENTIFIER AND . nested_descriptions
    (110) statement_closed_axiom_class -> CLASS_IDENTIFIER AND . other_expression
    (44) primitive_class_mandatory -> CLASS_IDENTIFIER AND . expression statement_class_disjoin statement_class_individuals
    (93) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (94) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (95) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (96) nested_descriptions -> . statement_property_identify statement_others_reserved_word nested_descriptions
    (97) nested_descriptions -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (98) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER
    (99) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE IndividualNames
    (100) nested_descriptions -> . statement_property_identify VALUE IndividualNames
    (101) nested_descriptions -> . statement_property_identify VALUE CLASS_IDENTIFIER
    (102) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE nested_descriptions
    (103) nested_descriptions -> . statement_property_identify statement_others_reserved_word NUMBER nested_descriptions
    (104) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER
    (105) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY nested_descriptions
    (106) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER
    (107) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME nested_descriptions
    (108) nested_descriptions -> . CLASS_IDENTIFIER
    (85) other_expression -> . usually_inside_paren
    (86) other_expression -> . usually_others_paren
    (87) other_expression -> . usually_inside_paren COMMA other_expression
    (88) other_expression -> . simple_paren
    (89) other_expression -> . simple_paren AND other_expression
    (90) other_expression -> . usually_others_paren AND other_expression
    (80) expression -> . usually_inside_paren
    (81) expression -> . usually_inside_paren COMMA expression
    (82) expression -> . simple_paren
    (83) expression -> . simple_paren COMMA expression
    (84) expression -> . simple_paren AND expression
    (40) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (41) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (42) statement_property_identify -> . PROPERTY_IDENTIFIER
    (66) usually_inside_paren -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (67) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (68) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (69) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER
    (70) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (71) usually_others_paren -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (72) usually_others_paren -> . statement_property_identify statement_others_reserved_word LEFT_PAREN usually_others_others_paren
    (73) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE
    (74) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (75) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER
    (76) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (79) simple_paren -> . LEFT_PAREN usually_inside_paren RIGHT_PAREN

    LEFT_PAREN      shift and go to state 91
    CLASS_IDENTIFIER shift and go to state 85
    PROPERTY_IDENTIFIER_has shift and go to state 35
    PROPERTY_IDENTIFIER_is_Of shift and go to state 36
    PROPERTY_IDENTIFIER shift and go to state 37

    nested_descriptions            shift and go to state 94
    other_expression               shift and go to state 95
    expression                     shift and go to state 119
    statement_property_identify    shift and go to state 92
    usually_inside_paren           shift and go to state 120
    usually_others_paren           shift and go to state 59
    simple_paren                   shift and go to state 121

state 78

    (92) nested -> CLASS_IDENTIFIER COMMA . nested_descriptions
    (109) statement_closed_axiom_class -> CLASS_IDENTIFIER COMMA . other_expression
    (43) primitive_class_mandatory -> CLASS_IDENTIFIER COMMA . expression statement_class_disjoin statement_class_individuals
    (93) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (94) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (95) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (96) nested_descriptions -> . statement_property_identify statement_others_reserved_word nested_descriptions
    (97) nested_descriptions -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (98) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER
    (99) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE IndividualNames
    (100) nested_descriptions -> . statement_property_identify VALUE IndividualNames
    (101) nested_descriptions -> . statement_property_identify VALUE CLASS_IDENTIFIER
    (102) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE nested_descriptions
    (103) nested_descriptions -> . statement_property_identify statement_others_reserved_word NUMBER nested_descriptions
    (104) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER
    (105) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY nested_descriptions
    (106) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER
    (107) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME nested_descriptions
    (108) nested_descriptions -> . CLASS_IDENTIFIER
    (85) other_expression -> . usually_inside_paren
    (86) other_expression -> . usually_others_paren
    (87) other_expression -> . usually_inside_paren COMMA other_expression
    (88) other_expression -> . simple_paren
    (89) other_expression -> . simple_paren AND other_expression
    (90) other_expression -> . usually_others_paren AND other_expression
    (80) expression -> . usually_inside_paren
    (81) expression -> . usually_inside_paren COMMA expression
    (82) expression -> . simple_paren
    (83) expression -> . simple_paren COMMA expression
    (84) expression -> . simple_paren AND expression
    (40) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (41) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (42) statement_property_identify -> . PROPERTY_IDENTIFIER
    (66) usually_inside_paren -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (67) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (68) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (69) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER
    (70) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (71) usually_others_paren -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (72) usually_others_paren -> . statement_property_identify statement_others_reserved_word LEFT_PAREN usually_others_others_paren
    (73) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE
    (74) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (75) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER
    (76) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (79) simple_paren -> . LEFT_PAREN usually_inside_paren RIGHT_PAREN

    LEFT_PAREN      shift and go to state 91
    CLASS_IDENTIFIER shift and go to state 85
    PROPERTY_IDENTIFIER_has shift and go to state 35
    PROPERTY_IDENTIFIER_is_Of shift and go to state 36
    PROPERTY_IDENTIFIER shift and go to state 37

    nested_descriptions            shift and go to state 87
    other_expression               shift and go to state 88
    expression                     shift and go to state 122
    statement_property_identify    shift and go to state 92
    usually_inside_paren           shift and go to state 120
    usually_others_paren           shift and go to state 59
    simple_paren                   shift and go to state 121

state 79

    (45) primitive_class_mandatory -> expression statement_class_disjoin . statement_class_individuals
    (53) statement_class_individuals -> . empty
    (54) statement_class_individuals -> . Individuals statement_class_individuals_check
    (120) empty -> .

  ! shift/reduce conflict for Individuals resolved as shift
    Individuals     shift and go to state 50
    EquivalentTo    reduce using rule 120 (empty -> .)
    DisjointClasses reduce using rule 120 (empty -> .)
    DisjointWith    reduce using rule 120 (empty -> .)
    Class           reduce using rule 120 (empty -> .)
    $end            reduce using rule 120 (empty -> .)

  ! Individuals     [ reduce using rule 120 (empty -> .) ]

    statement_class_individuals    shift and go to state 123
    empty                          shift and go to state 49

state 80

    (6) statement_defined_class -> EquivalentTo_possible maybe_suclassof statement_class_disjoin statement_class_individuals .

    Class           reduce using rule 6 (statement_defined_class -> EquivalentTo_possible maybe_suclassof statement_class_disjoin statement_class_individuals .)
    $end            reduce using rule 6 (statement_defined_class -> EquivalentTo_possible maybe_suclassof statement_class_disjoin statement_class_individuals .)


state 81

    (7) statement_defined_class -> subclassof_possible EquivalentTo_possible statement_class_disjoin statement_class_individuals .

    Class           reduce using rule 7 (statement_defined_class -> subclassof_possible EquivalentTo_possible statement_class_disjoin statement_class_individuals .)
    $end            reduce using rule 7 (statement_defined_class -> subclassof_possible EquivalentTo_possible statement_class_disjoin statement_class_individuals .)


state 82

    (54) statement_class_individuals -> Individuals statement_class_individuals_check .

    Class           reduce using rule 54 (statement_class_individuals -> Individuals statement_class_individuals_check .)
    $end            reduce using rule 54 (statement_class_individuals -> Individuals statement_class_individuals_check .)
    SubClassOf      reduce using rule 54 (statement_class_individuals -> Individuals statement_class_individuals_check .)
    DisjointClasses reduce using rule 54 (statement_class_individuals -> Individuals statement_class_individuals_check .)
    DisjointWith    reduce using rule 54 (statement_class_individuals -> Individuals statement_class_individuals_check .)
    Individuals     reduce using rule 54 (statement_class_individuals -> Individuals statement_class_individuals_check .)
    EquivalentTo    reduce using rule 54 (statement_class_individuals -> Individuals statement_class_individuals_check .)


state 83

    (55) statement_class_individuals_check -> IndividualNames .
    (56) statement_class_individuals_check -> IndividualNames . COMMA statement_class_individuals_check

    Class           reduce using rule 55 (statement_class_individuals_check -> IndividualNames .)
    $end            reduce using rule 55 (statement_class_individuals_check -> IndividualNames .)
    SubClassOf      reduce using rule 55 (statement_class_individuals_check -> IndividualNames .)
    DisjointClasses reduce using rule 55 (statement_class_individuals_check -> IndividualNames .)
    DisjointWith    reduce using rule 55 (statement_class_individuals_check -> IndividualNames .)
    Individuals     reduce using rule 55 (statement_class_individuals_check -> IndividualNames .)
    EquivalentTo    reduce using rule 55 (statement_class_individuals_check -> IndividualNames .)
    COMMA           shift and go to state 124


state 84

    (52) statement_class_disjoin_check -> CLASS_IDENTIFIER COMMA . statement_class_disjoin_check
    (51) statement_class_disjoin_check -> . CLASS_IDENTIFIER
    (52) statement_class_disjoin_check -> . CLASS_IDENTIFIER COMMA statement_class_disjoin_check

    CLASS_IDENTIFIER shift and go to state 52

    statement_class_disjoin_check  shift and go to state 125

state 85

    (108) nested_descriptions -> CLASS_IDENTIFIER .

    AND             reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .)
    OR              reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .)
    SubClassOf      reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .)
    DisjointClasses reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .)
    DisjointWith    reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .)
    Individuals     reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .)
    Class           reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .)
    $end            reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .)
    EquivalentTo    reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .)
    RIGHT_PAREN     reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .)


state 86

    (21) JustDefined -> CLASS_IDENTIFIER COMMA expression . statement_class_disjoin statement_class_individuals
    (48) statement_class_disjoin -> . empty
    (49) statement_class_disjoin -> . DisjointClasses statement_class_disjoin_check
    (50) statement_class_disjoin -> . DisjointWith statement_class_disjoin_check
    (120) empty -> .

  ! shift/reduce conflict for DisjointClasses resolved as shift
  ! shift/reduce conflict for DisjointWith resolved as shift
    DisjointClasses shift and go to state 19
    DisjointWith    shift and go to state 20
    Individuals     reduce using rule 120 (empty -> .)
    SubClassOf      reduce using rule 120 (empty -> .)
    Class           reduce using rule 120 (empty -> .)
    $end            reduce using rule 120 (empty -> .)

  ! DisjointClasses [ reduce using rule 120 (empty -> .) ]
  ! DisjointWith    [ reduce using rule 120 (empty -> .) ]

    statement_class_disjoin        shift and go to state 126
    empty                          shift and go to state 18

state 87

    (92) nested -> CLASS_IDENTIFIER COMMA nested_descriptions .
    (93) nested_descriptions -> nested_descriptions . AND nested_descriptions
    (94) nested_descriptions -> nested_descriptions . OR nested_descriptions

    SubClassOf      reduce using rule 92 (nested -> CLASS_IDENTIFIER COMMA nested_descriptions .)
    DisjointClasses reduce using rule 92 (nested -> CLASS_IDENTIFIER COMMA nested_descriptions .)
    DisjointWith    reduce using rule 92 (nested -> CLASS_IDENTIFIER COMMA nested_descriptions .)
    Individuals     reduce using rule 92 (nested -> CLASS_IDENTIFIER COMMA nested_descriptions .)
    Class           reduce using rule 92 (nested -> CLASS_IDENTIFIER COMMA nested_descriptions .)
    $end            reduce using rule 92 (nested -> CLASS_IDENTIFIER COMMA nested_descriptions .)
    EquivalentTo    reduce using rule 92 (nested -> CLASS_IDENTIFIER COMMA nested_descriptions .)
    AND             shift and go to state 127
    OR              shift and go to state 128


state 88

    (109) statement_closed_axiom_class -> CLASS_IDENTIFIER COMMA other_expression .

    SubClassOf      reduce using rule 109 (statement_closed_axiom_class -> CLASS_IDENTIFIER COMMA other_expression .)
    DisjointClasses reduce using rule 109 (statement_closed_axiom_class -> CLASS_IDENTIFIER COMMA other_expression .)
    DisjointWith    reduce using rule 109 (statement_closed_axiom_class -> CLASS_IDENTIFIER COMMA other_expression .)
    Individuals     reduce using rule 109 (statement_closed_axiom_class -> CLASS_IDENTIFIER COMMA other_expression .)
    Class           reduce using rule 109 (statement_closed_axiom_class -> CLASS_IDENTIFIER COMMA other_expression .)
    $end            reduce using rule 109 (statement_closed_axiom_class -> CLASS_IDENTIFIER COMMA other_expression .)
    EquivalentTo    reduce using rule 109 (statement_closed_axiom_class -> CLASS_IDENTIFIER COMMA other_expression .)


state 89

    (80) expression -> usually_inside_paren .
    (81) expression -> usually_inside_paren . COMMA expression
    (85) other_expression -> usually_inside_paren .
    (87) other_expression -> usually_inside_paren . COMMA other_expression

  ! reduce/reduce conflict for SubClassOf resolved using rule 80 (expression -> usually_inside_paren .)
  ! reduce/reduce conflict for DisjointClasses resolved using rule 80 (expression -> usually_inside_paren .)
  ! reduce/reduce conflict for DisjointWith resolved using rule 80 (expression -> usually_inside_paren .)
  ! reduce/reduce conflict for Individuals resolved using rule 80 (expression -> usually_inside_paren .)
  ! reduce/reduce conflict for Class resolved using rule 80 (expression -> usually_inside_paren .)
  ! reduce/reduce conflict for $end resolved using rule 80 (expression -> usually_inside_paren .)
    DisjointClasses reduce using rule 80 (expression -> usually_inside_paren .)
    DisjointWith    reduce using rule 80 (expression -> usually_inside_paren .)
    Individuals     reduce using rule 80 (expression -> usually_inside_paren .)
    SubClassOf      reduce using rule 80 (expression -> usually_inside_paren .)
    Class           reduce using rule 80 (expression -> usually_inside_paren .)
    $end            reduce using rule 80 (expression -> usually_inside_paren .)
    COMMA           shift and go to state 129

  ! SubClassOf      [ reduce using rule 85 (other_expression -> usually_inside_paren .) ]
  ! DisjointClasses [ reduce using rule 85 (other_expression -> usually_inside_paren .) ]
  ! DisjointWith    [ reduce using rule 85 (other_expression -> usually_inside_paren .) ]
  ! Individuals     [ reduce using rule 85 (other_expression -> usually_inside_paren .) ]
  ! Class           [ reduce using rule 85 (other_expression -> usually_inside_paren .) ]
  ! $end            [ reduce using rule 85 (other_expression -> usually_inside_paren .) ]


state 90

    (82) expression -> simple_paren .
    (83) expression -> simple_paren . COMMA expression
    (84) expression -> simple_paren . AND expression
    (88) other_expression -> simple_paren .
    (89) other_expression -> simple_paren . AND other_expression

  ! reduce/reduce conflict for SubClassOf resolved using rule 82 (expression -> simple_paren .)
  ! reduce/reduce conflict for DisjointClasses resolved using rule 82 (expression -> simple_paren .)
  ! reduce/reduce conflict for DisjointWith resolved using rule 82 (expression -> simple_paren .)
  ! reduce/reduce conflict for Individuals resolved using rule 82 (expression -> simple_paren .)
  ! reduce/reduce conflict for Class resolved using rule 82 (expression -> simple_paren .)
  ! reduce/reduce conflict for $end resolved using rule 82 (expression -> simple_paren .)
    DisjointClasses reduce using rule 82 (expression -> simple_paren .)
    DisjointWith    reduce using rule 82 (expression -> simple_paren .)
    Individuals     reduce using rule 82 (expression -> simple_paren .)
    SubClassOf      reduce using rule 82 (expression -> simple_paren .)
    Class           reduce using rule 82 (expression -> simple_paren .)
    $end            reduce using rule 82 (expression -> simple_paren .)
    COMMA           shift and go to state 66
    AND             shift and go to state 130

  ! SubClassOf      [ reduce using rule 88 (other_expression -> simple_paren .) ]
  ! DisjointClasses [ reduce using rule 88 (other_expression -> simple_paren .) ]
  ! DisjointWith    [ reduce using rule 88 (other_expression -> simple_paren .) ]
  ! Individuals     [ reduce using rule 88 (other_expression -> simple_paren .) ]
  ! Class           [ reduce using rule 88 (other_expression -> simple_paren .) ]
  ! $end            [ reduce using rule 88 (other_expression -> simple_paren .) ]


state 91

    (95) nested_descriptions -> LEFT_PAREN . nested_descriptions RIGHT_PAREN
    (79) simple_paren -> LEFT_PAREN . usually_inside_paren RIGHT_PAREN
    (93) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (94) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (95) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (96) nested_descriptions -> . statement_property_identify statement_others_reserved_word nested_descriptions
    (97) nested_descriptions -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (98) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER
    (99) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE IndividualNames
    (100) nested_descriptions -> . statement_property_identify VALUE IndividualNames
    (101) nested_descriptions -> . statement_property_identify VALUE CLASS_IDENTIFIER
    (102) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE nested_descriptions
    (103) nested_descriptions -> . statement_property_identify statement_others_reserved_word NUMBER nested_descriptions
    (104) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER
    (105) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY nested_descriptions
    (106) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER
    (107) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME nested_descriptions
    (108) nested_descriptions -> . CLASS_IDENTIFIER
    (66) usually_inside_paren -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (67) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (68) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (69) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER
    (70) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (40) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (41) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (42) statement_property_identify -> . PROPERTY_IDENTIFIER

    LEFT_PAREN      shift and go to state 131
    CLASS_IDENTIFIER shift and go to state 85
    PROPERTY_IDENTIFIER_has shift and go to state 35
    PROPERTY_IDENTIFIER_is_Of shift and go to state 36
    PROPERTY_IDENTIFIER shift and go to state 37

    nested_descriptions            shift and go to state 132
    usually_inside_paren           shift and go to state 76
    statement_property_identify    shift and go to state 133

state 92

    (96) nested_descriptions -> statement_property_identify . statement_others_reserved_word nested_descriptions
    (97) nested_descriptions -> statement_property_identify . statement_others_reserved_word CLASS_IDENTIFIER
    (98) nested_descriptions -> statement_property_identify . statement_others_reserved_word VALUE CLASS_IDENTIFIER
    (99) nested_descriptions -> statement_property_identify . statement_others_reserved_word VALUE IndividualNames
    (100) nested_descriptions -> statement_property_identify . VALUE IndividualNames
    (101) nested_descriptions -> statement_property_identify . VALUE CLASS_IDENTIFIER
    (102) nested_descriptions -> statement_property_identify . statement_others_reserved_word VALUE nested_descriptions
    (103) nested_descriptions -> statement_property_identify . statement_others_reserved_word NUMBER nested_descriptions
    (104) nested_descriptions -> statement_property_identify . statement_others_reserved_word ONLY CLASS_IDENTIFIER
    (105) nested_descriptions -> statement_property_identify . statement_others_reserved_word ONLY nested_descriptions
    (106) nested_descriptions -> statement_property_identify . statement_others_reserved_word SOME CLASS_IDENTIFIER
    (107) nested_descriptions -> statement_property_identify . statement_others_reserved_word SOME nested_descriptions
    (66) usually_inside_paren -> statement_property_identify . statement_reserved_word CLASS_IDENTIFIER
    (67) usually_inside_paren -> statement_property_identify . statement_reserved_word NAMESPACEID DATA_TYPE
    (68) usually_inside_paren -> statement_property_identify . statement_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (69) usually_inside_paren -> statement_property_identify . statement_reserved_word NUMBER CLASS_IDENTIFIER
    (70) usually_inside_paren -> statement_property_identify . statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (71) usually_others_paren -> statement_property_identify . statement_others_reserved_word CLASS_IDENTIFIER
    (72) usually_others_paren -> statement_property_identify . statement_others_reserved_word LEFT_PAREN usually_others_others_paren
    (73) usually_others_paren -> statement_property_identify . statement_others_reserved_word NAMESPACEID DATA_TYPE
    (74) usually_others_paren -> statement_property_identify . statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (75) usually_others_paren -> statement_property_identify . statement_others_reserved_word NUMBER CLASS_IDENTIFIER
    (76) usually_others_paren -> statement_property_identify . statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (33) statement_others_reserved_word -> . SOME
    (34) statement_others_reserved_word -> . ONLY
    (35) statement_others_reserved_word -> . MIN
    (36) statement_others_reserved_word -> . EXACTLY
    (37) statement_others_reserved_word -> . OR
    (38) statement_others_reserved_word -> . MAX
    (39) statement_others_reserved_word -> . AND
    (26) statement_reserved_word -> . SOME
    (27) statement_reserved_word -> . EXACTLY
    (28) statement_reserved_word -> . MIN
    (29) statement_reserved_word -> . MAX
    (30) statement_reserved_word -> . OR
    (31) statement_reserved_word -> . AND
    (32) statement_reserved_word -> . VALUE

    VALUE           shift and go to state 135
    SOME            shift and go to state 136
    ONLY            shift and go to state 108
    MIN             shift and go to state 137
    EXACTLY         shift and go to state 138
    OR              shift and go to state 139
    MAX             shift and go to state 140
    AND             shift and go to state 141

    statement_others_reserved_word shift and go to state 134
    statement_reserved_word        shift and go to state 68

state 93

    (22) JustDefined -> CLASS_IDENTIFIER AND expression . statement_class_disjoin statement_class_individuals
    (48) statement_class_disjoin -> . empty
    (49) statement_class_disjoin -> . DisjointClasses statement_class_disjoin_check
    (50) statement_class_disjoin -> . DisjointWith statement_class_disjoin_check
    (120) empty -> .

  ! shift/reduce conflict for DisjointClasses resolved as shift
  ! shift/reduce conflict for DisjointWith resolved as shift
    DisjointClasses shift and go to state 19
    DisjointWith    shift and go to state 20
    Individuals     reduce using rule 120 (empty -> .)
    SubClassOf      reduce using rule 120 (empty -> .)
    Class           reduce using rule 120 (empty -> .)
    $end            reduce using rule 120 (empty -> .)

  ! DisjointClasses [ reduce using rule 120 (empty -> .) ]
  ! DisjointWith    [ reduce using rule 120 (empty -> .) ]

    statement_class_disjoin        shift and go to state 142
    empty                          shift and go to state 18

state 94

    (91) nested -> CLASS_IDENTIFIER AND nested_descriptions .
    (93) nested_descriptions -> nested_descriptions . AND nested_descriptions
    (94) nested_descriptions -> nested_descriptions . OR nested_descriptions

    SubClassOf      reduce using rule 91 (nested -> CLASS_IDENTIFIER AND nested_descriptions .)
    DisjointClasses reduce using rule 91 (nested -> CLASS_IDENTIFIER AND nested_descriptions .)
    DisjointWith    reduce using rule 91 (nested -> CLASS_IDENTIFIER AND nested_descriptions .)
    Individuals     reduce using rule 91 (nested -> CLASS_IDENTIFIER AND nested_descriptions .)
    Class           reduce using rule 91 (nested -> CLASS_IDENTIFIER AND nested_descriptions .)
    $end            reduce using rule 91 (nested -> CLASS_IDENTIFIER AND nested_descriptions .)
    EquivalentTo    reduce using rule 91 (nested -> CLASS_IDENTIFIER AND nested_descriptions .)
    AND             shift and go to state 127
    OR              shift and go to state 128


state 95

    (110) statement_closed_axiom_class -> CLASS_IDENTIFIER AND other_expression .

    SubClassOf      reduce using rule 110 (statement_closed_axiom_class -> CLASS_IDENTIFIER AND other_expression .)
    DisjointClasses reduce using rule 110 (statement_closed_axiom_class -> CLASS_IDENTIFIER AND other_expression .)
    DisjointWith    reduce using rule 110 (statement_closed_axiom_class -> CLASS_IDENTIFIER AND other_expression .)
    Individuals     reduce using rule 110 (statement_closed_axiom_class -> CLASS_IDENTIFIER AND other_expression .)
    Class           reduce using rule 110 (statement_closed_axiom_class -> CLASS_IDENTIFIER AND other_expression .)
    $end            reduce using rule 110 (statement_closed_axiom_class -> CLASS_IDENTIFIER AND other_expression .)
    EquivalentTo    reduce using rule 110 (statement_closed_axiom_class -> CLASS_IDENTIFIER AND other_expression .)


state 96

    (118) statement_covered_class_check -> CLASS_IDENTIFIER .
    (119) statement_covered_class_check -> CLASS_IDENTIFIER . OR statement_covered_class_check

    SubClassOf      reduce using rule 118 (statement_covered_class_check -> CLASS_IDENTIFIER .)
    DisjointClasses reduce using rule 118 (statement_covered_class_check -> CLASS_IDENTIFIER .)
    DisjointWith    reduce using rule 118 (statement_covered_class_check -> CLASS_IDENTIFIER .)
    Individuals     reduce using rule 118 (statement_covered_class_check -> CLASS_IDENTIFIER .)
    Class           reduce using rule 118 (statement_covered_class_check -> CLASS_IDENTIFIER .)
    $end            reduce using rule 118 (statement_covered_class_check -> CLASS_IDENTIFIER .)
    EquivalentTo    reduce using rule 118 (statement_covered_class_check -> CLASS_IDENTIFIER .)
    OR              shift and go to state 57


state 97

    (119) statement_covered_class_check -> CLASS_IDENTIFIER OR statement_covered_class_check .

    SubClassOf      reduce using rule 119 (statement_covered_class_check -> CLASS_IDENTIFIER OR statement_covered_class_check .)
    DisjointClasses reduce using rule 119 (statement_covered_class_check -> CLASS_IDENTIFIER OR statement_covered_class_check .)
    DisjointWith    reduce using rule 119 (statement_covered_class_check -> CLASS_IDENTIFIER OR statement_covered_class_check .)
    Individuals     reduce using rule 119 (statement_covered_class_check -> CLASS_IDENTIFIER OR statement_covered_class_check .)
    Class           reduce using rule 119 (statement_covered_class_check -> CLASS_IDENTIFIER OR statement_covered_class_check .)
    $end            reduce using rule 119 (statement_covered_class_check -> CLASS_IDENTIFIER OR statement_covered_class_check .)
    EquivalentTo    reduce using rule 119 (statement_covered_class_check -> CLASS_IDENTIFIER OR statement_covered_class_check .)


state 98

    (87) other_expression -> usually_inside_paren COMMA . other_expression
    (85) other_expression -> . usually_inside_paren
    (86) other_expression -> . usually_others_paren
    (87) other_expression -> . usually_inside_paren COMMA other_expression
    (88) other_expression -> . simple_paren
    (89) other_expression -> . simple_paren AND other_expression
    (90) other_expression -> . usually_others_paren AND other_expression
    (66) usually_inside_paren -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (67) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (68) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (69) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER
    (70) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (71) usually_others_paren -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (72) usually_others_paren -> . statement_property_identify statement_others_reserved_word LEFT_PAREN usually_others_others_paren
    (73) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE
    (74) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (75) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER
    (76) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (79) simple_paren -> . LEFT_PAREN usually_inside_paren RIGHT_PAREN
    (40) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (41) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (42) statement_property_identify -> . PROPERTY_IDENTIFIER

    LEFT_PAREN      shift and go to state 34
    PROPERTY_IDENTIFIER_has shift and go to state 35
    PROPERTY_IDENTIFIER_is_Of shift and go to state 36
    PROPERTY_IDENTIFIER shift and go to state 37

    usually_inside_paren           shift and go to state 58
    other_expression               shift and go to state 143
    usually_others_paren           shift and go to state 59
    simple_paren                   shift and go to state 60
    statement_property_identify    shift and go to state 61

state 99

    (90) other_expression -> usually_others_paren AND . other_expression
    (85) other_expression -> . usually_inside_paren
    (86) other_expression -> . usually_others_paren
    (87) other_expression -> . usually_inside_paren COMMA other_expression
    (88) other_expression -> . simple_paren
    (89) other_expression -> . simple_paren AND other_expression
    (90) other_expression -> . usually_others_paren AND other_expression
    (66) usually_inside_paren -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (67) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (68) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (69) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER
    (70) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (71) usually_others_paren -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (72) usually_others_paren -> . statement_property_identify statement_others_reserved_word LEFT_PAREN usually_others_others_paren
    (73) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE
    (74) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (75) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER
    (76) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (79) simple_paren -> . LEFT_PAREN usually_inside_paren RIGHT_PAREN
    (40) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (41) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (42) statement_property_identify -> . PROPERTY_IDENTIFIER

    LEFT_PAREN      shift and go to state 34
    PROPERTY_IDENTIFIER_has shift and go to state 35
    PROPERTY_IDENTIFIER_is_Of shift and go to state 36
    PROPERTY_IDENTIFIER shift and go to state 37

    usually_others_paren           shift and go to state 59
    other_expression               shift and go to state 144
    usually_inside_paren           shift and go to state 58
    simple_paren                   shift and go to state 60
    statement_property_identify    shift and go to state 61

state 100

    (89) other_expression -> simple_paren AND . other_expression
    (85) other_expression -> . usually_inside_paren
    (86) other_expression -> . usually_others_paren
    (87) other_expression -> . usually_inside_paren COMMA other_expression
    (88) other_expression -> . simple_paren
    (89) other_expression -> . simple_paren AND other_expression
    (90) other_expression -> . usually_others_paren AND other_expression
    (66) usually_inside_paren -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (67) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (68) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (69) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER
    (70) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (71) usually_others_paren -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (72) usually_others_paren -> . statement_property_identify statement_others_reserved_word LEFT_PAREN usually_others_others_paren
    (73) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE
    (74) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (75) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER
    (76) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (79) simple_paren -> . LEFT_PAREN usually_inside_paren RIGHT_PAREN
    (40) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (41) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (42) statement_property_identify -> . PROPERTY_IDENTIFIER

    LEFT_PAREN      shift and go to state 34
    PROPERTY_IDENTIFIER_has shift and go to state 35
    PROPERTY_IDENTIFIER_is_Of shift and go to state 36
    PROPERTY_IDENTIFIER shift and go to state 37

    simple_paren                   shift and go to state 60
    other_expression               shift and go to state 145
    usually_inside_paren           shift and go to state 58
    usually_others_paren           shift and go to state 59
    statement_property_identify    shift and go to state 61

state 101

    (71) usually_others_paren -> statement_property_identify statement_others_reserved_word . CLASS_IDENTIFIER
    (72) usually_others_paren -> statement_property_identify statement_others_reserved_word . LEFT_PAREN usually_others_others_paren
    (73) usually_others_paren -> statement_property_identify statement_others_reserved_word . NAMESPACEID DATA_TYPE
    (74) usually_others_paren -> statement_property_identify statement_others_reserved_word . NUMBER NAMESPACEID DATA_TYPE
    (75) usually_others_paren -> statement_property_identify statement_others_reserved_word . NUMBER CLASS_IDENTIFIER
    (76) usually_others_paren -> statement_property_identify statement_others_reserved_word . NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET

    CLASS_IDENTIFIER shift and go to state 146
    LEFT_PAREN      shift and go to state 147
    NAMESPACEID     shift and go to state 148
    NUMBER          shift and go to state 149


state 102

    (26) statement_reserved_word -> SOME .
    (33) statement_others_reserved_word -> SOME .

  ! reduce/reduce conflict for CLASS_IDENTIFIER resolved using rule 26 (statement_reserved_word -> SOME .)
  ! reduce/reduce conflict for NAMESPACEID resolved using rule 26 (statement_reserved_word -> SOME .)
  ! reduce/reduce conflict for NUMBER resolved using rule 26 (statement_reserved_word -> SOME .)
    CLASS_IDENTIFIER reduce using rule 26 (statement_reserved_word -> SOME .)
    NAMESPACEID     reduce using rule 26 (statement_reserved_word -> SOME .)
    NUMBER          reduce using rule 26 (statement_reserved_word -> SOME .)
    LEFT_PAREN      reduce using rule 33 (statement_others_reserved_word -> SOME .)

  ! CLASS_IDENTIFIER [ reduce using rule 33 (statement_others_reserved_word -> SOME .) ]
  ! NAMESPACEID     [ reduce using rule 33 (statement_others_reserved_word -> SOME .) ]
  ! NUMBER          [ reduce using rule 33 (statement_others_reserved_word -> SOME .) ]


state 103

    (27) statement_reserved_word -> EXACTLY .
    (36) statement_others_reserved_word -> EXACTLY .

  ! reduce/reduce conflict for CLASS_IDENTIFIER resolved using rule 27 (statement_reserved_word -> EXACTLY .)
  ! reduce/reduce conflict for NAMESPACEID resolved using rule 27 (statement_reserved_word -> EXACTLY .)
  ! reduce/reduce conflict for NUMBER resolved using rule 27 (statement_reserved_word -> EXACTLY .)
    CLASS_IDENTIFIER reduce using rule 27 (statement_reserved_word -> EXACTLY .)
    NAMESPACEID     reduce using rule 27 (statement_reserved_word -> EXACTLY .)
    NUMBER          reduce using rule 27 (statement_reserved_word -> EXACTLY .)
    LEFT_PAREN      reduce using rule 36 (statement_others_reserved_word -> EXACTLY .)

  ! CLASS_IDENTIFIER [ reduce using rule 36 (statement_others_reserved_word -> EXACTLY .) ]
  ! NAMESPACEID     [ reduce using rule 36 (statement_others_reserved_word -> EXACTLY .) ]
  ! NUMBER          [ reduce using rule 36 (statement_others_reserved_word -> EXACTLY .) ]


state 104

    (28) statement_reserved_word -> MIN .
    (35) statement_others_reserved_word -> MIN .

  ! reduce/reduce conflict for CLASS_IDENTIFIER resolved using rule 28 (statement_reserved_word -> MIN .)
  ! reduce/reduce conflict for NAMESPACEID resolved using rule 28 (statement_reserved_word -> MIN .)
  ! reduce/reduce conflict for NUMBER resolved using rule 28 (statement_reserved_word -> MIN .)
    CLASS_IDENTIFIER reduce using rule 28 (statement_reserved_word -> MIN .)
    NAMESPACEID     reduce using rule 28 (statement_reserved_word -> MIN .)
    NUMBER          reduce using rule 28 (statement_reserved_word -> MIN .)
    LEFT_PAREN      reduce using rule 35 (statement_others_reserved_word -> MIN .)

  ! CLASS_IDENTIFIER [ reduce using rule 35 (statement_others_reserved_word -> MIN .) ]
  ! NAMESPACEID     [ reduce using rule 35 (statement_others_reserved_word -> MIN .) ]
  ! NUMBER          [ reduce using rule 35 (statement_others_reserved_word -> MIN .) ]


state 105

    (29) statement_reserved_word -> MAX .
    (38) statement_others_reserved_word -> MAX .

  ! reduce/reduce conflict for CLASS_IDENTIFIER resolved using rule 29 (statement_reserved_word -> MAX .)
  ! reduce/reduce conflict for NAMESPACEID resolved using rule 29 (statement_reserved_word -> MAX .)
  ! reduce/reduce conflict for NUMBER resolved using rule 29 (statement_reserved_word -> MAX .)
    CLASS_IDENTIFIER reduce using rule 29 (statement_reserved_word -> MAX .)
    NAMESPACEID     reduce using rule 29 (statement_reserved_word -> MAX .)
    NUMBER          reduce using rule 29 (statement_reserved_word -> MAX .)
    LEFT_PAREN      reduce using rule 38 (statement_others_reserved_word -> MAX .)

  ! CLASS_IDENTIFIER [ reduce using rule 38 (statement_others_reserved_word -> MAX .) ]
  ! NAMESPACEID     [ reduce using rule 38 (statement_others_reserved_word -> MAX .) ]
  ! NUMBER          [ reduce using rule 38 (statement_others_reserved_word -> MAX .) ]


state 106

    (30) statement_reserved_word -> OR .
    (37) statement_others_reserved_word -> OR .

  ! reduce/reduce conflict for CLASS_IDENTIFIER resolved using rule 30 (statement_reserved_word -> OR .)
  ! reduce/reduce conflict for NAMESPACEID resolved using rule 30 (statement_reserved_word -> OR .)
  ! reduce/reduce conflict for NUMBER resolved using rule 30 (statement_reserved_word -> OR .)
    CLASS_IDENTIFIER reduce using rule 30 (statement_reserved_word -> OR .)
    NAMESPACEID     reduce using rule 30 (statement_reserved_word -> OR .)
    NUMBER          reduce using rule 30 (statement_reserved_word -> OR .)
    LEFT_PAREN      reduce using rule 37 (statement_others_reserved_word -> OR .)

  ! CLASS_IDENTIFIER [ reduce using rule 37 (statement_others_reserved_word -> OR .) ]
  ! NAMESPACEID     [ reduce using rule 37 (statement_others_reserved_word -> OR .) ]
  ! NUMBER          [ reduce using rule 37 (statement_others_reserved_word -> OR .) ]


state 107

    (31) statement_reserved_word -> AND .
    (39) statement_others_reserved_word -> AND .

  ! reduce/reduce conflict for CLASS_IDENTIFIER resolved using rule 31 (statement_reserved_word -> AND .)
  ! reduce/reduce conflict for NAMESPACEID resolved using rule 31 (statement_reserved_word -> AND .)
  ! reduce/reduce conflict for NUMBER resolved using rule 31 (statement_reserved_word -> AND .)
    CLASS_IDENTIFIER reduce using rule 31 (statement_reserved_word -> AND .)
    NAMESPACEID     reduce using rule 31 (statement_reserved_word -> AND .)
    NUMBER          reduce using rule 31 (statement_reserved_word -> AND .)
    LEFT_PAREN      reduce using rule 39 (statement_others_reserved_word -> AND .)

  ! CLASS_IDENTIFIER [ reduce using rule 39 (statement_others_reserved_word -> AND .) ]
  ! NAMESPACEID     [ reduce using rule 39 (statement_others_reserved_word -> AND .) ]
  ! NUMBER          [ reduce using rule 39 (statement_others_reserved_word -> AND .) ]


state 108

    (34) statement_others_reserved_word -> ONLY .

    CLASS_IDENTIFIER reduce using rule 34 (statement_others_reserved_word -> ONLY .)
    LEFT_PAREN      reduce using rule 34 (statement_others_reserved_word -> ONLY .)
    NAMESPACEID     reduce using rule 34 (statement_others_reserved_word -> ONLY .)
    NUMBER          reduce using rule 34 (statement_others_reserved_word -> ONLY .)
    VALUE           reduce using rule 34 (statement_others_reserved_word -> ONLY .)
    ONLY            reduce using rule 34 (statement_others_reserved_word -> ONLY .)
    SOME            reduce using rule 34 (statement_others_reserved_word -> ONLY .)
    PROPERTY_IDENTIFIER_has reduce using rule 34 (statement_others_reserved_word -> ONLY .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 34 (statement_others_reserved_word -> ONLY .)
    PROPERTY_IDENTIFIER reduce using rule 34 (statement_others_reserved_word -> ONLY .)


state 109

    (23) JustDefined -> expression statement_class_disjoin statement_class_individuals .

    SubClassOf      reduce using rule 23 (JustDefined -> expression statement_class_disjoin statement_class_individuals .)
    DisjointClasses reduce using rule 23 (JustDefined -> expression statement_class_disjoin statement_class_individuals .)
    DisjointWith    reduce using rule 23 (JustDefined -> expression statement_class_disjoin statement_class_individuals .)
    Individuals     reduce using rule 23 (JustDefined -> expression statement_class_disjoin statement_class_individuals .)
    Class           reduce using rule 23 (JustDefined -> expression statement_class_disjoin statement_class_individuals .)
    $end            reduce using rule 23 (JustDefined -> expression statement_class_disjoin statement_class_individuals .)


state 110

    (114) statement_enumerated_class -> LEFT_CURLY_BRACKET statement_enumerated_class_check RIGHT_CURLY_BRACKET .

    SubClassOf      reduce using rule 114 (statement_enumerated_class -> LEFT_CURLY_BRACKET statement_enumerated_class_check RIGHT_CURLY_BRACKET .)
    DisjointClasses reduce using rule 114 (statement_enumerated_class -> LEFT_CURLY_BRACKET statement_enumerated_class_check RIGHT_CURLY_BRACKET .)
    DisjointWith    reduce using rule 114 (statement_enumerated_class -> LEFT_CURLY_BRACKET statement_enumerated_class_check RIGHT_CURLY_BRACKET .)
    Individuals     reduce using rule 114 (statement_enumerated_class -> LEFT_CURLY_BRACKET statement_enumerated_class_check RIGHT_CURLY_BRACKET .)
    Class           reduce using rule 114 (statement_enumerated_class -> LEFT_CURLY_BRACKET statement_enumerated_class_check RIGHT_CURLY_BRACKET .)
    $end            reduce using rule 114 (statement_enumerated_class -> LEFT_CURLY_BRACKET statement_enumerated_class_check RIGHT_CURLY_BRACKET .)
    EquivalentTo    reduce using rule 114 (statement_enumerated_class -> LEFT_CURLY_BRACKET statement_enumerated_class_check RIGHT_CURLY_BRACKET .)


state 111

    (116) statement_enumerated_class_check -> IndividualNames COMMA . statement_enumerated_class_check
    (115) statement_enumerated_class_check -> . IndividualNames
    (116) statement_enumerated_class_check -> . IndividualNames COMMA statement_enumerated_class_check

    IndividualNames shift and go to state 64

    statement_enumerated_class_check shift and go to state 150

state 112

    (81) expression -> usually_inside_paren COMMA expression .

    DisjointClasses reduce using rule 81 (expression -> usually_inside_paren COMMA expression .)
    DisjointWith    reduce using rule 81 (expression -> usually_inside_paren COMMA expression .)
    Individuals     reduce using rule 81 (expression -> usually_inside_paren COMMA expression .)
    SubClassOf      reduce using rule 81 (expression -> usually_inside_paren COMMA expression .)
    Class           reduce using rule 81 (expression -> usually_inside_paren COMMA expression .)
    $end            reduce using rule 81 (expression -> usually_inside_paren COMMA expression .)
    EquivalentTo    reduce using rule 81 (expression -> usually_inside_paren COMMA expression .)


state 113

    (83) expression -> simple_paren COMMA expression .

    DisjointClasses reduce using rule 83 (expression -> simple_paren COMMA expression .)
    DisjointWith    reduce using rule 83 (expression -> simple_paren COMMA expression .)
    Individuals     reduce using rule 83 (expression -> simple_paren COMMA expression .)
    SubClassOf      reduce using rule 83 (expression -> simple_paren COMMA expression .)
    Class           reduce using rule 83 (expression -> simple_paren COMMA expression .)
    $end            reduce using rule 83 (expression -> simple_paren COMMA expression .)
    EquivalentTo    reduce using rule 83 (expression -> simple_paren COMMA expression .)


state 114

    (84) expression -> simple_paren AND expression .

    DisjointClasses reduce using rule 84 (expression -> simple_paren AND expression .)
    DisjointWith    reduce using rule 84 (expression -> simple_paren AND expression .)
    Individuals     reduce using rule 84 (expression -> simple_paren AND expression .)
    SubClassOf      reduce using rule 84 (expression -> simple_paren AND expression .)
    Class           reduce using rule 84 (expression -> simple_paren AND expression .)
    $end            reduce using rule 84 (expression -> simple_paren AND expression .)
    EquivalentTo    reduce using rule 84 (expression -> simple_paren AND expression .)


state 115

    (66) usually_inside_paren -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .

    COMMA           reduce using rule 66 (usually_inside_paren -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    DisjointClasses reduce using rule 66 (usually_inside_paren -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    DisjointWith    reduce using rule 66 (usually_inside_paren -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    Individuals     reduce using rule 66 (usually_inside_paren -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    SubClassOf      reduce using rule 66 (usually_inside_paren -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    Class           reduce using rule 66 (usually_inside_paren -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    $end            reduce using rule 66 (usually_inside_paren -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    EquivalentTo    reduce using rule 66 (usually_inside_paren -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    RIGHT_PAREN     reduce using rule 66 (usually_inside_paren -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)


state 116

    (67) usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID . DATA_TYPE
    (70) usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID . DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET

    DATA_TYPE       shift and go to state 151


state 117

    (68) usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER . NAMESPACEID DATA_TYPE
    (69) usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER . CLASS_IDENTIFIER

    NAMESPACEID     shift and go to state 152
    CLASS_IDENTIFIER shift and go to state 153


state 118

    (79) simple_paren -> LEFT_PAREN usually_inside_paren RIGHT_PAREN .

    COMMA           reduce using rule 79 (simple_paren -> LEFT_PAREN usually_inside_paren RIGHT_PAREN .)
    AND             reduce using rule 79 (simple_paren -> LEFT_PAREN usually_inside_paren RIGHT_PAREN .)
    DisjointClasses reduce using rule 79 (simple_paren -> LEFT_PAREN usually_inside_paren RIGHT_PAREN .)
    DisjointWith    reduce using rule 79 (simple_paren -> LEFT_PAREN usually_inside_paren RIGHT_PAREN .)
    Individuals     reduce using rule 79 (simple_paren -> LEFT_PAREN usually_inside_paren RIGHT_PAREN .)
    SubClassOf      reduce using rule 79 (simple_paren -> LEFT_PAREN usually_inside_paren RIGHT_PAREN .)
    Class           reduce using rule 79 (simple_paren -> LEFT_PAREN usually_inside_paren RIGHT_PAREN .)
    $end            reduce using rule 79 (simple_paren -> LEFT_PAREN usually_inside_paren RIGHT_PAREN .)
    EquivalentTo    reduce using rule 79 (simple_paren -> LEFT_PAREN usually_inside_paren RIGHT_PAREN .)


state 119

    (44) primitive_class_mandatory -> CLASS_IDENTIFIER AND expression . statement_class_disjoin statement_class_individuals
    (48) statement_class_disjoin -> . empty
    (49) statement_class_disjoin -> . DisjointClasses statement_class_disjoin_check
    (50) statement_class_disjoin -> . DisjointWith statement_class_disjoin_check
    (120) empty -> .

  ! shift/reduce conflict for DisjointClasses resolved as shift
  ! shift/reduce conflict for DisjointWith resolved as shift
    DisjointClasses shift and go to state 19
    DisjointWith    shift and go to state 20
    Individuals     reduce using rule 120 (empty -> .)
    EquivalentTo    reduce using rule 120 (empty -> .)
    Class           reduce using rule 120 (empty -> .)
    $end            reduce using rule 120 (empty -> .)

  ! DisjointClasses [ reduce using rule 120 (empty -> .) ]
  ! DisjointWith    [ reduce using rule 120 (empty -> .) ]

    statement_class_disjoin        shift and go to state 154
    empty                          shift and go to state 18

state 120

    (85) other_expression -> usually_inside_paren .
    (87) other_expression -> usually_inside_paren . COMMA other_expression
    (80) expression -> usually_inside_paren .
    (81) expression -> usually_inside_paren . COMMA expression

  ! reduce/reduce conflict for DisjointClasses resolved using rule 80 (expression -> usually_inside_paren .)
  ! reduce/reduce conflict for DisjointWith resolved using rule 80 (expression -> usually_inside_paren .)
  ! reduce/reduce conflict for Individuals resolved using rule 80 (expression -> usually_inside_paren .)
  ! reduce/reduce conflict for EquivalentTo resolved using rule 80 (expression -> usually_inside_paren .)
  ! reduce/reduce conflict for Class resolved using rule 80 (expression -> usually_inside_paren .)
  ! reduce/reduce conflict for $end resolved using rule 80 (expression -> usually_inside_paren .)
    COMMA           shift and go to state 155
    DisjointClasses reduce using rule 80 (expression -> usually_inside_paren .)
    DisjointWith    reduce using rule 80 (expression -> usually_inside_paren .)
    Individuals     reduce using rule 80 (expression -> usually_inside_paren .)
    EquivalentTo    reduce using rule 80 (expression -> usually_inside_paren .)
    Class           reduce using rule 80 (expression -> usually_inside_paren .)
    $end            reduce using rule 80 (expression -> usually_inside_paren .)

  ! EquivalentTo    [ reduce using rule 85 (other_expression -> usually_inside_paren .) ]
  ! DisjointClasses [ reduce using rule 85 (other_expression -> usually_inside_paren .) ]
  ! DisjointWith    [ reduce using rule 85 (other_expression -> usually_inside_paren .) ]
  ! Individuals     [ reduce using rule 85 (other_expression -> usually_inside_paren .) ]
  ! Class           [ reduce using rule 85 (other_expression -> usually_inside_paren .) ]
  ! $end            [ reduce using rule 85 (other_expression -> usually_inside_paren .) ]


state 121

    (88) other_expression -> simple_paren .
    (89) other_expression -> simple_paren . AND other_expression
    (82) expression -> simple_paren .
    (83) expression -> simple_paren . COMMA expression
    (84) expression -> simple_paren . AND expression

  ! reduce/reduce conflict for DisjointClasses resolved using rule 82 (expression -> simple_paren .)
  ! reduce/reduce conflict for DisjointWith resolved using rule 82 (expression -> simple_paren .)
  ! reduce/reduce conflict for Individuals resolved using rule 82 (expression -> simple_paren .)
  ! reduce/reduce conflict for EquivalentTo resolved using rule 82 (expression -> simple_paren .)
  ! reduce/reduce conflict for Class resolved using rule 82 (expression -> simple_paren .)
  ! reduce/reduce conflict for $end resolved using rule 82 (expression -> simple_paren .)
    AND             shift and go to state 156
    DisjointClasses reduce using rule 82 (expression -> simple_paren .)
    DisjointWith    reduce using rule 82 (expression -> simple_paren .)
    Individuals     reduce using rule 82 (expression -> simple_paren .)
    EquivalentTo    reduce using rule 82 (expression -> simple_paren .)
    Class           reduce using rule 82 (expression -> simple_paren .)
    $end            reduce using rule 82 (expression -> simple_paren .)
    COMMA           shift and go to state 66

  ! EquivalentTo    [ reduce using rule 88 (other_expression -> simple_paren .) ]
  ! DisjointClasses [ reduce using rule 88 (other_expression -> simple_paren .) ]
  ! DisjointWith    [ reduce using rule 88 (other_expression -> simple_paren .) ]
  ! Individuals     [ reduce using rule 88 (other_expression -> simple_paren .) ]
  ! Class           [ reduce using rule 88 (other_expression -> simple_paren .) ]
  ! $end            [ reduce using rule 88 (other_expression -> simple_paren .) ]


state 122

    (43) primitive_class_mandatory -> CLASS_IDENTIFIER COMMA expression . statement_class_disjoin statement_class_individuals
    (48) statement_class_disjoin -> . empty
    (49) statement_class_disjoin -> . DisjointClasses statement_class_disjoin_check
    (50) statement_class_disjoin -> . DisjointWith statement_class_disjoin_check
    (120) empty -> .

  ! shift/reduce conflict for DisjointClasses resolved as shift
  ! shift/reduce conflict for DisjointWith resolved as shift
    DisjointClasses shift and go to state 19
    DisjointWith    shift and go to state 20
    Individuals     reduce using rule 120 (empty -> .)
    EquivalentTo    reduce using rule 120 (empty -> .)
    Class           reduce using rule 120 (empty -> .)
    $end            reduce using rule 120 (empty -> .)

  ! DisjointClasses [ reduce using rule 120 (empty -> .) ]
  ! DisjointWith    [ reduce using rule 120 (empty -> .) ]

    statement_class_disjoin        shift and go to state 157
    empty                          shift and go to state 18

state 123

    (45) primitive_class_mandatory -> expression statement_class_disjoin statement_class_individuals .

    EquivalentTo    reduce using rule 45 (primitive_class_mandatory -> expression statement_class_disjoin statement_class_individuals .)
    DisjointClasses reduce using rule 45 (primitive_class_mandatory -> expression statement_class_disjoin statement_class_individuals .)
    DisjointWith    reduce using rule 45 (primitive_class_mandatory -> expression statement_class_disjoin statement_class_individuals .)
    Individuals     reduce using rule 45 (primitive_class_mandatory -> expression statement_class_disjoin statement_class_individuals .)
    Class           reduce using rule 45 (primitive_class_mandatory -> expression statement_class_disjoin statement_class_individuals .)
    $end            reduce using rule 45 (primitive_class_mandatory -> expression statement_class_disjoin statement_class_individuals .)


state 124

    (56) statement_class_individuals_check -> IndividualNames COMMA . statement_class_individuals_check
    (55) statement_class_individuals_check -> . IndividualNames
    (56) statement_class_individuals_check -> . IndividualNames COMMA statement_class_individuals_check

    IndividualNames shift and go to state 83

    statement_class_individuals_check shift and go to state 158

state 125

    (52) statement_class_disjoin_check -> CLASS_IDENTIFIER COMMA statement_class_disjoin_check .

    Individuals     reduce using rule 52 (statement_class_disjoin_check -> CLASS_IDENTIFIER COMMA statement_class_disjoin_check .)
    Class           reduce using rule 52 (statement_class_disjoin_check -> CLASS_IDENTIFIER COMMA statement_class_disjoin_check .)
    $end            reduce using rule 52 (statement_class_disjoin_check -> CLASS_IDENTIFIER COMMA statement_class_disjoin_check .)
    SubClassOf      reduce using rule 52 (statement_class_disjoin_check -> CLASS_IDENTIFIER COMMA statement_class_disjoin_check .)
    DisjointClasses reduce using rule 52 (statement_class_disjoin_check -> CLASS_IDENTIFIER COMMA statement_class_disjoin_check .)
    DisjointWith    reduce using rule 52 (statement_class_disjoin_check -> CLASS_IDENTIFIER COMMA statement_class_disjoin_check .)
    EquivalentTo    reduce using rule 52 (statement_class_disjoin_check -> CLASS_IDENTIFIER COMMA statement_class_disjoin_check .)


state 126

    (21) JustDefined -> CLASS_IDENTIFIER COMMA expression statement_class_disjoin . statement_class_individuals
    (53) statement_class_individuals -> . empty
    (54) statement_class_individuals -> . Individuals statement_class_individuals_check
    (120) empty -> .

  ! shift/reduce conflict for Individuals resolved as shift
    Individuals     shift and go to state 50
    SubClassOf      reduce using rule 120 (empty -> .)
    DisjointClasses reduce using rule 120 (empty -> .)
    DisjointWith    reduce using rule 120 (empty -> .)
    Class           reduce using rule 120 (empty -> .)
    $end            reduce using rule 120 (empty -> .)

  ! Individuals     [ reduce using rule 120 (empty -> .) ]

    statement_class_individuals    shift and go to state 159
    empty                          shift and go to state 49

state 127

    (93) nested_descriptions -> nested_descriptions AND . nested_descriptions
    (93) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (94) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (95) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (96) nested_descriptions -> . statement_property_identify statement_others_reserved_word nested_descriptions
    (97) nested_descriptions -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (98) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER
    (99) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE IndividualNames
    (100) nested_descriptions -> . statement_property_identify VALUE IndividualNames
    (101) nested_descriptions -> . statement_property_identify VALUE CLASS_IDENTIFIER
    (102) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE nested_descriptions
    (103) nested_descriptions -> . statement_property_identify statement_others_reserved_word NUMBER nested_descriptions
    (104) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER
    (105) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY nested_descriptions
    (106) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER
    (107) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME nested_descriptions
    (108) nested_descriptions -> . CLASS_IDENTIFIER
    (40) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (41) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (42) statement_property_identify -> . PROPERTY_IDENTIFIER

    LEFT_PAREN      shift and go to state 131
    CLASS_IDENTIFIER shift and go to state 85
    PROPERTY_IDENTIFIER_has shift and go to state 35
    PROPERTY_IDENTIFIER_is_Of shift and go to state 36
    PROPERTY_IDENTIFIER shift and go to state 37

    nested_descriptions            shift and go to state 160
    statement_property_identify    shift and go to state 161

state 128

    (94) nested_descriptions -> nested_descriptions OR . nested_descriptions
    (93) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (94) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (95) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (96) nested_descriptions -> . statement_property_identify statement_others_reserved_word nested_descriptions
    (97) nested_descriptions -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (98) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER
    (99) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE IndividualNames
    (100) nested_descriptions -> . statement_property_identify VALUE IndividualNames
    (101) nested_descriptions -> . statement_property_identify VALUE CLASS_IDENTIFIER
    (102) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE nested_descriptions
    (103) nested_descriptions -> . statement_property_identify statement_others_reserved_word NUMBER nested_descriptions
    (104) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER
    (105) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY nested_descriptions
    (106) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER
    (107) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME nested_descriptions
    (108) nested_descriptions -> . CLASS_IDENTIFIER
    (40) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (41) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (42) statement_property_identify -> . PROPERTY_IDENTIFIER

    LEFT_PAREN      shift and go to state 131
    CLASS_IDENTIFIER shift and go to state 85
    PROPERTY_IDENTIFIER_has shift and go to state 35
    PROPERTY_IDENTIFIER_is_Of shift and go to state 36
    PROPERTY_IDENTIFIER shift and go to state 37

    nested_descriptions            shift and go to state 162
    statement_property_identify    shift and go to state 161

state 129

    (81) expression -> usually_inside_paren COMMA . expression
    (87) other_expression -> usually_inside_paren COMMA . other_expression
    (80) expression -> . usually_inside_paren
    (81) expression -> . usually_inside_paren COMMA expression
    (82) expression -> . simple_paren
    (83) expression -> . simple_paren COMMA expression
    (84) expression -> . simple_paren AND expression
    (85) other_expression -> . usually_inside_paren
    (86) other_expression -> . usually_others_paren
    (87) other_expression -> . usually_inside_paren COMMA other_expression
    (88) other_expression -> . simple_paren
    (89) other_expression -> . simple_paren AND other_expression
    (90) other_expression -> . usually_others_paren AND other_expression
    (66) usually_inside_paren -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (67) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (68) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (69) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER
    (70) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (79) simple_paren -> . LEFT_PAREN usually_inside_paren RIGHT_PAREN
    (71) usually_others_paren -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (72) usually_others_paren -> . statement_property_identify statement_others_reserved_word LEFT_PAREN usually_others_others_paren
    (73) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE
    (74) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (75) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER
    (76) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (40) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (41) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (42) statement_property_identify -> . PROPERTY_IDENTIFIER

    LEFT_PAREN      shift and go to state 34
    PROPERTY_IDENTIFIER_has shift and go to state 35
    PROPERTY_IDENTIFIER_is_Of shift and go to state 36
    PROPERTY_IDENTIFIER shift and go to state 37

    usually_inside_paren           shift and go to state 89
    expression                     shift and go to state 112
    other_expression               shift and go to state 143
    simple_paren                   shift and go to state 90
    usually_others_paren           shift and go to state 59
    statement_property_identify    shift and go to state 61

state 130

    (84) expression -> simple_paren AND . expression
    (89) other_expression -> simple_paren AND . other_expression
    (80) expression -> . usually_inside_paren
    (81) expression -> . usually_inside_paren COMMA expression
    (82) expression -> . simple_paren
    (83) expression -> . simple_paren COMMA expression
    (84) expression -> . simple_paren AND expression
    (85) other_expression -> . usually_inside_paren
    (86) other_expression -> . usually_others_paren
    (87) other_expression -> . usually_inside_paren COMMA other_expression
    (88) other_expression -> . simple_paren
    (89) other_expression -> . simple_paren AND other_expression
    (90) other_expression -> . usually_others_paren AND other_expression
    (66) usually_inside_paren -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (67) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (68) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (69) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER
    (70) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (79) simple_paren -> . LEFT_PAREN usually_inside_paren RIGHT_PAREN
    (71) usually_others_paren -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (72) usually_others_paren -> . statement_property_identify statement_others_reserved_word LEFT_PAREN usually_others_others_paren
    (73) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE
    (74) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (75) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER
    (76) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (40) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (41) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (42) statement_property_identify -> . PROPERTY_IDENTIFIER

    LEFT_PAREN      shift and go to state 34
    PROPERTY_IDENTIFIER_has shift and go to state 35
    PROPERTY_IDENTIFIER_is_Of shift and go to state 36
    PROPERTY_IDENTIFIER shift and go to state 37

    simple_paren                   shift and go to state 90
    expression                     shift and go to state 114
    other_expression               shift and go to state 145
    usually_inside_paren           shift and go to state 89
    usually_others_paren           shift and go to state 59
    statement_property_identify    shift and go to state 61

state 131

    (95) nested_descriptions -> LEFT_PAREN . nested_descriptions RIGHT_PAREN
    (93) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (94) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (95) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (96) nested_descriptions -> . statement_property_identify statement_others_reserved_word nested_descriptions
    (97) nested_descriptions -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (98) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER
    (99) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE IndividualNames
    (100) nested_descriptions -> . statement_property_identify VALUE IndividualNames
    (101) nested_descriptions -> . statement_property_identify VALUE CLASS_IDENTIFIER
    (102) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE nested_descriptions
    (103) nested_descriptions -> . statement_property_identify statement_others_reserved_word NUMBER nested_descriptions
    (104) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER
    (105) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY nested_descriptions
    (106) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER
    (107) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME nested_descriptions
    (108) nested_descriptions -> . CLASS_IDENTIFIER
    (40) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (41) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (42) statement_property_identify -> . PROPERTY_IDENTIFIER

    LEFT_PAREN      shift and go to state 131
    CLASS_IDENTIFIER shift and go to state 85
    PROPERTY_IDENTIFIER_has shift and go to state 35
    PROPERTY_IDENTIFIER_is_Of shift and go to state 36
    PROPERTY_IDENTIFIER shift and go to state 37

    nested_descriptions            shift and go to state 132
    statement_property_identify    shift and go to state 161

state 132

    (95) nested_descriptions -> LEFT_PAREN nested_descriptions . RIGHT_PAREN
    (93) nested_descriptions -> nested_descriptions . AND nested_descriptions
    (94) nested_descriptions -> nested_descriptions . OR nested_descriptions

    RIGHT_PAREN     shift and go to state 163
    AND             shift and go to state 127
    OR              shift and go to state 128


state 133

    (96) nested_descriptions -> statement_property_identify . statement_others_reserved_word nested_descriptions
    (97) nested_descriptions -> statement_property_identify . statement_others_reserved_word CLASS_IDENTIFIER
    (98) nested_descriptions -> statement_property_identify . statement_others_reserved_word VALUE CLASS_IDENTIFIER
    (99) nested_descriptions -> statement_property_identify . statement_others_reserved_word VALUE IndividualNames
    (100) nested_descriptions -> statement_property_identify . VALUE IndividualNames
    (101) nested_descriptions -> statement_property_identify . VALUE CLASS_IDENTIFIER
    (102) nested_descriptions -> statement_property_identify . statement_others_reserved_word VALUE nested_descriptions
    (103) nested_descriptions -> statement_property_identify . statement_others_reserved_word NUMBER nested_descriptions
    (104) nested_descriptions -> statement_property_identify . statement_others_reserved_word ONLY CLASS_IDENTIFIER
    (105) nested_descriptions -> statement_property_identify . statement_others_reserved_word ONLY nested_descriptions
    (106) nested_descriptions -> statement_property_identify . statement_others_reserved_word SOME CLASS_IDENTIFIER
    (107) nested_descriptions -> statement_property_identify . statement_others_reserved_word SOME nested_descriptions
    (66) usually_inside_paren -> statement_property_identify . statement_reserved_word CLASS_IDENTIFIER
    (67) usually_inside_paren -> statement_property_identify . statement_reserved_word NAMESPACEID DATA_TYPE
    (68) usually_inside_paren -> statement_property_identify . statement_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (69) usually_inside_paren -> statement_property_identify . statement_reserved_word NUMBER CLASS_IDENTIFIER
    (70) usually_inside_paren -> statement_property_identify . statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (33) statement_others_reserved_word -> . SOME
    (34) statement_others_reserved_word -> . ONLY
    (35) statement_others_reserved_word -> . MIN
    (36) statement_others_reserved_word -> . EXACTLY
    (37) statement_others_reserved_word -> . OR
    (38) statement_others_reserved_word -> . MAX
    (39) statement_others_reserved_word -> . AND
    (26) statement_reserved_word -> . SOME
    (27) statement_reserved_word -> . EXACTLY
    (28) statement_reserved_word -> . MIN
    (29) statement_reserved_word -> . MAX
    (30) statement_reserved_word -> . OR
    (31) statement_reserved_word -> . AND
    (32) statement_reserved_word -> . VALUE

    VALUE           shift and go to state 135
    SOME            shift and go to state 136
    ONLY            shift and go to state 108
    MIN             shift and go to state 137
    EXACTLY         shift and go to state 138
    OR              shift and go to state 139
    MAX             shift and go to state 140
    AND             shift and go to state 141

    statement_others_reserved_word shift and go to state 164
    statement_reserved_word        shift and go to state 68

state 134

    (96) nested_descriptions -> statement_property_identify statement_others_reserved_word . nested_descriptions
    (97) nested_descriptions -> statement_property_identify statement_others_reserved_word . CLASS_IDENTIFIER
    (98) nested_descriptions -> statement_property_identify statement_others_reserved_word . VALUE CLASS_IDENTIFIER
    (99) nested_descriptions -> statement_property_identify statement_others_reserved_word . VALUE IndividualNames
    (102) nested_descriptions -> statement_property_identify statement_others_reserved_word . VALUE nested_descriptions
    (103) nested_descriptions -> statement_property_identify statement_others_reserved_word . NUMBER nested_descriptions
    (104) nested_descriptions -> statement_property_identify statement_others_reserved_word . ONLY CLASS_IDENTIFIER
    (105) nested_descriptions -> statement_property_identify statement_others_reserved_word . ONLY nested_descriptions
    (106) nested_descriptions -> statement_property_identify statement_others_reserved_word . SOME CLASS_IDENTIFIER
    (107) nested_descriptions -> statement_property_identify statement_others_reserved_word . SOME nested_descriptions
    (71) usually_others_paren -> statement_property_identify statement_others_reserved_word . CLASS_IDENTIFIER
    (72) usually_others_paren -> statement_property_identify statement_others_reserved_word . LEFT_PAREN usually_others_others_paren
    (73) usually_others_paren -> statement_property_identify statement_others_reserved_word . NAMESPACEID DATA_TYPE
    (74) usually_others_paren -> statement_property_identify statement_others_reserved_word . NUMBER NAMESPACEID DATA_TYPE
    (75) usually_others_paren -> statement_property_identify statement_others_reserved_word . NUMBER CLASS_IDENTIFIER
    (76) usually_others_paren -> statement_property_identify statement_others_reserved_word . NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (93) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (94) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (95) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (96) nested_descriptions -> . statement_property_identify statement_others_reserved_word nested_descriptions
    (97) nested_descriptions -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (98) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER
    (99) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE IndividualNames
    (100) nested_descriptions -> . statement_property_identify VALUE IndividualNames
    (101) nested_descriptions -> . statement_property_identify VALUE CLASS_IDENTIFIER
    (102) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE nested_descriptions
    (103) nested_descriptions -> . statement_property_identify statement_others_reserved_word NUMBER nested_descriptions
    (104) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER
    (105) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY nested_descriptions
    (106) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER
    (107) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME nested_descriptions
    (108) nested_descriptions -> . CLASS_IDENTIFIER
    (40) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (41) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (42) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 166
    VALUE           shift and go to state 167
    NUMBER          shift and go to state 168
    ONLY            shift and go to state 169
    SOME            shift and go to state 170
    LEFT_PAREN      shift and go to state 171
    NAMESPACEID     shift and go to state 148
    PROPERTY_IDENTIFIER_has shift and go to state 35
    PROPERTY_IDENTIFIER_is_Of shift and go to state 36
    PROPERTY_IDENTIFIER shift and go to state 37

    statement_property_identify    shift and go to state 161
    nested_descriptions            shift and go to state 165

state 135

    (100) nested_descriptions -> statement_property_identify VALUE . IndividualNames
    (101) nested_descriptions -> statement_property_identify VALUE . CLASS_IDENTIFIER
    (32) statement_reserved_word -> VALUE .

  ! shift/reduce conflict for CLASS_IDENTIFIER resolved as shift
    IndividualNames shift and go to state 172
    CLASS_IDENTIFIER shift and go to state 173
    NAMESPACEID     reduce using rule 32 (statement_reserved_word -> VALUE .)
    NUMBER          reduce using rule 32 (statement_reserved_word -> VALUE .)

  ! CLASS_IDENTIFIER [ reduce using rule 32 (statement_reserved_word -> VALUE .) ]


state 136

    (33) statement_others_reserved_word -> SOME .
    (26) statement_reserved_word -> SOME .

  ! reduce/reduce conflict for CLASS_IDENTIFIER resolved using rule 26 (statement_reserved_word -> SOME .)
  ! reduce/reduce conflict for NAMESPACEID resolved using rule 26 (statement_reserved_word -> SOME .)
  ! reduce/reduce conflict for NUMBER resolved using rule 26 (statement_reserved_word -> SOME .)
    VALUE           reduce using rule 33 (statement_others_reserved_word -> SOME .)
    ONLY            reduce using rule 33 (statement_others_reserved_word -> SOME .)
    SOME            reduce using rule 33 (statement_others_reserved_word -> SOME .)
    LEFT_PAREN      reduce using rule 33 (statement_others_reserved_word -> SOME .)
    PROPERTY_IDENTIFIER_has reduce using rule 33 (statement_others_reserved_word -> SOME .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 33 (statement_others_reserved_word -> SOME .)
    PROPERTY_IDENTIFIER reduce using rule 33 (statement_others_reserved_word -> SOME .)
    CLASS_IDENTIFIER reduce using rule 26 (statement_reserved_word -> SOME .)
    NAMESPACEID     reduce using rule 26 (statement_reserved_word -> SOME .)
    NUMBER          reduce using rule 26 (statement_reserved_word -> SOME .)

  ! CLASS_IDENTIFIER [ reduce using rule 33 (statement_others_reserved_word -> SOME .) ]
  ! NUMBER          [ reduce using rule 33 (statement_others_reserved_word -> SOME .) ]
  ! NAMESPACEID     [ reduce using rule 33 (statement_others_reserved_word -> SOME .) ]


state 137

    (35) statement_others_reserved_word -> MIN .
    (28) statement_reserved_word -> MIN .

  ! reduce/reduce conflict for CLASS_IDENTIFIER resolved using rule 28 (statement_reserved_word -> MIN .)
  ! reduce/reduce conflict for NAMESPACEID resolved using rule 28 (statement_reserved_word -> MIN .)
  ! reduce/reduce conflict for NUMBER resolved using rule 28 (statement_reserved_word -> MIN .)
    VALUE           reduce using rule 35 (statement_others_reserved_word -> MIN .)
    ONLY            reduce using rule 35 (statement_others_reserved_word -> MIN .)
    SOME            reduce using rule 35 (statement_others_reserved_word -> MIN .)
    LEFT_PAREN      reduce using rule 35 (statement_others_reserved_word -> MIN .)
    PROPERTY_IDENTIFIER_has reduce using rule 35 (statement_others_reserved_word -> MIN .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 35 (statement_others_reserved_word -> MIN .)
    PROPERTY_IDENTIFIER reduce using rule 35 (statement_others_reserved_word -> MIN .)
    CLASS_IDENTIFIER reduce using rule 28 (statement_reserved_word -> MIN .)
    NAMESPACEID     reduce using rule 28 (statement_reserved_word -> MIN .)
    NUMBER          reduce using rule 28 (statement_reserved_word -> MIN .)

  ! CLASS_IDENTIFIER [ reduce using rule 35 (statement_others_reserved_word -> MIN .) ]
  ! NUMBER          [ reduce using rule 35 (statement_others_reserved_word -> MIN .) ]
  ! NAMESPACEID     [ reduce using rule 35 (statement_others_reserved_word -> MIN .) ]


state 138

    (36) statement_others_reserved_word -> EXACTLY .
    (27) statement_reserved_word -> EXACTLY .

  ! reduce/reduce conflict for CLASS_IDENTIFIER resolved using rule 27 (statement_reserved_word -> EXACTLY .)
  ! reduce/reduce conflict for NAMESPACEID resolved using rule 27 (statement_reserved_word -> EXACTLY .)
  ! reduce/reduce conflict for NUMBER resolved using rule 27 (statement_reserved_word -> EXACTLY .)
    VALUE           reduce using rule 36 (statement_others_reserved_word -> EXACTLY .)
    ONLY            reduce using rule 36 (statement_others_reserved_word -> EXACTLY .)
    SOME            reduce using rule 36 (statement_others_reserved_word -> EXACTLY .)
    LEFT_PAREN      reduce using rule 36 (statement_others_reserved_word -> EXACTLY .)
    PROPERTY_IDENTIFIER_has reduce using rule 36 (statement_others_reserved_word -> EXACTLY .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 36 (statement_others_reserved_word -> EXACTLY .)
    PROPERTY_IDENTIFIER reduce using rule 36 (statement_others_reserved_word -> EXACTLY .)
    CLASS_IDENTIFIER reduce using rule 27 (statement_reserved_word -> EXACTLY .)
    NAMESPACEID     reduce using rule 27 (statement_reserved_word -> EXACTLY .)
    NUMBER          reduce using rule 27 (statement_reserved_word -> EXACTLY .)

  ! CLASS_IDENTIFIER [ reduce using rule 36 (statement_others_reserved_word -> EXACTLY .) ]
  ! NUMBER          [ reduce using rule 36 (statement_others_reserved_word -> EXACTLY .) ]
  ! NAMESPACEID     [ reduce using rule 36 (statement_others_reserved_word -> EXACTLY .) ]


state 139

    (37) statement_others_reserved_word -> OR .
    (30) statement_reserved_word -> OR .

  ! reduce/reduce conflict for CLASS_IDENTIFIER resolved using rule 30 (statement_reserved_word -> OR .)
  ! reduce/reduce conflict for NAMESPACEID resolved using rule 30 (statement_reserved_word -> OR .)
  ! reduce/reduce conflict for NUMBER resolved using rule 30 (statement_reserved_word -> OR .)
    VALUE           reduce using rule 37 (statement_others_reserved_word -> OR .)
    ONLY            reduce using rule 37 (statement_others_reserved_word -> OR .)
    SOME            reduce using rule 37 (statement_others_reserved_word -> OR .)
    LEFT_PAREN      reduce using rule 37 (statement_others_reserved_word -> OR .)
    PROPERTY_IDENTIFIER_has reduce using rule 37 (statement_others_reserved_word -> OR .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 37 (statement_others_reserved_word -> OR .)
    PROPERTY_IDENTIFIER reduce using rule 37 (statement_others_reserved_word -> OR .)
    CLASS_IDENTIFIER reduce using rule 30 (statement_reserved_word -> OR .)
    NAMESPACEID     reduce using rule 30 (statement_reserved_word -> OR .)
    NUMBER          reduce using rule 30 (statement_reserved_word -> OR .)

  ! CLASS_IDENTIFIER [ reduce using rule 37 (statement_others_reserved_word -> OR .) ]
  ! NUMBER          [ reduce using rule 37 (statement_others_reserved_word -> OR .) ]
  ! NAMESPACEID     [ reduce using rule 37 (statement_others_reserved_word -> OR .) ]


state 140

    (38) statement_others_reserved_word -> MAX .
    (29) statement_reserved_word -> MAX .

  ! reduce/reduce conflict for CLASS_IDENTIFIER resolved using rule 29 (statement_reserved_word -> MAX .)
  ! reduce/reduce conflict for NAMESPACEID resolved using rule 29 (statement_reserved_word -> MAX .)
  ! reduce/reduce conflict for NUMBER resolved using rule 29 (statement_reserved_word -> MAX .)
    VALUE           reduce using rule 38 (statement_others_reserved_word -> MAX .)
    ONLY            reduce using rule 38 (statement_others_reserved_word -> MAX .)
    SOME            reduce using rule 38 (statement_others_reserved_word -> MAX .)
    LEFT_PAREN      reduce using rule 38 (statement_others_reserved_word -> MAX .)
    PROPERTY_IDENTIFIER_has reduce using rule 38 (statement_others_reserved_word -> MAX .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 38 (statement_others_reserved_word -> MAX .)
    PROPERTY_IDENTIFIER reduce using rule 38 (statement_others_reserved_word -> MAX .)
    CLASS_IDENTIFIER reduce using rule 29 (statement_reserved_word -> MAX .)
    NAMESPACEID     reduce using rule 29 (statement_reserved_word -> MAX .)
    NUMBER          reduce using rule 29 (statement_reserved_word -> MAX .)

  ! CLASS_IDENTIFIER [ reduce using rule 38 (statement_others_reserved_word -> MAX .) ]
  ! NUMBER          [ reduce using rule 38 (statement_others_reserved_word -> MAX .) ]
  ! NAMESPACEID     [ reduce using rule 38 (statement_others_reserved_word -> MAX .) ]


state 141

    (39) statement_others_reserved_word -> AND .
    (31) statement_reserved_word -> AND .

  ! reduce/reduce conflict for CLASS_IDENTIFIER resolved using rule 31 (statement_reserved_word -> AND .)
  ! reduce/reduce conflict for NAMESPACEID resolved using rule 31 (statement_reserved_word -> AND .)
  ! reduce/reduce conflict for NUMBER resolved using rule 31 (statement_reserved_word -> AND .)
    VALUE           reduce using rule 39 (statement_others_reserved_word -> AND .)
    ONLY            reduce using rule 39 (statement_others_reserved_word -> AND .)
    SOME            reduce using rule 39 (statement_others_reserved_word -> AND .)
    LEFT_PAREN      reduce using rule 39 (statement_others_reserved_word -> AND .)
    PROPERTY_IDENTIFIER_has reduce using rule 39 (statement_others_reserved_word -> AND .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 39 (statement_others_reserved_word -> AND .)
    PROPERTY_IDENTIFIER reduce using rule 39 (statement_others_reserved_word -> AND .)
    CLASS_IDENTIFIER reduce using rule 31 (statement_reserved_word -> AND .)
    NAMESPACEID     reduce using rule 31 (statement_reserved_word -> AND .)
    NUMBER          reduce using rule 31 (statement_reserved_word -> AND .)

  ! CLASS_IDENTIFIER [ reduce using rule 39 (statement_others_reserved_word -> AND .) ]
  ! NUMBER          [ reduce using rule 39 (statement_others_reserved_word -> AND .) ]
  ! NAMESPACEID     [ reduce using rule 39 (statement_others_reserved_word -> AND .) ]


state 142

    (22) JustDefined -> CLASS_IDENTIFIER AND expression statement_class_disjoin . statement_class_individuals
    (53) statement_class_individuals -> . empty
    (54) statement_class_individuals -> . Individuals statement_class_individuals_check
    (120) empty -> .

  ! shift/reduce conflict for Individuals resolved as shift
    Individuals     shift and go to state 50
    SubClassOf      reduce using rule 120 (empty -> .)
    DisjointClasses reduce using rule 120 (empty -> .)
    DisjointWith    reduce using rule 120 (empty -> .)
    Class           reduce using rule 120 (empty -> .)
    $end            reduce using rule 120 (empty -> .)

  ! Individuals     [ reduce using rule 120 (empty -> .) ]

    statement_class_individuals    shift and go to state 174
    empty                          shift and go to state 49

state 143

    (87) other_expression -> usually_inside_paren COMMA other_expression .

    SubClassOf      reduce using rule 87 (other_expression -> usually_inside_paren COMMA other_expression .)
    DisjointClasses reduce using rule 87 (other_expression -> usually_inside_paren COMMA other_expression .)
    DisjointWith    reduce using rule 87 (other_expression -> usually_inside_paren COMMA other_expression .)
    Individuals     reduce using rule 87 (other_expression -> usually_inside_paren COMMA other_expression .)
    Class           reduce using rule 87 (other_expression -> usually_inside_paren COMMA other_expression .)
    $end            reduce using rule 87 (other_expression -> usually_inside_paren COMMA other_expression .)
    EquivalentTo    reduce using rule 87 (other_expression -> usually_inside_paren COMMA other_expression .)


state 144

    (90) other_expression -> usually_others_paren AND other_expression .

    SubClassOf      reduce using rule 90 (other_expression -> usually_others_paren AND other_expression .)
    DisjointClasses reduce using rule 90 (other_expression -> usually_others_paren AND other_expression .)
    DisjointWith    reduce using rule 90 (other_expression -> usually_others_paren AND other_expression .)
    Individuals     reduce using rule 90 (other_expression -> usually_others_paren AND other_expression .)
    Class           reduce using rule 90 (other_expression -> usually_others_paren AND other_expression .)
    $end            reduce using rule 90 (other_expression -> usually_others_paren AND other_expression .)
    EquivalentTo    reduce using rule 90 (other_expression -> usually_others_paren AND other_expression .)


state 145

    (89) other_expression -> simple_paren AND other_expression .

    SubClassOf      reduce using rule 89 (other_expression -> simple_paren AND other_expression .)
    DisjointClasses reduce using rule 89 (other_expression -> simple_paren AND other_expression .)
    DisjointWith    reduce using rule 89 (other_expression -> simple_paren AND other_expression .)
    Individuals     reduce using rule 89 (other_expression -> simple_paren AND other_expression .)
    Class           reduce using rule 89 (other_expression -> simple_paren AND other_expression .)
    $end            reduce using rule 89 (other_expression -> simple_paren AND other_expression .)
    EquivalentTo    reduce using rule 89 (other_expression -> simple_paren AND other_expression .)


state 146

    (71) usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .

    AND             reduce using rule 71 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    SubClassOf      reduce using rule 71 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    DisjointClasses reduce using rule 71 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    DisjointWith    reduce using rule 71 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    Individuals     reduce using rule 71 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    Class           reduce using rule 71 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    $end            reduce using rule 71 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    EquivalentTo    reduce using rule 71 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)


state 147

    (72) usually_others_paren -> statement_property_identify statement_others_reserved_word LEFT_PAREN . usually_others_others_paren
    (77) usually_others_others_paren -> . CLASS_IDENTIFIER RIGHT_PAREN
    (78) usually_others_others_paren -> . CLASS_IDENTIFIER OR usually_others_others_paren

    CLASS_IDENTIFIER shift and go to state 176

    usually_others_others_paren    shift and go to state 175

state 148

    (73) usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID . DATA_TYPE
    (76) usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID . DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET

    DATA_TYPE       shift and go to state 177


state 149

    (74) usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER . NAMESPACEID DATA_TYPE
    (75) usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER . CLASS_IDENTIFIER

    NAMESPACEID     shift and go to state 178
    CLASS_IDENTIFIER shift and go to state 179


state 150

    (116) statement_enumerated_class_check -> IndividualNames COMMA statement_enumerated_class_check .

    RIGHT_CURLY_BRACKET reduce using rule 116 (statement_enumerated_class_check -> IndividualNames COMMA statement_enumerated_class_check .)


state 151

    (67) usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE .
    (70) usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE . LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET

    COMMA           reduce using rule 67 (usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE .)
    DisjointClasses reduce using rule 67 (usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE .)
    DisjointWith    reduce using rule 67 (usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE .)
    Individuals     reduce using rule 67 (usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE .)
    SubClassOf      reduce using rule 67 (usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE .)
    Class           reduce using rule 67 (usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE .)
    $end            reduce using rule 67 (usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE .)
    EquivalentTo    reduce using rule 67 (usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE .)
    RIGHT_PAREN     reduce using rule 67 (usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE .)
    LEFT_BRACKET    shift and go to state 180


state 152

    (68) usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER NAMESPACEID . DATA_TYPE

    DATA_TYPE       shift and go to state 181


state 153

    (69) usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER .

    COMMA           reduce using rule 69 (usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER .)
    DisjointClasses reduce using rule 69 (usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER .)
    DisjointWith    reduce using rule 69 (usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER .)
    Individuals     reduce using rule 69 (usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER .)
    SubClassOf      reduce using rule 69 (usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER .)
    Class           reduce using rule 69 (usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER .)
    $end            reduce using rule 69 (usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER .)
    EquivalentTo    reduce using rule 69 (usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER .)
    RIGHT_PAREN     reduce using rule 69 (usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER .)


state 154

    (44) primitive_class_mandatory -> CLASS_IDENTIFIER AND expression statement_class_disjoin . statement_class_individuals
    (53) statement_class_individuals -> . empty
    (54) statement_class_individuals -> . Individuals statement_class_individuals_check
    (120) empty -> .

  ! shift/reduce conflict for Individuals resolved as shift
    Individuals     shift and go to state 50
    EquivalentTo    reduce using rule 120 (empty -> .)
    DisjointClasses reduce using rule 120 (empty -> .)
    DisjointWith    reduce using rule 120 (empty -> .)
    Class           reduce using rule 120 (empty -> .)
    $end            reduce using rule 120 (empty -> .)

  ! Individuals     [ reduce using rule 120 (empty -> .) ]

    statement_class_individuals    shift and go to state 182
    empty                          shift and go to state 49

state 155

    (87) other_expression -> usually_inside_paren COMMA . other_expression
    (81) expression -> usually_inside_paren COMMA . expression
    (85) other_expression -> . usually_inside_paren
    (86) other_expression -> . usually_others_paren
    (87) other_expression -> . usually_inside_paren COMMA other_expression
    (88) other_expression -> . simple_paren
    (89) other_expression -> . simple_paren AND other_expression
    (90) other_expression -> . usually_others_paren AND other_expression
    (80) expression -> . usually_inside_paren
    (81) expression -> . usually_inside_paren COMMA expression
    (82) expression -> . simple_paren
    (83) expression -> . simple_paren COMMA expression
    (84) expression -> . simple_paren AND expression
    (66) usually_inside_paren -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (67) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (68) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (69) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER
    (70) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (71) usually_others_paren -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (72) usually_others_paren -> . statement_property_identify statement_others_reserved_word LEFT_PAREN usually_others_others_paren
    (73) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE
    (74) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (75) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER
    (76) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (79) simple_paren -> . LEFT_PAREN usually_inside_paren RIGHT_PAREN
    (40) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (41) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (42) statement_property_identify -> . PROPERTY_IDENTIFIER

    LEFT_PAREN      shift and go to state 34
    PROPERTY_IDENTIFIER_has shift and go to state 35
    PROPERTY_IDENTIFIER_is_Of shift and go to state 36
    PROPERTY_IDENTIFIER shift and go to state 37

    usually_inside_paren           shift and go to state 120
    other_expression               shift and go to state 143
    expression                     shift and go to state 112
    usually_others_paren           shift and go to state 59
    simple_paren                   shift and go to state 121
    statement_property_identify    shift and go to state 61

state 156

    (89) other_expression -> simple_paren AND . other_expression
    (84) expression -> simple_paren AND . expression
    (85) other_expression -> . usually_inside_paren
    (86) other_expression -> . usually_others_paren
    (87) other_expression -> . usually_inside_paren COMMA other_expression
    (88) other_expression -> . simple_paren
    (89) other_expression -> . simple_paren AND other_expression
    (90) other_expression -> . usually_others_paren AND other_expression
    (80) expression -> . usually_inside_paren
    (81) expression -> . usually_inside_paren COMMA expression
    (82) expression -> . simple_paren
    (83) expression -> . simple_paren COMMA expression
    (84) expression -> . simple_paren AND expression
    (66) usually_inside_paren -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (67) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (68) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (69) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER
    (70) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (71) usually_others_paren -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (72) usually_others_paren -> . statement_property_identify statement_others_reserved_word LEFT_PAREN usually_others_others_paren
    (73) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE
    (74) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (75) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER
    (76) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (79) simple_paren -> . LEFT_PAREN usually_inside_paren RIGHT_PAREN
    (40) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (41) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (42) statement_property_identify -> . PROPERTY_IDENTIFIER

    LEFT_PAREN      shift and go to state 34
    PROPERTY_IDENTIFIER_has shift and go to state 35
    PROPERTY_IDENTIFIER_is_Of shift and go to state 36
    PROPERTY_IDENTIFIER shift and go to state 37

    simple_paren                   shift and go to state 121
    other_expression               shift and go to state 145
    expression                     shift and go to state 114
    usually_inside_paren           shift and go to state 120
    usually_others_paren           shift and go to state 59
    statement_property_identify    shift and go to state 61

state 157

    (43) primitive_class_mandatory -> CLASS_IDENTIFIER COMMA expression statement_class_disjoin . statement_class_individuals
    (53) statement_class_individuals -> . empty
    (54) statement_class_individuals -> . Individuals statement_class_individuals_check
    (120) empty -> .

  ! shift/reduce conflict for Individuals resolved as shift
    Individuals     shift and go to state 50
    EquivalentTo    reduce using rule 120 (empty -> .)
    DisjointClasses reduce using rule 120 (empty -> .)
    DisjointWith    reduce using rule 120 (empty -> .)
    Class           reduce using rule 120 (empty -> .)
    $end            reduce using rule 120 (empty -> .)

  ! Individuals     [ reduce using rule 120 (empty -> .) ]

    statement_class_individuals    shift and go to state 183
    empty                          shift and go to state 49

state 158

    (56) statement_class_individuals_check -> IndividualNames COMMA statement_class_individuals_check .

    Class           reduce using rule 56 (statement_class_individuals_check -> IndividualNames COMMA statement_class_individuals_check .)
    $end            reduce using rule 56 (statement_class_individuals_check -> IndividualNames COMMA statement_class_individuals_check .)
    SubClassOf      reduce using rule 56 (statement_class_individuals_check -> IndividualNames COMMA statement_class_individuals_check .)
    DisjointClasses reduce using rule 56 (statement_class_individuals_check -> IndividualNames COMMA statement_class_individuals_check .)
    DisjointWith    reduce using rule 56 (statement_class_individuals_check -> IndividualNames COMMA statement_class_individuals_check .)
    Individuals     reduce using rule 56 (statement_class_individuals_check -> IndividualNames COMMA statement_class_individuals_check .)
    EquivalentTo    reduce using rule 56 (statement_class_individuals_check -> IndividualNames COMMA statement_class_individuals_check .)


state 159

    (21) JustDefined -> CLASS_IDENTIFIER COMMA expression statement_class_disjoin statement_class_individuals .

    SubClassOf      reduce using rule 21 (JustDefined -> CLASS_IDENTIFIER COMMA expression statement_class_disjoin statement_class_individuals .)
    DisjointClasses reduce using rule 21 (JustDefined -> CLASS_IDENTIFIER COMMA expression statement_class_disjoin statement_class_individuals .)
    DisjointWith    reduce using rule 21 (JustDefined -> CLASS_IDENTIFIER COMMA expression statement_class_disjoin statement_class_individuals .)
    Individuals     reduce using rule 21 (JustDefined -> CLASS_IDENTIFIER COMMA expression statement_class_disjoin statement_class_individuals .)
    Class           reduce using rule 21 (JustDefined -> CLASS_IDENTIFIER COMMA expression statement_class_disjoin statement_class_individuals .)
    $end            reduce using rule 21 (JustDefined -> CLASS_IDENTIFIER COMMA expression statement_class_disjoin statement_class_individuals .)


state 160

    (93) nested_descriptions -> nested_descriptions AND nested_descriptions .
    (93) nested_descriptions -> nested_descriptions . AND nested_descriptions
    (94) nested_descriptions -> nested_descriptions . OR nested_descriptions

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SubClassOf      reduce using rule 93 (nested_descriptions -> nested_descriptions AND nested_descriptions .)
    DisjointClasses reduce using rule 93 (nested_descriptions -> nested_descriptions AND nested_descriptions .)
    DisjointWith    reduce using rule 93 (nested_descriptions -> nested_descriptions AND nested_descriptions .)
    Individuals     reduce using rule 93 (nested_descriptions -> nested_descriptions AND nested_descriptions .)
    Class           reduce using rule 93 (nested_descriptions -> nested_descriptions AND nested_descriptions .)
    $end            reduce using rule 93 (nested_descriptions -> nested_descriptions AND nested_descriptions .)
    EquivalentTo    reduce using rule 93 (nested_descriptions -> nested_descriptions AND nested_descriptions .)
    RIGHT_PAREN     reduce using rule 93 (nested_descriptions -> nested_descriptions AND nested_descriptions .)
    AND             shift and go to state 127
    OR              shift and go to state 128

  ! AND             [ reduce using rule 93 (nested_descriptions -> nested_descriptions AND nested_descriptions .) ]
  ! OR              [ reduce using rule 93 (nested_descriptions -> nested_descriptions AND nested_descriptions .) ]


state 161

    (96) nested_descriptions -> statement_property_identify . statement_others_reserved_word nested_descriptions
    (97) nested_descriptions -> statement_property_identify . statement_others_reserved_word CLASS_IDENTIFIER
    (98) nested_descriptions -> statement_property_identify . statement_others_reserved_word VALUE CLASS_IDENTIFIER
    (99) nested_descriptions -> statement_property_identify . statement_others_reserved_word VALUE IndividualNames
    (100) nested_descriptions -> statement_property_identify . VALUE IndividualNames
    (101) nested_descriptions -> statement_property_identify . VALUE CLASS_IDENTIFIER
    (102) nested_descriptions -> statement_property_identify . statement_others_reserved_word VALUE nested_descriptions
    (103) nested_descriptions -> statement_property_identify . statement_others_reserved_word NUMBER nested_descriptions
    (104) nested_descriptions -> statement_property_identify . statement_others_reserved_word ONLY CLASS_IDENTIFIER
    (105) nested_descriptions -> statement_property_identify . statement_others_reserved_word ONLY nested_descriptions
    (106) nested_descriptions -> statement_property_identify . statement_others_reserved_word SOME CLASS_IDENTIFIER
    (107) nested_descriptions -> statement_property_identify . statement_others_reserved_word SOME nested_descriptions
    (33) statement_others_reserved_word -> . SOME
    (34) statement_others_reserved_word -> . ONLY
    (35) statement_others_reserved_word -> . MIN
    (36) statement_others_reserved_word -> . EXACTLY
    (37) statement_others_reserved_word -> . OR
    (38) statement_others_reserved_word -> . MAX
    (39) statement_others_reserved_word -> . AND

    VALUE           shift and go to state 184
    SOME            shift and go to state 185
    ONLY            shift and go to state 108
    MIN             shift and go to state 186
    EXACTLY         shift and go to state 187
    OR              shift and go to state 188
    MAX             shift and go to state 189
    AND             shift and go to state 190

    statement_others_reserved_word shift and go to state 164

state 162

    (94) nested_descriptions -> nested_descriptions OR nested_descriptions .
    (93) nested_descriptions -> nested_descriptions . AND nested_descriptions
    (94) nested_descriptions -> nested_descriptions . OR nested_descriptions

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SubClassOf      reduce using rule 94 (nested_descriptions -> nested_descriptions OR nested_descriptions .)
    DisjointClasses reduce using rule 94 (nested_descriptions -> nested_descriptions OR nested_descriptions .)
    DisjointWith    reduce using rule 94 (nested_descriptions -> nested_descriptions OR nested_descriptions .)
    Individuals     reduce using rule 94 (nested_descriptions -> nested_descriptions OR nested_descriptions .)
    Class           reduce using rule 94 (nested_descriptions -> nested_descriptions OR nested_descriptions .)
    $end            reduce using rule 94 (nested_descriptions -> nested_descriptions OR nested_descriptions .)
    EquivalentTo    reduce using rule 94 (nested_descriptions -> nested_descriptions OR nested_descriptions .)
    RIGHT_PAREN     reduce using rule 94 (nested_descriptions -> nested_descriptions OR nested_descriptions .)
    AND             shift and go to state 127
    OR              shift and go to state 128

  ! AND             [ reduce using rule 94 (nested_descriptions -> nested_descriptions OR nested_descriptions .) ]
  ! OR              [ reduce using rule 94 (nested_descriptions -> nested_descriptions OR nested_descriptions .) ]


state 163

    (95) nested_descriptions -> LEFT_PAREN nested_descriptions RIGHT_PAREN .

    AND             reduce using rule 95 (nested_descriptions -> LEFT_PAREN nested_descriptions RIGHT_PAREN .)
    OR              reduce using rule 95 (nested_descriptions -> LEFT_PAREN nested_descriptions RIGHT_PAREN .)
    SubClassOf      reduce using rule 95 (nested_descriptions -> LEFT_PAREN nested_descriptions RIGHT_PAREN .)
    DisjointClasses reduce using rule 95 (nested_descriptions -> LEFT_PAREN nested_descriptions RIGHT_PAREN .)
    DisjointWith    reduce using rule 95 (nested_descriptions -> LEFT_PAREN nested_descriptions RIGHT_PAREN .)
    Individuals     reduce using rule 95 (nested_descriptions -> LEFT_PAREN nested_descriptions RIGHT_PAREN .)
    Class           reduce using rule 95 (nested_descriptions -> LEFT_PAREN nested_descriptions RIGHT_PAREN .)
    $end            reduce using rule 95 (nested_descriptions -> LEFT_PAREN nested_descriptions RIGHT_PAREN .)
    EquivalentTo    reduce using rule 95 (nested_descriptions -> LEFT_PAREN nested_descriptions RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 95 (nested_descriptions -> LEFT_PAREN nested_descriptions RIGHT_PAREN .)


state 164

    (96) nested_descriptions -> statement_property_identify statement_others_reserved_word . nested_descriptions
    (97) nested_descriptions -> statement_property_identify statement_others_reserved_word . CLASS_IDENTIFIER
    (98) nested_descriptions -> statement_property_identify statement_others_reserved_word . VALUE CLASS_IDENTIFIER
    (99) nested_descriptions -> statement_property_identify statement_others_reserved_word . VALUE IndividualNames
    (102) nested_descriptions -> statement_property_identify statement_others_reserved_word . VALUE nested_descriptions
    (103) nested_descriptions -> statement_property_identify statement_others_reserved_word . NUMBER nested_descriptions
    (104) nested_descriptions -> statement_property_identify statement_others_reserved_word . ONLY CLASS_IDENTIFIER
    (105) nested_descriptions -> statement_property_identify statement_others_reserved_word . ONLY nested_descriptions
    (106) nested_descriptions -> statement_property_identify statement_others_reserved_word . SOME CLASS_IDENTIFIER
    (107) nested_descriptions -> statement_property_identify statement_others_reserved_word . SOME nested_descriptions
    (93) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (94) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (95) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (96) nested_descriptions -> . statement_property_identify statement_others_reserved_word nested_descriptions
    (97) nested_descriptions -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (98) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER
    (99) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE IndividualNames
    (100) nested_descriptions -> . statement_property_identify VALUE IndividualNames
    (101) nested_descriptions -> . statement_property_identify VALUE CLASS_IDENTIFIER
    (102) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE nested_descriptions
    (103) nested_descriptions -> . statement_property_identify statement_others_reserved_word NUMBER nested_descriptions
    (104) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER
    (105) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY nested_descriptions
    (106) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER
    (107) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME nested_descriptions
    (108) nested_descriptions -> . CLASS_IDENTIFIER
    (40) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (41) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (42) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 191
    VALUE           shift and go to state 167
    NUMBER          shift and go to state 192
    ONLY            shift and go to state 169
    SOME            shift and go to state 170
    LEFT_PAREN      shift and go to state 131
    PROPERTY_IDENTIFIER_has shift and go to state 35
    PROPERTY_IDENTIFIER_is_Of shift and go to state 36
    PROPERTY_IDENTIFIER shift and go to state 37

    statement_property_identify    shift and go to state 161
    nested_descriptions            shift and go to state 165

state 165

    (96) nested_descriptions -> statement_property_identify statement_others_reserved_word nested_descriptions .
    (93) nested_descriptions -> nested_descriptions . AND nested_descriptions
    (94) nested_descriptions -> nested_descriptions . OR nested_descriptions

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SubClassOf      reduce using rule 96 (nested_descriptions -> statement_property_identify statement_others_reserved_word nested_descriptions .)
    DisjointClasses reduce using rule 96 (nested_descriptions -> statement_property_identify statement_others_reserved_word nested_descriptions .)
    DisjointWith    reduce using rule 96 (nested_descriptions -> statement_property_identify statement_others_reserved_word nested_descriptions .)
    Individuals     reduce using rule 96 (nested_descriptions -> statement_property_identify statement_others_reserved_word nested_descriptions .)
    Class           reduce using rule 96 (nested_descriptions -> statement_property_identify statement_others_reserved_word nested_descriptions .)
    $end            reduce using rule 96 (nested_descriptions -> statement_property_identify statement_others_reserved_word nested_descriptions .)
    EquivalentTo    reduce using rule 96 (nested_descriptions -> statement_property_identify statement_others_reserved_word nested_descriptions .)
    RIGHT_PAREN     reduce using rule 96 (nested_descriptions -> statement_property_identify statement_others_reserved_word nested_descriptions .)
    AND             shift and go to state 127
    OR              shift and go to state 128

  ! AND             [ reduce using rule 96 (nested_descriptions -> statement_property_identify statement_others_reserved_word nested_descriptions .) ]
  ! OR              [ reduce using rule 96 (nested_descriptions -> statement_property_identify statement_others_reserved_word nested_descriptions .) ]


state 166

    (97) nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .
    (71) usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .
    (108) nested_descriptions -> CLASS_IDENTIFIER .

  ! reduce/reduce conflict for AND resolved using rule 71 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for SubClassOf resolved using rule 71 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for DisjointClasses resolved using rule 71 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for DisjointWith resolved using rule 71 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for Individuals resolved using rule 71 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for Class resolved using rule 71 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 71 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for EquivalentTo resolved using rule 71 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for AND resolved using rule 71 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for OR resolved using rule 97 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for SubClassOf resolved using rule 71 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for DisjointClasses resolved using rule 71 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for DisjointWith resolved using rule 71 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for Individuals resolved using rule 71 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for Class resolved using rule 71 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 71 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for EquivalentTo resolved using rule 71 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    OR              reduce using rule 97 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    AND             reduce using rule 71 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    SubClassOf      reduce using rule 71 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    DisjointClasses reduce using rule 71 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    DisjointWith    reduce using rule 71 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    Individuals     reduce using rule 71 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    Class           reduce using rule 71 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    $end            reduce using rule 71 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    EquivalentTo    reduce using rule 71 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)

  ! AND             [ reduce using rule 97 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .) ]
  ! SubClassOf      [ reduce using rule 97 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .) ]
  ! DisjointClasses [ reduce using rule 97 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .) ]
  ! DisjointWith    [ reduce using rule 97 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .) ]
  ! Individuals     [ reduce using rule 97 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .) ]
  ! Class           [ reduce using rule 97 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .) ]
  ! $end            [ reduce using rule 97 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .) ]
  ! EquivalentTo    [ reduce using rule 97 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .) ]
  ! AND             [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! OR              [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! SubClassOf      [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! DisjointClasses [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! DisjointWith    [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! Individuals     [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! Class           [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! $end            [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! EquivalentTo    [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]


state 167

    (98) nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE . CLASS_IDENTIFIER
    (99) nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE . IndividualNames
    (102) nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE . nested_descriptions
    (93) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (94) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (95) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (96) nested_descriptions -> . statement_property_identify statement_others_reserved_word nested_descriptions
    (97) nested_descriptions -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (98) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER
    (99) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE IndividualNames
    (100) nested_descriptions -> . statement_property_identify VALUE IndividualNames
    (101) nested_descriptions -> . statement_property_identify VALUE CLASS_IDENTIFIER
    (102) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE nested_descriptions
    (103) nested_descriptions -> . statement_property_identify statement_others_reserved_word NUMBER nested_descriptions
    (104) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER
    (105) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY nested_descriptions
    (106) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER
    (107) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME nested_descriptions
    (108) nested_descriptions -> . CLASS_IDENTIFIER
    (40) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (41) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (42) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 193
    IndividualNames shift and go to state 194
    LEFT_PAREN      shift and go to state 131
    PROPERTY_IDENTIFIER_has shift and go to state 35
    PROPERTY_IDENTIFIER_is_Of shift and go to state 36
    PROPERTY_IDENTIFIER shift and go to state 37

    statement_property_identify    shift and go to state 161
    nested_descriptions            shift and go to state 195

state 168

    (103) nested_descriptions -> statement_property_identify statement_others_reserved_word NUMBER . nested_descriptions
    (74) usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER . NAMESPACEID DATA_TYPE
    (75) usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER . CLASS_IDENTIFIER
    (93) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (94) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (95) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (96) nested_descriptions -> . statement_property_identify statement_others_reserved_word nested_descriptions
    (97) nested_descriptions -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (98) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER
    (99) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE IndividualNames
    (100) nested_descriptions -> . statement_property_identify VALUE IndividualNames
    (101) nested_descriptions -> . statement_property_identify VALUE CLASS_IDENTIFIER
    (102) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE nested_descriptions
    (103) nested_descriptions -> . statement_property_identify statement_others_reserved_word NUMBER nested_descriptions
    (104) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER
    (105) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY nested_descriptions
    (106) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER
    (107) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME nested_descriptions
    (108) nested_descriptions -> . CLASS_IDENTIFIER
    (40) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (41) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (42) statement_property_identify -> . PROPERTY_IDENTIFIER

    NAMESPACEID     shift and go to state 178
    CLASS_IDENTIFIER shift and go to state 197
    LEFT_PAREN      shift and go to state 131
    PROPERTY_IDENTIFIER_has shift and go to state 35
    PROPERTY_IDENTIFIER_is_Of shift and go to state 36
    PROPERTY_IDENTIFIER shift and go to state 37

    statement_property_identify    shift and go to state 161
    nested_descriptions            shift and go to state 196

state 169

    (104) nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY . CLASS_IDENTIFIER
    (105) nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY . nested_descriptions
    (93) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (94) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (95) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (96) nested_descriptions -> . statement_property_identify statement_others_reserved_word nested_descriptions
    (97) nested_descriptions -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (98) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER
    (99) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE IndividualNames
    (100) nested_descriptions -> . statement_property_identify VALUE IndividualNames
    (101) nested_descriptions -> . statement_property_identify VALUE CLASS_IDENTIFIER
    (102) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE nested_descriptions
    (103) nested_descriptions -> . statement_property_identify statement_others_reserved_word NUMBER nested_descriptions
    (104) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER
    (105) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY nested_descriptions
    (106) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER
    (107) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME nested_descriptions
    (108) nested_descriptions -> . CLASS_IDENTIFIER
    (40) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (41) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (42) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 198
    LEFT_PAREN      shift and go to state 131
    PROPERTY_IDENTIFIER_has shift and go to state 35
    PROPERTY_IDENTIFIER_is_Of shift and go to state 36
    PROPERTY_IDENTIFIER shift and go to state 37

    statement_property_identify    shift and go to state 161
    nested_descriptions            shift and go to state 199

state 170

    (106) nested_descriptions -> statement_property_identify statement_others_reserved_word SOME . CLASS_IDENTIFIER
    (107) nested_descriptions -> statement_property_identify statement_others_reserved_word SOME . nested_descriptions
    (93) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (94) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (95) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (96) nested_descriptions -> . statement_property_identify statement_others_reserved_word nested_descriptions
    (97) nested_descriptions -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (98) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER
    (99) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE IndividualNames
    (100) nested_descriptions -> . statement_property_identify VALUE IndividualNames
    (101) nested_descriptions -> . statement_property_identify VALUE CLASS_IDENTIFIER
    (102) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE nested_descriptions
    (103) nested_descriptions -> . statement_property_identify statement_others_reserved_word NUMBER nested_descriptions
    (104) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER
    (105) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY nested_descriptions
    (106) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER
    (107) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME nested_descriptions
    (108) nested_descriptions -> . CLASS_IDENTIFIER
    (40) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (41) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (42) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 200
    LEFT_PAREN      shift and go to state 131
    PROPERTY_IDENTIFIER_has shift and go to state 35
    PROPERTY_IDENTIFIER_is_Of shift and go to state 36
    PROPERTY_IDENTIFIER shift and go to state 37

    statement_property_identify    shift and go to state 161
    nested_descriptions            shift and go to state 201

state 171

    (72) usually_others_paren -> statement_property_identify statement_others_reserved_word LEFT_PAREN . usually_others_others_paren
    (95) nested_descriptions -> LEFT_PAREN . nested_descriptions RIGHT_PAREN
    (77) usually_others_others_paren -> . CLASS_IDENTIFIER RIGHT_PAREN
    (78) usually_others_others_paren -> . CLASS_IDENTIFIER OR usually_others_others_paren
    (93) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (94) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (95) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (96) nested_descriptions -> . statement_property_identify statement_others_reserved_word nested_descriptions
    (97) nested_descriptions -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (98) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER
    (99) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE IndividualNames
    (100) nested_descriptions -> . statement_property_identify VALUE IndividualNames
    (101) nested_descriptions -> . statement_property_identify VALUE CLASS_IDENTIFIER
    (102) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE nested_descriptions
    (103) nested_descriptions -> . statement_property_identify statement_others_reserved_word NUMBER nested_descriptions
    (104) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER
    (105) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY nested_descriptions
    (106) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER
    (107) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME nested_descriptions
    (108) nested_descriptions -> . CLASS_IDENTIFIER
    (40) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (41) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (42) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 202
    LEFT_PAREN      shift and go to state 131
    PROPERTY_IDENTIFIER_has shift and go to state 35
    PROPERTY_IDENTIFIER_is_Of shift and go to state 36
    PROPERTY_IDENTIFIER shift and go to state 37

    statement_property_identify    shift and go to state 161
    usually_others_others_paren    shift and go to state 175
    nested_descriptions            shift and go to state 132

state 172

    (100) nested_descriptions -> statement_property_identify VALUE IndividualNames .

    AND             reduce using rule 100 (nested_descriptions -> statement_property_identify VALUE IndividualNames .)
    OR              reduce using rule 100 (nested_descriptions -> statement_property_identify VALUE IndividualNames .)
    SubClassOf      reduce using rule 100 (nested_descriptions -> statement_property_identify VALUE IndividualNames .)
    DisjointClasses reduce using rule 100 (nested_descriptions -> statement_property_identify VALUE IndividualNames .)
    DisjointWith    reduce using rule 100 (nested_descriptions -> statement_property_identify VALUE IndividualNames .)
    Individuals     reduce using rule 100 (nested_descriptions -> statement_property_identify VALUE IndividualNames .)
    Class           reduce using rule 100 (nested_descriptions -> statement_property_identify VALUE IndividualNames .)
    $end            reduce using rule 100 (nested_descriptions -> statement_property_identify VALUE IndividualNames .)
    EquivalentTo    reduce using rule 100 (nested_descriptions -> statement_property_identify VALUE IndividualNames .)
    RIGHT_PAREN     reduce using rule 100 (nested_descriptions -> statement_property_identify VALUE IndividualNames .)


state 173

    (101) nested_descriptions -> statement_property_identify VALUE CLASS_IDENTIFIER .

    AND             reduce using rule 101 (nested_descriptions -> statement_property_identify VALUE CLASS_IDENTIFIER .)
    OR              reduce using rule 101 (nested_descriptions -> statement_property_identify VALUE CLASS_IDENTIFIER .)
    SubClassOf      reduce using rule 101 (nested_descriptions -> statement_property_identify VALUE CLASS_IDENTIFIER .)
    DisjointClasses reduce using rule 101 (nested_descriptions -> statement_property_identify VALUE CLASS_IDENTIFIER .)
    DisjointWith    reduce using rule 101 (nested_descriptions -> statement_property_identify VALUE CLASS_IDENTIFIER .)
    Individuals     reduce using rule 101 (nested_descriptions -> statement_property_identify VALUE CLASS_IDENTIFIER .)
    Class           reduce using rule 101 (nested_descriptions -> statement_property_identify VALUE CLASS_IDENTIFIER .)
    $end            reduce using rule 101 (nested_descriptions -> statement_property_identify VALUE CLASS_IDENTIFIER .)
    EquivalentTo    reduce using rule 101 (nested_descriptions -> statement_property_identify VALUE CLASS_IDENTIFIER .)
    RIGHT_PAREN     reduce using rule 101 (nested_descriptions -> statement_property_identify VALUE CLASS_IDENTIFIER .)


state 174

    (22) JustDefined -> CLASS_IDENTIFIER AND expression statement_class_disjoin statement_class_individuals .

    SubClassOf      reduce using rule 22 (JustDefined -> CLASS_IDENTIFIER AND expression statement_class_disjoin statement_class_individuals .)
    DisjointClasses reduce using rule 22 (JustDefined -> CLASS_IDENTIFIER AND expression statement_class_disjoin statement_class_individuals .)
    DisjointWith    reduce using rule 22 (JustDefined -> CLASS_IDENTIFIER AND expression statement_class_disjoin statement_class_individuals .)
    Individuals     reduce using rule 22 (JustDefined -> CLASS_IDENTIFIER AND expression statement_class_disjoin statement_class_individuals .)
    Class           reduce using rule 22 (JustDefined -> CLASS_IDENTIFIER AND expression statement_class_disjoin statement_class_individuals .)
    $end            reduce using rule 22 (JustDefined -> CLASS_IDENTIFIER AND expression statement_class_disjoin statement_class_individuals .)


state 175

    (72) usually_others_paren -> statement_property_identify statement_others_reserved_word LEFT_PAREN usually_others_others_paren .

    AND             reduce using rule 72 (usually_others_paren -> statement_property_identify statement_others_reserved_word LEFT_PAREN usually_others_others_paren .)
    SubClassOf      reduce using rule 72 (usually_others_paren -> statement_property_identify statement_others_reserved_word LEFT_PAREN usually_others_others_paren .)
    DisjointClasses reduce using rule 72 (usually_others_paren -> statement_property_identify statement_others_reserved_word LEFT_PAREN usually_others_others_paren .)
    DisjointWith    reduce using rule 72 (usually_others_paren -> statement_property_identify statement_others_reserved_word LEFT_PAREN usually_others_others_paren .)
    Individuals     reduce using rule 72 (usually_others_paren -> statement_property_identify statement_others_reserved_word LEFT_PAREN usually_others_others_paren .)
    Class           reduce using rule 72 (usually_others_paren -> statement_property_identify statement_others_reserved_word LEFT_PAREN usually_others_others_paren .)
    $end            reduce using rule 72 (usually_others_paren -> statement_property_identify statement_others_reserved_word LEFT_PAREN usually_others_others_paren .)
    EquivalentTo    reduce using rule 72 (usually_others_paren -> statement_property_identify statement_others_reserved_word LEFT_PAREN usually_others_others_paren .)


state 176

    (77) usually_others_others_paren -> CLASS_IDENTIFIER . RIGHT_PAREN
    (78) usually_others_others_paren -> CLASS_IDENTIFIER . OR usually_others_others_paren

    RIGHT_PAREN     shift and go to state 203
    OR              shift and go to state 204


state 177

    (73) usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE .
    (76) usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE . LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET

    AND             reduce using rule 73 (usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE .)
    SubClassOf      reduce using rule 73 (usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE .)
    DisjointClasses reduce using rule 73 (usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE .)
    DisjointWith    reduce using rule 73 (usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE .)
    Individuals     reduce using rule 73 (usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE .)
    Class           reduce using rule 73 (usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE .)
    $end            reduce using rule 73 (usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE .)
    EquivalentTo    reduce using rule 73 (usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE .)
    LEFT_BRACKET    shift and go to state 205


state 178

    (74) usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID . DATA_TYPE

    DATA_TYPE       shift and go to state 206


state 179

    (75) usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER .

    AND             reduce using rule 75 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER .)
    SubClassOf      reduce using rule 75 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER .)
    DisjointClasses reduce using rule 75 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER .)
    DisjointWith    reduce using rule 75 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER .)
    Individuals     reduce using rule 75 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER .)
    Class           reduce using rule 75 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER .)
    $end            reduce using rule 75 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER .)
    EquivalentTo    reduce using rule 75 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER .)


state 180

    (70) usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET . statement_operator_symbol NUMBER RIGHT_BRACKET
    (61) statement_operator_symbol -> . LESS_THAN
    (62) statement_operator_symbol -> . GREATER_THAN
    (63) statement_operator_symbol -> . EQUALS
    (64) statement_operator_symbol -> . GREATER_THAN EQUALS
    (65) statement_operator_symbol -> . LESS_THAN EQUALS

    LESS_THAN       shift and go to state 208
    GREATER_THAN    shift and go to state 209
    EQUALS          shift and go to state 210

    statement_operator_symbol      shift and go to state 207

state 181

    (68) usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE .

    COMMA           reduce using rule 68 (usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE .)
    DisjointClasses reduce using rule 68 (usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE .)
    DisjointWith    reduce using rule 68 (usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE .)
    Individuals     reduce using rule 68 (usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE .)
    SubClassOf      reduce using rule 68 (usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE .)
    Class           reduce using rule 68 (usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE .)
    $end            reduce using rule 68 (usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE .)
    EquivalentTo    reduce using rule 68 (usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE .)
    RIGHT_PAREN     reduce using rule 68 (usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE .)


state 182

    (44) primitive_class_mandatory -> CLASS_IDENTIFIER AND expression statement_class_disjoin statement_class_individuals .

    EquivalentTo    reduce using rule 44 (primitive_class_mandatory -> CLASS_IDENTIFIER AND expression statement_class_disjoin statement_class_individuals .)
    DisjointClasses reduce using rule 44 (primitive_class_mandatory -> CLASS_IDENTIFIER AND expression statement_class_disjoin statement_class_individuals .)
    DisjointWith    reduce using rule 44 (primitive_class_mandatory -> CLASS_IDENTIFIER AND expression statement_class_disjoin statement_class_individuals .)
    Individuals     reduce using rule 44 (primitive_class_mandatory -> CLASS_IDENTIFIER AND expression statement_class_disjoin statement_class_individuals .)
    Class           reduce using rule 44 (primitive_class_mandatory -> CLASS_IDENTIFIER AND expression statement_class_disjoin statement_class_individuals .)
    $end            reduce using rule 44 (primitive_class_mandatory -> CLASS_IDENTIFIER AND expression statement_class_disjoin statement_class_individuals .)


state 183

    (43) primitive_class_mandatory -> CLASS_IDENTIFIER COMMA expression statement_class_disjoin statement_class_individuals .

    EquivalentTo    reduce using rule 43 (primitive_class_mandatory -> CLASS_IDENTIFIER COMMA expression statement_class_disjoin statement_class_individuals .)
    DisjointClasses reduce using rule 43 (primitive_class_mandatory -> CLASS_IDENTIFIER COMMA expression statement_class_disjoin statement_class_individuals .)
    DisjointWith    reduce using rule 43 (primitive_class_mandatory -> CLASS_IDENTIFIER COMMA expression statement_class_disjoin statement_class_individuals .)
    Individuals     reduce using rule 43 (primitive_class_mandatory -> CLASS_IDENTIFIER COMMA expression statement_class_disjoin statement_class_individuals .)
    Class           reduce using rule 43 (primitive_class_mandatory -> CLASS_IDENTIFIER COMMA expression statement_class_disjoin statement_class_individuals .)
    $end            reduce using rule 43 (primitive_class_mandatory -> CLASS_IDENTIFIER COMMA expression statement_class_disjoin statement_class_individuals .)


state 184

    (100) nested_descriptions -> statement_property_identify VALUE . IndividualNames
    (101) nested_descriptions -> statement_property_identify VALUE . CLASS_IDENTIFIER

    IndividualNames shift and go to state 172
    CLASS_IDENTIFIER shift and go to state 173


state 185

    (33) statement_others_reserved_word -> SOME .

    CLASS_IDENTIFIER reduce using rule 33 (statement_others_reserved_word -> SOME .)
    VALUE           reduce using rule 33 (statement_others_reserved_word -> SOME .)
    NUMBER          reduce using rule 33 (statement_others_reserved_word -> SOME .)
    ONLY            reduce using rule 33 (statement_others_reserved_word -> SOME .)
    SOME            reduce using rule 33 (statement_others_reserved_word -> SOME .)
    LEFT_PAREN      reduce using rule 33 (statement_others_reserved_word -> SOME .)
    PROPERTY_IDENTIFIER_has reduce using rule 33 (statement_others_reserved_word -> SOME .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 33 (statement_others_reserved_word -> SOME .)
    PROPERTY_IDENTIFIER reduce using rule 33 (statement_others_reserved_word -> SOME .)


state 186

    (35) statement_others_reserved_word -> MIN .

    CLASS_IDENTIFIER reduce using rule 35 (statement_others_reserved_word -> MIN .)
    VALUE           reduce using rule 35 (statement_others_reserved_word -> MIN .)
    NUMBER          reduce using rule 35 (statement_others_reserved_word -> MIN .)
    ONLY            reduce using rule 35 (statement_others_reserved_word -> MIN .)
    SOME            reduce using rule 35 (statement_others_reserved_word -> MIN .)
    LEFT_PAREN      reduce using rule 35 (statement_others_reserved_word -> MIN .)
    PROPERTY_IDENTIFIER_has reduce using rule 35 (statement_others_reserved_word -> MIN .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 35 (statement_others_reserved_word -> MIN .)
    PROPERTY_IDENTIFIER reduce using rule 35 (statement_others_reserved_word -> MIN .)


state 187

    (36) statement_others_reserved_word -> EXACTLY .

    CLASS_IDENTIFIER reduce using rule 36 (statement_others_reserved_word -> EXACTLY .)
    VALUE           reduce using rule 36 (statement_others_reserved_word -> EXACTLY .)
    NUMBER          reduce using rule 36 (statement_others_reserved_word -> EXACTLY .)
    ONLY            reduce using rule 36 (statement_others_reserved_word -> EXACTLY .)
    SOME            reduce using rule 36 (statement_others_reserved_word -> EXACTLY .)
    LEFT_PAREN      reduce using rule 36 (statement_others_reserved_word -> EXACTLY .)
    PROPERTY_IDENTIFIER_has reduce using rule 36 (statement_others_reserved_word -> EXACTLY .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 36 (statement_others_reserved_word -> EXACTLY .)
    PROPERTY_IDENTIFIER reduce using rule 36 (statement_others_reserved_word -> EXACTLY .)


state 188

    (37) statement_others_reserved_word -> OR .

    CLASS_IDENTIFIER reduce using rule 37 (statement_others_reserved_word -> OR .)
    VALUE           reduce using rule 37 (statement_others_reserved_word -> OR .)
    NUMBER          reduce using rule 37 (statement_others_reserved_word -> OR .)
    ONLY            reduce using rule 37 (statement_others_reserved_word -> OR .)
    SOME            reduce using rule 37 (statement_others_reserved_word -> OR .)
    LEFT_PAREN      reduce using rule 37 (statement_others_reserved_word -> OR .)
    PROPERTY_IDENTIFIER_has reduce using rule 37 (statement_others_reserved_word -> OR .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 37 (statement_others_reserved_word -> OR .)
    PROPERTY_IDENTIFIER reduce using rule 37 (statement_others_reserved_word -> OR .)


state 189

    (38) statement_others_reserved_word -> MAX .

    CLASS_IDENTIFIER reduce using rule 38 (statement_others_reserved_word -> MAX .)
    VALUE           reduce using rule 38 (statement_others_reserved_word -> MAX .)
    NUMBER          reduce using rule 38 (statement_others_reserved_word -> MAX .)
    ONLY            reduce using rule 38 (statement_others_reserved_word -> MAX .)
    SOME            reduce using rule 38 (statement_others_reserved_word -> MAX .)
    LEFT_PAREN      reduce using rule 38 (statement_others_reserved_word -> MAX .)
    PROPERTY_IDENTIFIER_has reduce using rule 38 (statement_others_reserved_word -> MAX .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 38 (statement_others_reserved_word -> MAX .)
    PROPERTY_IDENTIFIER reduce using rule 38 (statement_others_reserved_word -> MAX .)


state 190

    (39) statement_others_reserved_word -> AND .

    CLASS_IDENTIFIER reduce using rule 39 (statement_others_reserved_word -> AND .)
    VALUE           reduce using rule 39 (statement_others_reserved_word -> AND .)
    NUMBER          reduce using rule 39 (statement_others_reserved_word -> AND .)
    ONLY            reduce using rule 39 (statement_others_reserved_word -> AND .)
    SOME            reduce using rule 39 (statement_others_reserved_word -> AND .)
    LEFT_PAREN      reduce using rule 39 (statement_others_reserved_word -> AND .)
    PROPERTY_IDENTIFIER_has reduce using rule 39 (statement_others_reserved_word -> AND .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 39 (statement_others_reserved_word -> AND .)
    PROPERTY_IDENTIFIER reduce using rule 39 (statement_others_reserved_word -> AND .)


state 191

    (97) nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .
    (108) nested_descriptions -> CLASS_IDENTIFIER .

  ! reduce/reduce conflict for AND resolved using rule 97 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for OR resolved using rule 97 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for SubClassOf resolved using rule 97 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for DisjointClasses resolved using rule 97 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for DisjointWith resolved using rule 97 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for Individuals resolved using rule 97 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for Class resolved using rule 97 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 97 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for EquivalentTo resolved using rule 97 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 97 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    RIGHT_PAREN     reduce using rule 97 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    AND             reduce using rule 97 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    OR              reduce using rule 97 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    SubClassOf      reduce using rule 97 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    DisjointClasses reduce using rule 97 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    DisjointWith    reduce using rule 97 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    Individuals     reduce using rule 97 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    Class           reduce using rule 97 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    $end            reduce using rule 97 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    EquivalentTo    reduce using rule 97 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)

  ! AND             [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! OR              [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! SubClassOf      [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! DisjointClasses [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! DisjointWith    [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! Individuals     [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! Class           [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! $end            [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! EquivalentTo    [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! RIGHT_PAREN     [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]


state 192

    (103) nested_descriptions -> statement_property_identify statement_others_reserved_word NUMBER . nested_descriptions
    (93) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (94) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (95) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (96) nested_descriptions -> . statement_property_identify statement_others_reserved_word nested_descriptions
    (97) nested_descriptions -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (98) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER
    (99) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE IndividualNames
    (100) nested_descriptions -> . statement_property_identify VALUE IndividualNames
    (101) nested_descriptions -> . statement_property_identify VALUE CLASS_IDENTIFIER
    (102) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE nested_descriptions
    (103) nested_descriptions -> . statement_property_identify statement_others_reserved_word NUMBER nested_descriptions
    (104) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER
    (105) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY nested_descriptions
    (106) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER
    (107) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME nested_descriptions
    (108) nested_descriptions -> . CLASS_IDENTIFIER
    (40) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (41) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (42) statement_property_identify -> . PROPERTY_IDENTIFIER

    LEFT_PAREN      shift and go to state 131
    CLASS_IDENTIFIER shift and go to state 85
    PROPERTY_IDENTIFIER_has shift and go to state 35
    PROPERTY_IDENTIFIER_is_Of shift and go to state 36
    PROPERTY_IDENTIFIER shift and go to state 37

    statement_property_identify    shift and go to state 161
    nested_descriptions            shift and go to state 196

state 193

    (98) nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER .
    (108) nested_descriptions -> CLASS_IDENTIFIER .

  ! reduce/reduce conflict for AND resolved using rule 98 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for OR resolved using rule 98 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for SubClassOf resolved using rule 98 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for DisjointClasses resolved using rule 98 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for DisjointWith resolved using rule 98 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for Individuals resolved using rule 98 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for Class resolved using rule 98 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 98 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for EquivalentTo resolved using rule 98 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 98 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER .)
    AND             reduce using rule 98 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER .)
    OR              reduce using rule 98 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER .)
    SubClassOf      reduce using rule 98 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER .)
    DisjointClasses reduce using rule 98 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER .)
    DisjointWith    reduce using rule 98 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER .)
    Individuals     reduce using rule 98 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER .)
    Class           reduce using rule 98 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER .)
    $end            reduce using rule 98 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER .)
    EquivalentTo    reduce using rule 98 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER .)
    RIGHT_PAREN     reduce using rule 98 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER .)

  ! AND             [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! OR              [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! SubClassOf      [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! DisjointClasses [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! DisjointWith    [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! Individuals     [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! Class           [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! $end            [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! EquivalentTo    [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! RIGHT_PAREN     [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]


state 194

    (99) nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE IndividualNames .

    AND             reduce using rule 99 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE IndividualNames .)
    OR              reduce using rule 99 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE IndividualNames .)
    SubClassOf      reduce using rule 99 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE IndividualNames .)
    DisjointClasses reduce using rule 99 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE IndividualNames .)
    DisjointWith    reduce using rule 99 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE IndividualNames .)
    Individuals     reduce using rule 99 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE IndividualNames .)
    Class           reduce using rule 99 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE IndividualNames .)
    $end            reduce using rule 99 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE IndividualNames .)
    EquivalentTo    reduce using rule 99 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE IndividualNames .)
    RIGHT_PAREN     reduce using rule 99 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE IndividualNames .)


state 195

    (102) nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE nested_descriptions .
    (93) nested_descriptions -> nested_descriptions . AND nested_descriptions
    (94) nested_descriptions -> nested_descriptions . OR nested_descriptions

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SubClassOf      reduce using rule 102 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE nested_descriptions .)
    DisjointClasses reduce using rule 102 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE nested_descriptions .)
    DisjointWith    reduce using rule 102 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE nested_descriptions .)
    Individuals     reduce using rule 102 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE nested_descriptions .)
    Class           reduce using rule 102 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE nested_descriptions .)
    $end            reduce using rule 102 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE nested_descriptions .)
    EquivalentTo    reduce using rule 102 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE nested_descriptions .)
    RIGHT_PAREN     reduce using rule 102 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE nested_descriptions .)
    AND             shift and go to state 127
    OR              shift and go to state 128

  ! AND             [ reduce using rule 102 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE nested_descriptions .) ]
  ! OR              [ reduce using rule 102 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE nested_descriptions .) ]


state 196

    (103) nested_descriptions -> statement_property_identify statement_others_reserved_word NUMBER nested_descriptions .
    (93) nested_descriptions -> nested_descriptions . AND nested_descriptions
    (94) nested_descriptions -> nested_descriptions . OR nested_descriptions

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SubClassOf      reduce using rule 103 (nested_descriptions -> statement_property_identify statement_others_reserved_word NUMBER nested_descriptions .)
    DisjointClasses reduce using rule 103 (nested_descriptions -> statement_property_identify statement_others_reserved_word NUMBER nested_descriptions .)
    DisjointWith    reduce using rule 103 (nested_descriptions -> statement_property_identify statement_others_reserved_word NUMBER nested_descriptions .)
    Individuals     reduce using rule 103 (nested_descriptions -> statement_property_identify statement_others_reserved_word NUMBER nested_descriptions .)
    Class           reduce using rule 103 (nested_descriptions -> statement_property_identify statement_others_reserved_word NUMBER nested_descriptions .)
    $end            reduce using rule 103 (nested_descriptions -> statement_property_identify statement_others_reserved_word NUMBER nested_descriptions .)
    EquivalentTo    reduce using rule 103 (nested_descriptions -> statement_property_identify statement_others_reserved_word NUMBER nested_descriptions .)
    RIGHT_PAREN     reduce using rule 103 (nested_descriptions -> statement_property_identify statement_others_reserved_word NUMBER nested_descriptions .)
    AND             shift and go to state 127
    OR              shift and go to state 128

  ! AND             [ reduce using rule 103 (nested_descriptions -> statement_property_identify statement_others_reserved_word NUMBER nested_descriptions .) ]
  ! OR              [ reduce using rule 103 (nested_descriptions -> statement_property_identify statement_others_reserved_word NUMBER nested_descriptions .) ]


state 197

    (75) usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER .
    (108) nested_descriptions -> CLASS_IDENTIFIER .

  ! reduce/reduce conflict for AND resolved using rule 75 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for SubClassOf resolved using rule 75 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for DisjointClasses resolved using rule 75 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for DisjointWith resolved using rule 75 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for Individuals resolved using rule 75 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for Class resolved using rule 75 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 75 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for EquivalentTo resolved using rule 75 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER .)
    AND             reduce using rule 75 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER .)
    SubClassOf      reduce using rule 75 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER .)
    DisjointClasses reduce using rule 75 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER .)
    DisjointWith    reduce using rule 75 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER .)
    Individuals     reduce using rule 75 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER .)
    Class           reduce using rule 75 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER .)
    $end            reduce using rule 75 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER .)
    EquivalentTo    reduce using rule 75 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER .)
    OR              reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .)

  ! AND             [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! SubClassOf      [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! DisjointClasses [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! DisjointWith    [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! Individuals     [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! Class           [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! $end            [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! EquivalentTo    [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]


state 198

    (104) nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER .
    (108) nested_descriptions -> CLASS_IDENTIFIER .

  ! reduce/reduce conflict for AND resolved using rule 104 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for OR resolved using rule 104 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for SubClassOf resolved using rule 104 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for DisjointClasses resolved using rule 104 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for DisjointWith resolved using rule 104 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for Individuals resolved using rule 104 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for Class resolved using rule 104 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 104 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for EquivalentTo resolved using rule 104 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 104 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER .)
    AND             reduce using rule 104 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER .)
    OR              reduce using rule 104 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER .)
    SubClassOf      reduce using rule 104 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER .)
    DisjointClasses reduce using rule 104 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER .)
    DisjointWith    reduce using rule 104 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER .)
    Individuals     reduce using rule 104 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER .)
    Class           reduce using rule 104 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER .)
    $end            reduce using rule 104 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER .)
    EquivalentTo    reduce using rule 104 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER .)
    RIGHT_PAREN     reduce using rule 104 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER .)

  ! AND             [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! OR              [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! SubClassOf      [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! DisjointClasses [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! DisjointWith    [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! Individuals     [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! Class           [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! $end            [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! EquivalentTo    [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! RIGHT_PAREN     [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]


state 199

    (105) nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY nested_descriptions .
    (93) nested_descriptions -> nested_descriptions . AND nested_descriptions
    (94) nested_descriptions -> nested_descriptions . OR nested_descriptions

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SubClassOf      reduce using rule 105 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY nested_descriptions .)
    DisjointClasses reduce using rule 105 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY nested_descriptions .)
    DisjointWith    reduce using rule 105 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY nested_descriptions .)
    Individuals     reduce using rule 105 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY nested_descriptions .)
    Class           reduce using rule 105 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY nested_descriptions .)
    $end            reduce using rule 105 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY nested_descriptions .)
    EquivalentTo    reduce using rule 105 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY nested_descriptions .)
    RIGHT_PAREN     reduce using rule 105 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY nested_descriptions .)
    AND             shift and go to state 127
    OR              shift and go to state 128

  ! AND             [ reduce using rule 105 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY nested_descriptions .) ]
  ! OR              [ reduce using rule 105 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY nested_descriptions .) ]


state 200

    (106) nested_descriptions -> statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER .
    (108) nested_descriptions -> CLASS_IDENTIFIER .

  ! reduce/reduce conflict for AND resolved using rule 106 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for OR resolved using rule 106 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for SubClassOf resolved using rule 106 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for DisjointClasses resolved using rule 106 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for DisjointWith resolved using rule 106 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for Individuals resolved using rule 106 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for Class resolved using rule 106 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 106 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for EquivalentTo resolved using rule 106 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 106 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER .)
    AND             reduce using rule 106 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER .)
    OR              reduce using rule 106 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER .)
    SubClassOf      reduce using rule 106 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER .)
    DisjointClasses reduce using rule 106 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER .)
    DisjointWith    reduce using rule 106 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER .)
    Individuals     reduce using rule 106 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER .)
    Class           reduce using rule 106 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER .)
    $end            reduce using rule 106 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER .)
    EquivalentTo    reduce using rule 106 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER .)
    RIGHT_PAREN     reduce using rule 106 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER .)

  ! AND             [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! OR              [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! SubClassOf      [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! DisjointClasses [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! DisjointWith    [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! Individuals     [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! Class           [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! $end            [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! EquivalentTo    [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! RIGHT_PAREN     [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]


state 201

    (107) nested_descriptions -> statement_property_identify statement_others_reserved_word SOME nested_descriptions .
    (93) nested_descriptions -> nested_descriptions . AND nested_descriptions
    (94) nested_descriptions -> nested_descriptions . OR nested_descriptions

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SubClassOf      reduce using rule 107 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME nested_descriptions .)
    DisjointClasses reduce using rule 107 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME nested_descriptions .)
    DisjointWith    reduce using rule 107 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME nested_descriptions .)
    Individuals     reduce using rule 107 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME nested_descriptions .)
    Class           reduce using rule 107 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME nested_descriptions .)
    $end            reduce using rule 107 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME nested_descriptions .)
    EquivalentTo    reduce using rule 107 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME nested_descriptions .)
    RIGHT_PAREN     reduce using rule 107 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME nested_descriptions .)
    AND             shift and go to state 127
    OR              shift and go to state 128

  ! AND             [ reduce using rule 107 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME nested_descriptions .) ]
  ! OR              [ reduce using rule 107 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME nested_descriptions .) ]


state 202

    (77) usually_others_others_paren -> CLASS_IDENTIFIER . RIGHT_PAREN
    (78) usually_others_others_paren -> CLASS_IDENTIFIER . OR usually_others_others_paren
    (108) nested_descriptions -> CLASS_IDENTIFIER .

  ! shift/reduce conflict for RIGHT_PAREN resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RIGHT_PAREN     shift and go to state 203
    OR              shift and go to state 204
    AND             reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .)

  ! RIGHT_PAREN     [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! OR              [ reduce using rule 108 (nested_descriptions -> CLASS_IDENTIFIER .) ]


state 203

    (77) usually_others_others_paren -> CLASS_IDENTIFIER RIGHT_PAREN .

    AND             reduce using rule 77 (usually_others_others_paren -> CLASS_IDENTIFIER RIGHT_PAREN .)
    SubClassOf      reduce using rule 77 (usually_others_others_paren -> CLASS_IDENTIFIER RIGHT_PAREN .)
    DisjointClasses reduce using rule 77 (usually_others_others_paren -> CLASS_IDENTIFIER RIGHT_PAREN .)
    DisjointWith    reduce using rule 77 (usually_others_others_paren -> CLASS_IDENTIFIER RIGHT_PAREN .)
    Individuals     reduce using rule 77 (usually_others_others_paren -> CLASS_IDENTIFIER RIGHT_PAREN .)
    Class           reduce using rule 77 (usually_others_others_paren -> CLASS_IDENTIFIER RIGHT_PAREN .)
    $end            reduce using rule 77 (usually_others_others_paren -> CLASS_IDENTIFIER RIGHT_PAREN .)
    EquivalentTo    reduce using rule 77 (usually_others_others_paren -> CLASS_IDENTIFIER RIGHT_PAREN .)


state 204

    (78) usually_others_others_paren -> CLASS_IDENTIFIER OR . usually_others_others_paren
    (77) usually_others_others_paren -> . CLASS_IDENTIFIER RIGHT_PAREN
    (78) usually_others_others_paren -> . CLASS_IDENTIFIER OR usually_others_others_paren

    CLASS_IDENTIFIER shift and go to state 176

    usually_others_others_paren    shift and go to state 211

state 205

    (76) usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET . statement_operator_symbol NUMBER RIGHT_BRACKET
    (61) statement_operator_symbol -> . LESS_THAN
    (62) statement_operator_symbol -> . GREATER_THAN
    (63) statement_operator_symbol -> . EQUALS
    (64) statement_operator_symbol -> . GREATER_THAN EQUALS
    (65) statement_operator_symbol -> . LESS_THAN EQUALS

    LESS_THAN       shift and go to state 208
    GREATER_THAN    shift and go to state 209
    EQUALS          shift and go to state 210

    statement_operator_symbol      shift and go to state 212

state 206

    (74) usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE .

    AND             reduce using rule 74 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE .)
    SubClassOf      reduce using rule 74 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE .)
    DisjointClasses reduce using rule 74 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE .)
    DisjointWith    reduce using rule 74 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE .)
    Individuals     reduce using rule 74 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE .)
    Class           reduce using rule 74 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE .)
    $end            reduce using rule 74 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE .)
    EquivalentTo    reduce using rule 74 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE .)


state 207

    (70) usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol . NUMBER RIGHT_BRACKET

    NUMBER          shift and go to state 213


state 208

    (61) statement_operator_symbol -> LESS_THAN .
    (65) statement_operator_symbol -> LESS_THAN . EQUALS

    NUMBER          reduce using rule 61 (statement_operator_symbol -> LESS_THAN .)
    EQUALS          shift and go to state 214


state 209

    (62) statement_operator_symbol -> GREATER_THAN .
    (64) statement_operator_symbol -> GREATER_THAN . EQUALS

    NUMBER          reduce using rule 62 (statement_operator_symbol -> GREATER_THAN .)
    EQUALS          shift and go to state 215


state 210

    (63) statement_operator_symbol -> EQUALS .

    NUMBER          reduce using rule 63 (statement_operator_symbol -> EQUALS .)


state 211

    (78) usually_others_others_paren -> CLASS_IDENTIFIER OR usually_others_others_paren .

    AND             reduce using rule 78 (usually_others_others_paren -> CLASS_IDENTIFIER OR usually_others_others_paren .)
    SubClassOf      reduce using rule 78 (usually_others_others_paren -> CLASS_IDENTIFIER OR usually_others_others_paren .)
    DisjointClasses reduce using rule 78 (usually_others_others_paren -> CLASS_IDENTIFIER OR usually_others_others_paren .)
    DisjointWith    reduce using rule 78 (usually_others_others_paren -> CLASS_IDENTIFIER OR usually_others_others_paren .)
    Individuals     reduce using rule 78 (usually_others_others_paren -> CLASS_IDENTIFIER OR usually_others_others_paren .)
    Class           reduce using rule 78 (usually_others_others_paren -> CLASS_IDENTIFIER OR usually_others_others_paren .)
    $end            reduce using rule 78 (usually_others_others_paren -> CLASS_IDENTIFIER OR usually_others_others_paren .)
    EquivalentTo    reduce using rule 78 (usually_others_others_paren -> CLASS_IDENTIFIER OR usually_others_others_paren .)


state 212

    (76) usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol . NUMBER RIGHT_BRACKET

    NUMBER          shift and go to state 216


state 213

    (70) usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 217


state 214

    (65) statement_operator_symbol -> LESS_THAN EQUALS .

    NUMBER          reduce using rule 65 (statement_operator_symbol -> LESS_THAN EQUALS .)


state 215

    (64) statement_operator_symbol -> GREATER_THAN EQUALS .

    NUMBER          reduce using rule 64 (statement_operator_symbol -> GREATER_THAN EQUALS .)


state 216

    (76) usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 218


state 217

    (70) usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET .

    COMMA           reduce using rule 70 (usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET .)
    DisjointClasses reduce using rule 70 (usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET .)
    DisjointWith    reduce using rule 70 (usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET .)
    Individuals     reduce using rule 70 (usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET .)
    SubClassOf      reduce using rule 70 (usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET .)
    Class           reduce using rule 70 (usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET .)
    $end            reduce using rule 70 (usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET .)
    EquivalentTo    reduce using rule 70 (usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET .)
    RIGHT_PAREN     reduce using rule 70 (usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET .)


state 218

    (76) usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET .

    AND             reduce using rule 76 (usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET .)
    SubClassOf      reduce using rule 76 (usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET .)
    DisjointClasses reduce using rule 76 (usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET .)
    DisjointWith    reduce using rule 76 (usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET .)
    Individuals     reduce using rule 76 (usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET .)
    Class           reduce using rule 76 (usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET .)
    $end            reduce using rule 76 (usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET .)
    EquivalentTo    reduce using rule 76 (usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for DisjointClasses in state 27 resolved as shift
WARNING: shift/reduce conflict for DisjointWith in state 27 resolved as shift
WARNING: shift/reduce conflict for DisjointClasses in state 44 resolved as shift
WARNING: shift/reduce conflict for DisjointWith in state 44 resolved as shift
WARNING: shift/reduce conflict for Individuals in state 62 resolved as shift
WARNING: shift/reduce conflict for Individuals in state 79 resolved as shift
WARNING: shift/reduce conflict for DisjointClasses in state 86 resolved as shift
WARNING: shift/reduce conflict for DisjointWith in state 86 resolved as shift
WARNING: shift/reduce conflict for DisjointClasses in state 93 resolved as shift
WARNING: shift/reduce conflict for DisjointWith in state 93 resolved as shift
WARNING: shift/reduce conflict for DisjointClasses in state 119 resolved as shift
WARNING: shift/reduce conflict for DisjointWith in state 119 resolved as shift
WARNING: shift/reduce conflict for DisjointClasses in state 122 resolved as shift
WARNING: shift/reduce conflict for DisjointWith in state 122 resolved as shift
WARNING: shift/reduce conflict for Individuals in state 126 resolved as shift
WARNING: shift/reduce conflict for CLASS_IDENTIFIER in state 135 resolved as shift
WARNING: shift/reduce conflict for Individuals in state 142 resolved as shift
WARNING: shift/reduce conflict for Individuals in state 154 resolved as shift
WARNING: shift/reduce conflict for Individuals in state 157 resolved as shift
WARNING: shift/reduce conflict for AND in state 160 resolved as shift
WARNING: shift/reduce conflict for OR in state 160 resolved as shift
WARNING: shift/reduce conflict for AND in state 162 resolved as shift
WARNING: shift/reduce conflict for OR in state 162 resolved as shift
WARNING: shift/reduce conflict for AND in state 165 resolved as shift
WARNING: shift/reduce conflict for OR in state 165 resolved as shift
WARNING: shift/reduce conflict for AND in state 195 resolved as shift
WARNING: shift/reduce conflict for OR in state 195 resolved as shift
WARNING: shift/reduce conflict for AND in state 196 resolved as shift
WARNING: shift/reduce conflict for OR in state 196 resolved as shift
WARNING: shift/reduce conflict for AND in state 199 resolved as shift
WARNING: shift/reduce conflict for OR in state 199 resolved as shift
WARNING: shift/reduce conflict for AND in state 201 resolved as shift
WARNING: shift/reduce conflict for OR in state 201 resolved as shift
WARNING: shift/reduce conflict for RIGHT_PAREN in state 202 resolved as shift
WARNING: shift/reduce conflict for OR in state 202 resolved as shift
WARNING: reduce/reduce conflict in state 5 resolved using rule (statements -> Class CLASS_IDENTIFIER statement_defined_class)
WARNING: rejected rule (empty -> <empty>) in state 5
WARNING: reduce/reduce conflict in state 6 resolved using rule (statements -> Class CLASS_IDENTIFIER statement_primitive_class)
WARNING: rejected rule (empty -> <empty>) in state 6
WARNING: reduce/reduce conflict in state 26 resolved using rule (JustDefined -> CLASS_IDENTIFIER)
WARNING: rejected rule (statement_covered_class_check -> CLASS_IDENTIFIER) in state 26
WARNING: reduce/reduce conflict in state 43 resolved using rule (primitive_class_mandatory -> CLASS_IDENTIFIER)
WARNING: rejected rule (statement_covered_class_check -> CLASS_IDENTIFIER) in state 43
WARNING: reduce/reduce conflict in state 89 resolved using rule (expression -> usually_inside_paren)
WARNING: rejected rule (other_expression -> usually_inside_paren) in state 89
WARNING: reduce/reduce conflict in state 90 resolved using rule (expression -> simple_paren)
WARNING: rejected rule (other_expression -> simple_paren) in state 90
WARNING: reduce/reduce conflict in state 102 resolved using rule (statement_reserved_word -> SOME)
WARNING: rejected rule (statement_others_reserved_word -> SOME) in state 102
WARNING: reduce/reduce conflict in state 103 resolved using rule (statement_reserved_word -> EXACTLY)
WARNING: rejected rule (statement_others_reserved_word -> EXACTLY) in state 103
WARNING: reduce/reduce conflict in state 104 resolved using rule (statement_reserved_word -> MIN)
WARNING: rejected rule (statement_others_reserved_word -> MIN) in state 104
WARNING: reduce/reduce conflict in state 105 resolved using rule (statement_reserved_word -> MAX)
WARNING: rejected rule (statement_others_reserved_word -> MAX) in state 105
WARNING: reduce/reduce conflict in state 106 resolved using rule (statement_reserved_word -> OR)
WARNING: rejected rule (statement_others_reserved_word -> OR) in state 106
WARNING: reduce/reduce conflict in state 107 resolved using rule (statement_reserved_word -> AND)
WARNING: rejected rule (statement_others_reserved_word -> AND) in state 107
WARNING: reduce/reduce conflict in state 120 resolved using rule (expression -> usually_inside_paren)
WARNING: rejected rule (other_expression -> usually_inside_paren) in state 120
WARNING: reduce/reduce conflict in state 121 resolved using rule (expression -> simple_paren)
WARNING: rejected rule (other_expression -> simple_paren) in state 121
WARNING: reduce/reduce conflict in state 136 resolved using rule (statement_reserved_word -> SOME)
WARNING: rejected rule (statement_others_reserved_word -> SOME) in state 136
WARNING: reduce/reduce conflict in state 137 resolved using rule (statement_reserved_word -> MIN)
WARNING: rejected rule (statement_others_reserved_word -> MIN) in state 137
WARNING: reduce/reduce conflict in state 138 resolved using rule (statement_reserved_word -> EXACTLY)
WARNING: rejected rule (statement_others_reserved_word -> EXACTLY) in state 138
WARNING: reduce/reduce conflict in state 139 resolved using rule (statement_reserved_word -> OR)
WARNING: rejected rule (statement_others_reserved_word -> OR) in state 139
WARNING: reduce/reduce conflict in state 140 resolved using rule (statement_reserved_word -> MAX)
WARNING: rejected rule (statement_others_reserved_word -> MAX) in state 140
WARNING: reduce/reduce conflict in state 141 resolved using rule (statement_reserved_word -> AND)
WARNING: rejected rule (statement_others_reserved_word -> AND) in state 141
WARNING: reduce/reduce conflict in state 166 resolved using rule (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER)
WARNING: rejected rule (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER) in state 166
WARNING: reduce/reduce conflict in state 166 resolved using rule (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER)
WARNING: rejected rule (nested_descriptions -> CLASS_IDENTIFIER) in state 166
WARNING: reduce/reduce conflict in state 166 resolved using rule (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER)
WARNING: rejected rule (nested_descriptions -> CLASS_IDENTIFIER) in state 166
WARNING: reduce/reduce conflict in state 191 resolved using rule (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER)
WARNING: rejected rule (nested_descriptions -> CLASS_IDENTIFIER) in state 191
WARNING: reduce/reduce conflict in state 193 resolved using rule (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER)
WARNING: rejected rule (nested_descriptions -> CLASS_IDENTIFIER) in state 193
WARNING: reduce/reduce conflict in state 197 resolved using rule (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER)
WARNING: rejected rule (nested_descriptions -> CLASS_IDENTIFIER) in state 197
WARNING: reduce/reduce conflict in state 198 resolved using rule (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER)
WARNING: rejected rule (nested_descriptions -> CLASS_IDENTIFIER) in state 198
WARNING: reduce/reduce conflict in state 200 resolved using rule (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER)
WARNING: rejected rule (nested_descriptions -> CLASS_IDENTIFIER) in state 200
