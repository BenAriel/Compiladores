Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALL
    DIVIDE
    DisjointWith
    EQUALS
    GREATER_THAN
    LEFT_BRACKET
    LESS_THAN
    Literal
    MINUS
    NCName
    NMTOKEN
    NOT
    NUMBER
    Name
    PLUS
    PlainLiteral
    RIGHT_BRACKET
    THAT
    TIMES
    XMLLiteral
    anyURI
    base64Binary
    boolean
    byte
    dateTime
    dateTimeStamp
    decimal
    double
    float
    hexBinary
    int
    integer
    langString
    languague
    long
    negativeInteger
    nonNegativeInteger
    owl
    rational
    rdf
    rdfs
    real
    string
    xsd

Grammar

Rule 0     S' -> statements
Rule 1     statements -> statement
Rule 2     statements -> statement statements
Rule 3     statement -> Class CLASS_IDENTIFIER SubClassOf primitive_class_mandatory statement_class_disjoin statement_class_individuals
Rule 4     statement_reserved_word -> SOME
Rule 5     statement_reserved_word -> EXACTLY
Rule 6     statement_reserved_word -> MIN
Rule 7     statement_reserved_word -> MAX
Rule 8     statement_reserved_word -> OR
Rule 9     statement_reserved_word -> ONLY
Rule 10    statement_reserved_word -> AND
Rule 11    statement_reserved_word -> VALUE
Rule 12    statement_property_identify -> PROPERTY_IDENTIFIER_has
Rule 13    statement_property_identify -> PROPERTY_IDENTIFIER_is_Of
Rule 14    statement_property_identify -> PROPERTY_IDENTIFIER
Rule 15    primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER
Rule 16    primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory
Rule 17    primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
Rule 18    primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory
Rule 19    primitive_class_mandatory -> CLASS_IDENTIFIER
Rule 20    primitive_class_mandatory -> CLASS_IDENTIFIER COMMA primitive_class_mandatory
Rule 21    statement_class_disjoin -> empty
Rule 22    statement_class_disjoin -> DisjointClasses statement_class_disjoin_check
Rule 23    statement_class_disjoin_check -> CLASS_IDENTIFIER
Rule 24    statement_class_disjoin_check -> CLASS_IDENTIFIER COMMA statement_class_disjoin_check
Rule 25    statement_class_individuals -> empty
Rule 26    statement_class_individuals -> Individuals statement_class_individuals_check
Rule 27    statement_class_individuals_check -> IndividualNames
Rule 28    statement_class_individuals_check -> IndividualNames COMMA statement_class_individuals_check
Rule 29    statement -> Class CLASS_IDENTIFIER EquivalentTo nested_descriptions
Rule 30    nested_descriptions -> nested_descriptions AND nested_descriptions
Rule 31    nested_descriptions -> nested_descriptions OR nested_descriptions
Rule 32    nested_descriptions -> LEFT_PAREN nested_descriptions RIGHT_PAREN
Rule 33    nested_descriptions -> statement_property_identify statement_reserved_word nested_descriptions
Rule 34    nested_descriptions -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER
Rule 35    nested_descriptions -> statement_property_identify statement_reserved_word VALUE CLASS_IDENTIFIER
Rule 36    nested_descriptions -> statement_property_identify statement_reserved_word VALUE nested_descriptions
Rule 37    nested_descriptions -> statement_property_identify statement_reserved_word ONLY CLASS_IDENTIFIER
Rule 38    nested_descriptions -> statement_property_identify statement_reserved_word ONLY nested_descriptions
Rule 39    nested_descriptions -> statement_property_identify statement_reserved_word SOME CLASS_IDENTIFIER
Rule 40    nested_descriptions -> statement_property_identify statement_reserved_word SOME nested_descriptions
Rule 41    nested_descriptions -> CLASS_IDENTIFIER
Rule 42    statement -> Class CLASS_IDENTIFIER SubClassOf CLASS_IDENTIFIER COMMA closed_axiom_mandatory
Rule 43    closed_axiom_mandatory -> CLASS_IDENTIFIER
Rule 44    closed_axiom_mandatory -> statement_property_restriction
Rule 45    closed_axiom_mandatory -> CLASS_IDENTIFIER COMMA closed_axiom_mandatory
Rule 46    closed_axiom_mandatory -> statement_property_restriction COMMA closed_axiom_mandatory
Rule 47    statement_property_restriction -> statement_property_identify SOME CLASS_IDENTIFIER
Rule 48    statement_property_restriction -> statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN
Rule 49    closed_axiom_restriction_combination -> CLASS_IDENTIFIER
Rule 50    closed_axiom_restriction_combination -> CLASS_IDENTIFIER OR closed_axiom_restriction_combination
Rule 51    statement -> Class CLASS_IDENTIFIER EquivalentTo LEFT_CURLY_BRACKET statement_enumerated_class_check RIGHT_CURLY_BRACKET
Rule 52    statement_enumerated_class_check -> IndividualNames
Rule 53    statement_enumerated_class_check -> IndividualNames COMMA statement_enumerated_class_check
Rule 54    statement -> Class CLASS_IDENTIFIER EquivalentTo statement_covered_class_check
Rule 55    statement_covered_class_check -> CLASS_IDENTIFIER
Rule 56    statement_covered_class_check -> CLASS_IDENTIFIER OR statement_covered_class_check
Rule 57    empty -> <empty>

Terminals, with rules where they appear

ALL                  : 
AND                  : 10 30
CLASS_IDENTIFIER     : 3 15 16 19 20 23 24 29 34 35 37 39 41 42 42 43 45 47 49 50 51 54 55 56
COMMA                : 16 18 20 24 28 42 45 46 53
Class                : 3 29 42 51 54
DATA_TYPE            : 17 18
DIVIDE               : 
DisjointClasses      : 22
DisjointWith         : 
EQUALS               : 
EXACTLY              : 5
EquivalentTo         : 29 51 54
GREATER_THAN         : 
IndividualNames      : 27 28 52 53
Individuals          : 26
LEFT_BRACKET         : 
LEFT_CURLY_BRACKET   : 51
LEFT_PAREN           : 32 48
LESS_THAN            : 
Literal              : 
MAX                  : 7
MIN                  : 6
MINUS                : 
NAMESPACEID          : 17 18
NCName               : 
NMTOKEN              : 
NOT                  : 
NUMBER               : 
Name                 : 
ONLY                 : 9 37 38 48
OR                   : 8 31 50 56
PLUS                 : 
PROPERTY_IDENTIFIER  : 14
PROPERTY_IDENTIFIER_has : 12
PROPERTY_IDENTIFIER_is_Of : 13
PlainLiteral         : 
RIGHT_BRACKET        : 
RIGHT_CURLY_BRACKET  : 51
RIGHT_PAREN          : 32 48
SOME                 : 4 39 40 47
SubClassOf           : 3 42
THAT                 : 
TIMES                : 
VALUE                : 11 35 36
XMLLiteral           : 
anyURI               : 
base64Binary         : 
boolean              : 
byte                 : 
dateTime             : 
dateTimeStamp        : 
decimal              : 
double               : 
error                : 
float                : 
hexBinary            : 
int                  : 
integer              : 
langString           : 
languague            : 
long                 : 
negativeInteger      : 
nonNegativeInteger   : 
owl                  : 
rational             : 
rdf                  : 
rdfs                 : 
real                 : 
string               : 
xsd                  : 

Nonterminals, with rules where they appear

closed_axiom_mandatory : 42 45 46
closed_axiom_restriction_combination : 48 50
empty                : 21 25
nested_descriptions  : 29 30 30 31 31 32 33 36 38 40
primitive_class_mandatory : 3 16 18 20
statement            : 1 2
statement_class_disjoin : 3
statement_class_disjoin_check : 22 24
statement_class_individuals : 3
statement_class_individuals_check : 26 28
statement_covered_class_check : 54 56
statement_enumerated_class_check : 51 53
statement_property_identify : 15 16 17 18 33 34 35 36 37 38 39 40 47 48
statement_property_restriction : 44 46
statement_reserved_word : 15 16 17 18 33 34 35 36 37 38 39 40
statements           : 2 0

Parsing method: LALR

state 0

    (0) S' -> . statements
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statement -> . Class CLASS_IDENTIFIER SubClassOf primitive_class_mandatory statement_class_disjoin statement_class_individuals
    (29) statement -> . Class CLASS_IDENTIFIER EquivalentTo nested_descriptions
    (42) statement -> . Class CLASS_IDENTIFIER SubClassOf CLASS_IDENTIFIER COMMA closed_axiom_mandatory
    (51) statement -> . Class CLASS_IDENTIFIER EquivalentTo LEFT_CURLY_BRACKET statement_enumerated_class_check RIGHT_CURLY_BRACKET
    (54) statement -> . Class CLASS_IDENTIFIER EquivalentTo statement_covered_class_check

    Class           shift and go to state 3

    statements                     shift and go to state 1
    statement                      shift and go to state 2

state 1

    (0) S' -> statements .



state 2

    (1) statements -> statement .
    (2) statements -> statement . statements
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statement -> . Class CLASS_IDENTIFIER SubClassOf primitive_class_mandatory statement_class_disjoin statement_class_individuals
    (29) statement -> . Class CLASS_IDENTIFIER EquivalentTo nested_descriptions
    (42) statement -> . Class CLASS_IDENTIFIER SubClassOf CLASS_IDENTIFIER COMMA closed_axiom_mandatory
    (51) statement -> . Class CLASS_IDENTIFIER EquivalentTo LEFT_CURLY_BRACKET statement_enumerated_class_check RIGHT_CURLY_BRACKET
    (54) statement -> . Class CLASS_IDENTIFIER EquivalentTo statement_covered_class_check

    $end            reduce using rule 1 (statements -> statement .)
    Class           shift and go to state 3

    statement                      shift and go to state 2
    statements                     shift and go to state 4

state 3

    (3) statement -> Class . CLASS_IDENTIFIER SubClassOf primitive_class_mandatory statement_class_disjoin statement_class_individuals
    (29) statement -> Class . CLASS_IDENTIFIER EquivalentTo nested_descriptions
    (42) statement -> Class . CLASS_IDENTIFIER SubClassOf CLASS_IDENTIFIER COMMA closed_axiom_mandatory
    (51) statement -> Class . CLASS_IDENTIFIER EquivalentTo LEFT_CURLY_BRACKET statement_enumerated_class_check RIGHT_CURLY_BRACKET
    (54) statement -> Class . CLASS_IDENTIFIER EquivalentTo statement_covered_class_check

    CLASS_IDENTIFIER shift and go to state 5


state 4

    (2) statements -> statement statements .

    $end            reduce using rule 2 (statements -> statement statements .)


state 5

    (3) statement -> Class CLASS_IDENTIFIER . SubClassOf primitive_class_mandatory statement_class_disjoin statement_class_individuals
    (29) statement -> Class CLASS_IDENTIFIER . EquivalentTo nested_descriptions
    (42) statement -> Class CLASS_IDENTIFIER . SubClassOf CLASS_IDENTIFIER COMMA closed_axiom_mandatory
    (51) statement -> Class CLASS_IDENTIFIER . EquivalentTo LEFT_CURLY_BRACKET statement_enumerated_class_check RIGHT_CURLY_BRACKET
    (54) statement -> Class CLASS_IDENTIFIER . EquivalentTo statement_covered_class_check

    SubClassOf      shift and go to state 6
    EquivalentTo    shift and go to state 7


state 6

    (3) statement -> Class CLASS_IDENTIFIER SubClassOf . primitive_class_mandatory statement_class_disjoin statement_class_individuals
    (42) statement -> Class CLASS_IDENTIFIER SubClassOf . CLASS_IDENTIFIER COMMA closed_axiom_mandatory
    (15) primitive_class_mandatory -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (16) primitive_class_mandatory -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (17) primitive_class_mandatory -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (18) primitive_class_mandatory -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory
    (19) primitive_class_mandatory -> . CLASS_IDENTIFIER
    (20) primitive_class_mandatory -> . CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (12) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (13) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (14) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 8
    PROPERTY_IDENTIFIER_has shift and go to state 11
    PROPERTY_IDENTIFIER_is_Of shift and go to state 12
    PROPERTY_IDENTIFIER shift and go to state 13

    primitive_class_mandatory      shift and go to state 9
    statement_property_identify    shift and go to state 10

state 7

    (29) statement -> Class CLASS_IDENTIFIER EquivalentTo . nested_descriptions
    (51) statement -> Class CLASS_IDENTIFIER EquivalentTo . LEFT_CURLY_BRACKET statement_enumerated_class_check RIGHT_CURLY_BRACKET
    (54) statement -> Class CLASS_IDENTIFIER EquivalentTo . statement_covered_class_check
    (30) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (31) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (32) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (33) nested_descriptions -> . statement_property_identify statement_reserved_word nested_descriptions
    (34) nested_descriptions -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (35) nested_descriptions -> . statement_property_identify statement_reserved_word VALUE CLASS_IDENTIFIER
    (36) nested_descriptions -> . statement_property_identify statement_reserved_word VALUE nested_descriptions
    (37) nested_descriptions -> . statement_property_identify statement_reserved_word ONLY CLASS_IDENTIFIER
    (38) nested_descriptions -> . statement_property_identify statement_reserved_word ONLY nested_descriptions
    (39) nested_descriptions -> . statement_property_identify statement_reserved_word SOME CLASS_IDENTIFIER
    (40) nested_descriptions -> . statement_property_identify statement_reserved_word SOME nested_descriptions
    (41) nested_descriptions -> . CLASS_IDENTIFIER
    (55) statement_covered_class_check -> . CLASS_IDENTIFIER
    (56) statement_covered_class_check -> . CLASS_IDENTIFIER OR statement_covered_class_check
    (12) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (13) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (14) statement_property_identify -> . PROPERTY_IDENTIFIER

    LEFT_CURLY_BRACKET shift and go to state 16
    LEFT_PAREN      shift and go to state 18
    CLASS_IDENTIFIER shift and go to state 14
    PROPERTY_IDENTIFIER_has shift and go to state 11
    PROPERTY_IDENTIFIER_is_Of shift and go to state 12
    PROPERTY_IDENTIFIER shift and go to state 13

    nested_descriptions            shift and go to state 15
    statement_covered_class_check  shift and go to state 17
    statement_property_identify    shift and go to state 19

state 8

    (42) statement -> Class CLASS_IDENTIFIER SubClassOf CLASS_IDENTIFIER . COMMA closed_axiom_mandatory
    (19) primitive_class_mandatory -> CLASS_IDENTIFIER .
    (20) primitive_class_mandatory -> CLASS_IDENTIFIER . COMMA primitive_class_mandatory

    COMMA           shift and go to state 20
    DisjointClasses reduce using rule 19 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    Individuals     reduce using rule 19 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    Class           reduce using rule 19 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    $end            reduce using rule 19 (primitive_class_mandatory -> CLASS_IDENTIFIER .)


state 9

    (3) statement -> Class CLASS_IDENTIFIER SubClassOf primitive_class_mandatory . statement_class_disjoin statement_class_individuals
    (21) statement_class_disjoin -> . empty
    (22) statement_class_disjoin -> . DisjointClasses statement_class_disjoin_check
    (57) empty -> .

    DisjointClasses shift and go to state 23
    Individuals     reduce using rule 57 (empty -> .)
    Class           reduce using rule 57 (empty -> .)
    $end            reduce using rule 57 (empty -> .)

    statement_class_disjoin        shift and go to state 21
    empty                          shift and go to state 22

state 10

    (15) primitive_class_mandatory -> statement_property_identify . statement_reserved_word CLASS_IDENTIFIER
    (16) primitive_class_mandatory -> statement_property_identify . statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (17) primitive_class_mandatory -> statement_property_identify . statement_reserved_word NAMESPACEID DATA_TYPE
    (18) primitive_class_mandatory -> statement_property_identify . statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory
    (4) statement_reserved_word -> . SOME
    (5) statement_reserved_word -> . EXACTLY
    (6) statement_reserved_word -> . MIN
    (7) statement_reserved_word -> . MAX
    (8) statement_reserved_word -> . OR
    (9) statement_reserved_word -> . ONLY
    (10) statement_reserved_word -> . AND
    (11) statement_reserved_word -> . VALUE

    SOME            shift and go to state 25
    EXACTLY         shift and go to state 26
    MIN             shift and go to state 27
    MAX             shift and go to state 28
    OR              shift and go to state 29
    ONLY            shift and go to state 30
    AND             shift and go to state 31
    VALUE           shift and go to state 32

    statement_reserved_word        shift and go to state 24

state 11

    (12) statement_property_identify -> PROPERTY_IDENTIFIER_has .

    SOME            reduce using rule 12 (statement_property_identify -> PROPERTY_IDENTIFIER_has .)
    EXACTLY         reduce using rule 12 (statement_property_identify -> PROPERTY_IDENTIFIER_has .)
    MIN             reduce using rule 12 (statement_property_identify -> PROPERTY_IDENTIFIER_has .)
    MAX             reduce using rule 12 (statement_property_identify -> PROPERTY_IDENTIFIER_has .)
    OR              reduce using rule 12 (statement_property_identify -> PROPERTY_IDENTIFIER_has .)
    ONLY            reduce using rule 12 (statement_property_identify -> PROPERTY_IDENTIFIER_has .)
    AND             reduce using rule 12 (statement_property_identify -> PROPERTY_IDENTIFIER_has .)
    VALUE           reduce using rule 12 (statement_property_identify -> PROPERTY_IDENTIFIER_has .)


state 12

    (13) statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .

    SOME            reduce using rule 13 (statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .)
    EXACTLY         reduce using rule 13 (statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .)
    MIN             reduce using rule 13 (statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .)
    MAX             reduce using rule 13 (statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .)
    OR              reduce using rule 13 (statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .)
    ONLY            reduce using rule 13 (statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .)
    AND             reduce using rule 13 (statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .)
    VALUE           reduce using rule 13 (statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .)


state 13

    (14) statement_property_identify -> PROPERTY_IDENTIFIER .

    SOME            reduce using rule 14 (statement_property_identify -> PROPERTY_IDENTIFIER .)
    EXACTLY         reduce using rule 14 (statement_property_identify -> PROPERTY_IDENTIFIER .)
    MIN             reduce using rule 14 (statement_property_identify -> PROPERTY_IDENTIFIER .)
    MAX             reduce using rule 14 (statement_property_identify -> PROPERTY_IDENTIFIER .)
    OR              reduce using rule 14 (statement_property_identify -> PROPERTY_IDENTIFIER .)
    ONLY            reduce using rule 14 (statement_property_identify -> PROPERTY_IDENTIFIER .)
    AND             reduce using rule 14 (statement_property_identify -> PROPERTY_IDENTIFIER .)
    VALUE           reduce using rule 14 (statement_property_identify -> PROPERTY_IDENTIFIER .)


state 14

    (41) nested_descriptions -> CLASS_IDENTIFIER .
    (55) statement_covered_class_check -> CLASS_IDENTIFIER .
    (56) statement_covered_class_check -> CLASS_IDENTIFIER . OR statement_covered_class_check

  ! reduce/reduce conflict for Class resolved using rule 41 (nested_descriptions -> CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 41 (nested_descriptions -> CLASS_IDENTIFIER .)
  ! shift/reduce conflict for OR resolved as shift
    AND             reduce using rule 41 (nested_descriptions -> CLASS_IDENTIFIER .)
    Class           reduce using rule 41 (nested_descriptions -> CLASS_IDENTIFIER .)
    $end            reduce using rule 41 (nested_descriptions -> CLASS_IDENTIFIER .)
    OR              shift and go to state 33

  ! OR              [ reduce using rule 41 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! Class           [ reduce using rule 55 (statement_covered_class_check -> CLASS_IDENTIFIER .) ]
  ! $end            [ reduce using rule 55 (statement_covered_class_check -> CLASS_IDENTIFIER .) ]


state 15

    (29) statement -> Class CLASS_IDENTIFIER EquivalentTo nested_descriptions .
    (30) nested_descriptions -> nested_descriptions . AND nested_descriptions
    (31) nested_descriptions -> nested_descriptions . OR nested_descriptions

    Class           reduce using rule 29 (statement -> Class CLASS_IDENTIFIER EquivalentTo nested_descriptions .)
    $end            reduce using rule 29 (statement -> Class CLASS_IDENTIFIER EquivalentTo nested_descriptions .)
    AND             shift and go to state 34
    OR              shift and go to state 35


state 16

    (51) statement -> Class CLASS_IDENTIFIER EquivalentTo LEFT_CURLY_BRACKET . statement_enumerated_class_check RIGHT_CURLY_BRACKET
    (52) statement_enumerated_class_check -> . IndividualNames
    (53) statement_enumerated_class_check -> . IndividualNames COMMA statement_enumerated_class_check

    IndividualNames shift and go to state 37

    statement_enumerated_class_check shift and go to state 36

state 17

    (54) statement -> Class CLASS_IDENTIFIER EquivalentTo statement_covered_class_check .

    Class           reduce using rule 54 (statement -> Class CLASS_IDENTIFIER EquivalentTo statement_covered_class_check .)
    $end            reduce using rule 54 (statement -> Class CLASS_IDENTIFIER EquivalentTo statement_covered_class_check .)


state 18

    (32) nested_descriptions -> LEFT_PAREN . nested_descriptions RIGHT_PAREN
    (30) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (31) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (32) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (33) nested_descriptions -> . statement_property_identify statement_reserved_word nested_descriptions
    (34) nested_descriptions -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (35) nested_descriptions -> . statement_property_identify statement_reserved_word VALUE CLASS_IDENTIFIER
    (36) nested_descriptions -> . statement_property_identify statement_reserved_word VALUE nested_descriptions
    (37) nested_descriptions -> . statement_property_identify statement_reserved_word ONLY CLASS_IDENTIFIER
    (38) nested_descriptions -> . statement_property_identify statement_reserved_word ONLY nested_descriptions
    (39) nested_descriptions -> . statement_property_identify statement_reserved_word SOME CLASS_IDENTIFIER
    (40) nested_descriptions -> . statement_property_identify statement_reserved_word SOME nested_descriptions
    (41) nested_descriptions -> . CLASS_IDENTIFIER
    (12) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (13) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (14) statement_property_identify -> . PROPERTY_IDENTIFIER

    LEFT_PAREN      shift and go to state 18
    CLASS_IDENTIFIER shift and go to state 39
    PROPERTY_IDENTIFIER_has shift and go to state 11
    PROPERTY_IDENTIFIER_is_Of shift and go to state 12
    PROPERTY_IDENTIFIER shift and go to state 13

    nested_descriptions            shift and go to state 38
    statement_property_identify    shift and go to state 19

state 19

    (33) nested_descriptions -> statement_property_identify . statement_reserved_word nested_descriptions
    (34) nested_descriptions -> statement_property_identify . statement_reserved_word CLASS_IDENTIFIER
    (35) nested_descriptions -> statement_property_identify . statement_reserved_word VALUE CLASS_IDENTIFIER
    (36) nested_descriptions -> statement_property_identify . statement_reserved_word VALUE nested_descriptions
    (37) nested_descriptions -> statement_property_identify . statement_reserved_word ONLY CLASS_IDENTIFIER
    (38) nested_descriptions -> statement_property_identify . statement_reserved_word ONLY nested_descriptions
    (39) nested_descriptions -> statement_property_identify . statement_reserved_word SOME CLASS_IDENTIFIER
    (40) nested_descriptions -> statement_property_identify . statement_reserved_word SOME nested_descriptions
    (4) statement_reserved_word -> . SOME
    (5) statement_reserved_word -> . EXACTLY
    (6) statement_reserved_word -> . MIN
    (7) statement_reserved_word -> . MAX
    (8) statement_reserved_word -> . OR
    (9) statement_reserved_word -> . ONLY
    (10) statement_reserved_word -> . AND
    (11) statement_reserved_word -> . VALUE

    SOME            shift and go to state 25
    EXACTLY         shift and go to state 26
    MIN             shift and go to state 27
    MAX             shift and go to state 28
    OR              shift and go to state 29
    ONLY            shift and go to state 30
    AND             shift and go to state 31
    VALUE           shift and go to state 32

    statement_reserved_word        shift and go to state 40

state 20

    (42) statement -> Class CLASS_IDENTIFIER SubClassOf CLASS_IDENTIFIER COMMA . closed_axiom_mandatory
    (20) primitive_class_mandatory -> CLASS_IDENTIFIER COMMA . primitive_class_mandatory
    (43) closed_axiom_mandatory -> . CLASS_IDENTIFIER
    (44) closed_axiom_mandatory -> . statement_property_restriction
    (45) closed_axiom_mandatory -> . CLASS_IDENTIFIER COMMA closed_axiom_mandatory
    (46) closed_axiom_mandatory -> . statement_property_restriction COMMA closed_axiom_mandatory
    (15) primitive_class_mandatory -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (16) primitive_class_mandatory -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (17) primitive_class_mandatory -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (18) primitive_class_mandatory -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory
    (19) primitive_class_mandatory -> . CLASS_IDENTIFIER
    (20) primitive_class_mandatory -> . CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (47) statement_property_restriction -> . statement_property_identify SOME CLASS_IDENTIFIER
    (48) statement_property_restriction -> . statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN
    (12) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (13) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (14) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 41
    PROPERTY_IDENTIFIER_has shift and go to state 11
    PROPERTY_IDENTIFIER_is_Of shift and go to state 12
    PROPERTY_IDENTIFIER shift and go to state 13

    closed_axiom_mandatory         shift and go to state 42
    primitive_class_mandatory      shift and go to state 43
    statement_property_restriction shift and go to state 44
    statement_property_identify    shift and go to state 45

state 21

    (3) statement -> Class CLASS_IDENTIFIER SubClassOf primitive_class_mandatory statement_class_disjoin . statement_class_individuals
    (25) statement_class_individuals -> . empty
    (26) statement_class_individuals -> . Individuals statement_class_individuals_check
    (57) empty -> .

    Individuals     shift and go to state 48
    Class           reduce using rule 57 (empty -> .)
    $end            reduce using rule 57 (empty -> .)

    statement_class_individuals    shift and go to state 46
    empty                          shift and go to state 47

state 22

    (21) statement_class_disjoin -> empty .

    Individuals     reduce using rule 21 (statement_class_disjoin -> empty .)
    Class           reduce using rule 21 (statement_class_disjoin -> empty .)
    $end            reduce using rule 21 (statement_class_disjoin -> empty .)


state 23

    (22) statement_class_disjoin -> DisjointClasses . statement_class_disjoin_check
    (23) statement_class_disjoin_check -> . CLASS_IDENTIFIER
    (24) statement_class_disjoin_check -> . CLASS_IDENTIFIER COMMA statement_class_disjoin_check

    CLASS_IDENTIFIER shift and go to state 50

    statement_class_disjoin_check  shift and go to state 49

state 24

    (15) primitive_class_mandatory -> statement_property_identify statement_reserved_word . CLASS_IDENTIFIER
    (16) primitive_class_mandatory -> statement_property_identify statement_reserved_word . CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (17) primitive_class_mandatory -> statement_property_identify statement_reserved_word . NAMESPACEID DATA_TYPE
    (18) primitive_class_mandatory -> statement_property_identify statement_reserved_word . NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory

    CLASS_IDENTIFIER shift and go to state 51
    NAMESPACEID     shift and go to state 52


state 25

    (4) statement_reserved_word -> SOME .

    CLASS_IDENTIFIER reduce using rule 4 (statement_reserved_word -> SOME .)
    NAMESPACEID     reduce using rule 4 (statement_reserved_word -> SOME .)
    VALUE           reduce using rule 4 (statement_reserved_word -> SOME .)
    ONLY            reduce using rule 4 (statement_reserved_word -> SOME .)
    SOME            reduce using rule 4 (statement_reserved_word -> SOME .)
    LEFT_PAREN      reduce using rule 4 (statement_reserved_word -> SOME .)
    PROPERTY_IDENTIFIER_has reduce using rule 4 (statement_reserved_word -> SOME .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 4 (statement_reserved_word -> SOME .)
    PROPERTY_IDENTIFIER reduce using rule 4 (statement_reserved_word -> SOME .)


state 26

    (5) statement_reserved_word -> EXACTLY .

    CLASS_IDENTIFIER reduce using rule 5 (statement_reserved_word -> EXACTLY .)
    NAMESPACEID     reduce using rule 5 (statement_reserved_word -> EXACTLY .)
    VALUE           reduce using rule 5 (statement_reserved_word -> EXACTLY .)
    ONLY            reduce using rule 5 (statement_reserved_word -> EXACTLY .)
    SOME            reduce using rule 5 (statement_reserved_word -> EXACTLY .)
    LEFT_PAREN      reduce using rule 5 (statement_reserved_word -> EXACTLY .)
    PROPERTY_IDENTIFIER_has reduce using rule 5 (statement_reserved_word -> EXACTLY .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 5 (statement_reserved_word -> EXACTLY .)
    PROPERTY_IDENTIFIER reduce using rule 5 (statement_reserved_word -> EXACTLY .)


state 27

    (6) statement_reserved_word -> MIN .

    CLASS_IDENTIFIER reduce using rule 6 (statement_reserved_word -> MIN .)
    NAMESPACEID     reduce using rule 6 (statement_reserved_word -> MIN .)
    VALUE           reduce using rule 6 (statement_reserved_word -> MIN .)
    ONLY            reduce using rule 6 (statement_reserved_word -> MIN .)
    SOME            reduce using rule 6 (statement_reserved_word -> MIN .)
    LEFT_PAREN      reduce using rule 6 (statement_reserved_word -> MIN .)
    PROPERTY_IDENTIFIER_has reduce using rule 6 (statement_reserved_word -> MIN .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 6 (statement_reserved_word -> MIN .)
    PROPERTY_IDENTIFIER reduce using rule 6 (statement_reserved_word -> MIN .)


state 28

    (7) statement_reserved_word -> MAX .

    CLASS_IDENTIFIER reduce using rule 7 (statement_reserved_word -> MAX .)
    NAMESPACEID     reduce using rule 7 (statement_reserved_word -> MAX .)
    VALUE           reduce using rule 7 (statement_reserved_word -> MAX .)
    ONLY            reduce using rule 7 (statement_reserved_word -> MAX .)
    SOME            reduce using rule 7 (statement_reserved_word -> MAX .)
    LEFT_PAREN      reduce using rule 7 (statement_reserved_word -> MAX .)
    PROPERTY_IDENTIFIER_has reduce using rule 7 (statement_reserved_word -> MAX .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 7 (statement_reserved_word -> MAX .)
    PROPERTY_IDENTIFIER reduce using rule 7 (statement_reserved_word -> MAX .)


state 29

    (8) statement_reserved_word -> OR .

    CLASS_IDENTIFIER reduce using rule 8 (statement_reserved_word -> OR .)
    NAMESPACEID     reduce using rule 8 (statement_reserved_word -> OR .)
    VALUE           reduce using rule 8 (statement_reserved_word -> OR .)
    ONLY            reduce using rule 8 (statement_reserved_word -> OR .)
    SOME            reduce using rule 8 (statement_reserved_word -> OR .)
    LEFT_PAREN      reduce using rule 8 (statement_reserved_word -> OR .)
    PROPERTY_IDENTIFIER_has reduce using rule 8 (statement_reserved_word -> OR .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 8 (statement_reserved_word -> OR .)
    PROPERTY_IDENTIFIER reduce using rule 8 (statement_reserved_word -> OR .)


state 30

    (9) statement_reserved_word -> ONLY .

    CLASS_IDENTIFIER reduce using rule 9 (statement_reserved_word -> ONLY .)
    NAMESPACEID     reduce using rule 9 (statement_reserved_word -> ONLY .)
    VALUE           reduce using rule 9 (statement_reserved_word -> ONLY .)
    ONLY            reduce using rule 9 (statement_reserved_word -> ONLY .)
    SOME            reduce using rule 9 (statement_reserved_word -> ONLY .)
    LEFT_PAREN      reduce using rule 9 (statement_reserved_word -> ONLY .)
    PROPERTY_IDENTIFIER_has reduce using rule 9 (statement_reserved_word -> ONLY .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 9 (statement_reserved_word -> ONLY .)
    PROPERTY_IDENTIFIER reduce using rule 9 (statement_reserved_word -> ONLY .)


state 31

    (10) statement_reserved_word -> AND .

    CLASS_IDENTIFIER reduce using rule 10 (statement_reserved_word -> AND .)
    NAMESPACEID     reduce using rule 10 (statement_reserved_word -> AND .)
    VALUE           reduce using rule 10 (statement_reserved_word -> AND .)
    ONLY            reduce using rule 10 (statement_reserved_word -> AND .)
    SOME            reduce using rule 10 (statement_reserved_word -> AND .)
    LEFT_PAREN      reduce using rule 10 (statement_reserved_word -> AND .)
    PROPERTY_IDENTIFIER_has reduce using rule 10 (statement_reserved_word -> AND .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 10 (statement_reserved_word -> AND .)
    PROPERTY_IDENTIFIER reduce using rule 10 (statement_reserved_word -> AND .)


state 32

    (11) statement_reserved_word -> VALUE .

    CLASS_IDENTIFIER reduce using rule 11 (statement_reserved_word -> VALUE .)
    NAMESPACEID     reduce using rule 11 (statement_reserved_word -> VALUE .)
    VALUE           reduce using rule 11 (statement_reserved_word -> VALUE .)
    ONLY            reduce using rule 11 (statement_reserved_word -> VALUE .)
    SOME            reduce using rule 11 (statement_reserved_word -> VALUE .)
    LEFT_PAREN      reduce using rule 11 (statement_reserved_word -> VALUE .)
    PROPERTY_IDENTIFIER_has reduce using rule 11 (statement_reserved_word -> VALUE .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 11 (statement_reserved_word -> VALUE .)
    PROPERTY_IDENTIFIER reduce using rule 11 (statement_reserved_word -> VALUE .)


state 33

    (56) statement_covered_class_check -> CLASS_IDENTIFIER OR . statement_covered_class_check
    (55) statement_covered_class_check -> . CLASS_IDENTIFIER
    (56) statement_covered_class_check -> . CLASS_IDENTIFIER OR statement_covered_class_check

    CLASS_IDENTIFIER shift and go to state 53

    statement_covered_class_check  shift and go to state 54

state 34

    (30) nested_descriptions -> nested_descriptions AND . nested_descriptions
    (30) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (31) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (32) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (33) nested_descriptions -> . statement_property_identify statement_reserved_word nested_descriptions
    (34) nested_descriptions -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (35) nested_descriptions -> . statement_property_identify statement_reserved_word VALUE CLASS_IDENTIFIER
    (36) nested_descriptions -> . statement_property_identify statement_reserved_word VALUE nested_descriptions
    (37) nested_descriptions -> . statement_property_identify statement_reserved_word ONLY CLASS_IDENTIFIER
    (38) nested_descriptions -> . statement_property_identify statement_reserved_word ONLY nested_descriptions
    (39) nested_descriptions -> . statement_property_identify statement_reserved_word SOME CLASS_IDENTIFIER
    (40) nested_descriptions -> . statement_property_identify statement_reserved_word SOME nested_descriptions
    (41) nested_descriptions -> . CLASS_IDENTIFIER
    (12) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (13) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (14) statement_property_identify -> . PROPERTY_IDENTIFIER

    LEFT_PAREN      shift and go to state 18
    CLASS_IDENTIFIER shift and go to state 39
    PROPERTY_IDENTIFIER_has shift and go to state 11
    PROPERTY_IDENTIFIER_is_Of shift and go to state 12
    PROPERTY_IDENTIFIER shift and go to state 13

    nested_descriptions            shift and go to state 55
    statement_property_identify    shift and go to state 19

state 35

    (31) nested_descriptions -> nested_descriptions OR . nested_descriptions
    (30) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (31) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (32) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (33) nested_descriptions -> . statement_property_identify statement_reserved_word nested_descriptions
    (34) nested_descriptions -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (35) nested_descriptions -> . statement_property_identify statement_reserved_word VALUE CLASS_IDENTIFIER
    (36) nested_descriptions -> . statement_property_identify statement_reserved_word VALUE nested_descriptions
    (37) nested_descriptions -> . statement_property_identify statement_reserved_word ONLY CLASS_IDENTIFIER
    (38) nested_descriptions -> . statement_property_identify statement_reserved_word ONLY nested_descriptions
    (39) nested_descriptions -> . statement_property_identify statement_reserved_word SOME CLASS_IDENTIFIER
    (40) nested_descriptions -> . statement_property_identify statement_reserved_word SOME nested_descriptions
    (41) nested_descriptions -> . CLASS_IDENTIFIER
    (12) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (13) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (14) statement_property_identify -> . PROPERTY_IDENTIFIER

    LEFT_PAREN      shift and go to state 18
    CLASS_IDENTIFIER shift and go to state 39
    PROPERTY_IDENTIFIER_has shift and go to state 11
    PROPERTY_IDENTIFIER_is_Of shift and go to state 12
    PROPERTY_IDENTIFIER shift and go to state 13

    nested_descriptions            shift and go to state 56
    statement_property_identify    shift and go to state 19

state 36

    (51) statement -> Class CLASS_IDENTIFIER EquivalentTo LEFT_CURLY_BRACKET statement_enumerated_class_check . RIGHT_CURLY_BRACKET

    RIGHT_CURLY_BRACKET shift and go to state 57


state 37

    (52) statement_enumerated_class_check -> IndividualNames .
    (53) statement_enumerated_class_check -> IndividualNames . COMMA statement_enumerated_class_check

    RIGHT_CURLY_BRACKET reduce using rule 52 (statement_enumerated_class_check -> IndividualNames .)
    COMMA           shift and go to state 58


state 38

    (32) nested_descriptions -> LEFT_PAREN nested_descriptions . RIGHT_PAREN
    (30) nested_descriptions -> nested_descriptions . AND nested_descriptions
    (31) nested_descriptions -> nested_descriptions . OR nested_descriptions

    RIGHT_PAREN     shift and go to state 59
    AND             shift and go to state 34
    OR              shift and go to state 35


state 39

    (41) nested_descriptions -> CLASS_IDENTIFIER .

    RIGHT_PAREN     reduce using rule 41 (nested_descriptions -> CLASS_IDENTIFIER .)
    AND             reduce using rule 41 (nested_descriptions -> CLASS_IDENTIFIER .)
    OR              reduce using rule 41 (nested_descriptions -> CLASS_IDENTIFIER .)
    Class           reduce using rule 41 (nested_descriptions -> CLASS_IDENTIFIER .)
    $end            reduce using rule 41 (nested_descriptions -> CLASS_IDENTIFIER .)


state 40

    (33) nested_descriptions -> statement_property_identify statement_reserved_word . nested_descriptions
    (34) nested_descriptions -> statement_property_identify statement_reserved_word . CLASS_IDENTIFIER
    (35) nested_descriptions -> statement_property_identify statement_reserved_word . VALUE CLASS_IDENTIFIER
    (36) nested_descriptions -> statement_property_identify statement_reserved_word . VALUE nested_descriptions
    (37) nested_descriptions -> statement_property_identify statement_reserved_word . ONLY CLASS_IDENTIFIER
    (38) nested_descriptions -> statement_property_identify statement_reserved_word . ONLY nested_descriptions
    (39) nested_descriptions -> statement_property_identify statement_reserved_word . SOME CLASS_IDENTIFIER
    (40) nested_descriptions -> statement_property_identify statement_reserved_word . SOME nested_descriptions
    (30) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (31) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (32) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (33) nested_descriptions -> . statement_property_identify statement_reserved_word nested_descriptions
    (34) nested_descriptions -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (35) nested_descriptions -> . statement_property_identify statement_reserved_word VALUE CLASS_IDENTIFIER
    (36) nested_descriptions -> . statement_property_identify statement_reserved_word VALUE nested_descriptions
    (37) nested_descriptions -> . statement_property_identify statement_reserved_word ONLY CLASS_IDENTIFIER
    (38) nested_descriptions -> . statement_property_identify statement_reserved_word ONLY nested_descriptions
    (39) nested_descriptions -> . statement_property_identify statement_reserved_word SOME CLASS_IDENTIFIER
    (40) nested_descriptions -> . statement_property_identify statement_reserved_word SOME nested_descriptions
    (41) nested_descriptions -> . CLASS_IDENTIFIER
    (12) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (13) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (14) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 61
    VALUE           shift and go to state 62
    ONLY            shift and go to state 63
    SOME            shift and go to state 64
    LEFT_PAREN      shift and go to state 18
    PROPERTY_IDENTIFIER_has shift and go to state 11
    PROPERTY_IDENTIFIER_is_Of shift and go to state 12
    PROPERTY_IDENTIFIER shift and go to state 13

    statement_property_identify    shift and go to state 19
    nested_descriptions            shift and go to state 60

state 41

    (43) closed_axiom_mandatory -> CLASS_IDENTIFIER .
    (45) closed_axiom_mandatory -> CLASS_IDENTIFIER . COMMA closed_axiom_mandatory
    (19) primitive_class_mandatory -> CLASS_IDENTIFIER .
    (20) primitive_class_mandatory -> CLASS_IDENTIFIER . COMMA primitive_class_mandatory

  ! reduce/reduce conflict for Class resolved using rule 19 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 19 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    COMMA           shift and go to state 65
    DisjointClasses reduce using rule 19 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    Individuals     reduce using rule 19 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    Class           reduce using rule 19 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    $end            reduce using rule 19 (primitive_class_mandatory -> CLASS_IDENTIFIER .)

  ! Class           [ reduce using rule 43 (closed_axiom_mandatory -> CLASS_IDENTIFIER .) ]
  ! $end            [ reduce using rule 43 (closed_axiom_mandatory -> CLASS_IDENTIFIER .) ]


state 42

    (42) statement -> Class CLASS_IDENTIFIER SubClassOf CLASS_IDENTIFIER COMMA closed_axiom_mandatory .

    Class           reduce using rule 42 (statement -> Class CLASS_IDENTIFIER SubClassOf CLASS_IDENTIFIER COMMA closed_axiom_mandatory .)
    $end            reduce using rule 42 (statement -> Class CLASS_IDENTIFIER SubClassOf CLASS_IDENTIFIER COMMA closed_axiom_mandatory .)


state 43

    (20) primitive_class_mandatory -> CLASS_IDENTIFIER COMMA primitive_class_mandatory .

    DisjointClasses reduce using rule 20 (primitive_class_mandatory -> CLASS_IDENTIFIER COMMA primitive_class_mandatory .)
    Individuals     reduce using rule 20 (primitive_class_mandatory -> CLASS_IDENTIFIER COMMA primitive_class_mandatory .)
    Class           reduce using rule 20 (primitive_class_mandatory -> CLASS_IDENTIFIER COMMA primitive_class_mandatory .)
    $end            reduce using rule 20 (primitive_class_mandatory -> CLASS_IDENTIFIER COMMA primitive_class_mandatory .)


state 44

    (44) closed_axiom_mandatory -> statement_property_restriction .
    (46) closed_axiom_mandatory -> statement_property_restriction . COMMA closed_axiom_mandatory

    Class           reduce using rule 44 (closed_axiom_mandatory -> statement_property_restriction .)
    $end            reduce using rule 44 (closed_axiom_mandatory -> statement_property_restriction .)
    COMMA           shift and go to state 66


state 45

    (15) primitive_class_mandatory -> statement_property_identify . statement_reserved_word CLASS_IDENTIFIER
    (16) primitive_class_mandatory -> statement_property_identify . statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (17) primitive_class_mandatory -> statement_property_identify . statement_reserved_word NAMESPACEID DATA_TYPE
    (18) primitive_class_mandatory -> statement_property_identify . statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory
    (47) statement_property_restriction -> statement_property_identify . SOME CLASS_IDENTIFIER
    (48) statement_property_restriction -> statement_property_identify . ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN
    (4) statement_reserved_word -> . SOME
    (5) statement_reserved_word -> . EXACTLY
    (6) statement_reserved_word -> . MIN
    (7) statement_reserved_word -> . MAX
    (8) statement_reserved_word -> . OR
    (9) statement_reserved_word -> . ONLY
    (10) statement_reserved_word -> . AND
    (11) statement_reserved_word -> . VALUE

    SOME            shift and go to state 67
    ONLY            shift and go to state 68
    EXACTLY         shift and go to state 26
    MIN             shift and go to state 27
    MAX             shift and go to state 28
    OR              shift and go to state 29
    AND             shift and go to state 31
    VALUE           shift and go to state 32

    statement_reserved_word        shift and go to state 24

state 46

    (3) statement -> Class CLASS_IDENTIFIER SubClassOf primitive_class_mandatory statement_class_disjoin statement_class_individuals .

    Class           reduce using rule 3 (statement -> Class CLASS_IDENTIFIER SubClassOf primitive_class_mandatory statement_class_disjoin statement_class_individuals .)
    $end            reduce using rule 3 (statement -> Class CLASS_IDENTIFIER SubClassOf primitive_class_mandatory statement_class_disjoin statement_class_individuals .)


state 47

    (25) statement_class_individuals -> empty .

    Class           reduce using rule 25 (statement_class_individuals -> empty .)
    $end            reduce using rule 25 (statement_class_individuals -> empty .)


state 48

    (26) statement_class_individuals -> Individuals . statement_class_individuals_check
    (27) statement_class_individuals_check -> . IndividualNames
    (28) statement_class_individuals_check -> . IndividualNames COMMA statement_class_individuals_check

    IndividualNames shift and go to state 70

    statement_class_individuals_check shift and go to state 69

state 49

    (22) statement_class_disjoin -> DisjointClasses statement_class_disjoin_check .

    Individuals     reduce using rule 22 (statement_class_disjoin -> DisjointClasses statement_class_disjoin_check .)
    Class           reduce using rule 22 (statement_class_disjoin -> DisjointClasses statement_class_disjoin_check .)
    $end            reduce using rule 22 (statement_class_disjoin -> DisjointClasses statement_class_disjoin_check .)


state 50

    (23) statement_class_disjoin_check -> CLASS_IDENTIFIER .
    (24) statement_class_disjoin_check -> CLASS_IDENTIFIER . COMMA statement_class_disjoin_check

    Individuals     reduce using rule 23 (statement_class_disjoin_check -> CLASS_IDENTIFIER .)
    Class           reduce using rule 23 (statement_class_disjoin_check -> CLASS_IDENTIFIER .)
    $end            reduce using rule 23 (statement_class_disjoin_check -> CLASS_IDENTIFIER .)
    COMMA           shift and go to state 71


state 51

    (15) primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .
    (16) primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER . COMMA primitive_class_mandatory

    DisjointClasses reduce using rule 15 (primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    Individuals     reduce using rule 15 (primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    Class           reduce using rule 15 (primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    $end            reduce using rule 15 (primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    COMMA           shift and go to state 72


state 52

    (17) primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID . DATA_TYPE
    (18) primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID . DATA_TYPE COMMA primitive_class_mandatory

    DATA_TYPE       shift and go to state 73


state 53

    (55) statement_covered_class_check -> CLASS_IDENTIFIER .
    (56) statement_covered_class_check -> CLASS_IDENTIFIER . OR statement_covered_class_check

    Class           reduce using rule 55 (statement_covered_class_check -> CLASS_IDENTIFIER .)
    $end            reduce using rule 55 (statement_covered_class_check -> CLASS_IDENTIFIER .)
    OR              shift and go to state 33


state 54

    (56) statement_covered_class_check -> CLASS_IDENTIFIER OR statement_covered_class_check .

    Class           reduce using rule 56 (statement_covered_class_check -> CLASS_IDENTIFIER OR statement_covered_class_check .)
    $end            reduce using rule 56 (statement_covered_class_check -> CLASS_IDENTIFIER OR statement_covered_class_check .)


state 55

    (30) nested_descriptions -> nested_descriptions AND nested_descriptions .
    (30) nested_descriptions -> nested_descriptions . AND nested_descriptions
    (31) nested_descriptions -> nested_descriptions . OR nested_descriptions

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    Class           reduce using rule 30 (nested_descriptions -> nested_descriptions AND nested_descriptions .)
    $end            reduce using rule 30 (nested_descriptions -> nested_descriptions AND nested_descriptions .)
    RIGHT_PAREN     reduce using rule 30 (nested_descriptions -> nested_descriptions AND nested_descriptions .)
    AND             shift and go to state 34
    OR              shift and go to state 35

  ! AND             [ reduce using rule 30 (nested_descriptions -> nested_descriptions AND nested_descriptions .) ]
  ! OR              [ reduce using rule 30 (nested_descriptions -> nested_descriptions AND nested_descriptions .) ]


state 56

    (31) nested_descriptions -> nested_descriptions OR nested_descriptions .
    (30) nested_descriptions -> nested_descriptions . AND nested_descriptions
    (31) nested_descriptions -> nested_descriptions . OR nested_descriptions

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    Class           reduce using rule 31 (nested_descriptions -> nested_descriptions OR nested_descriptions .)
    $end            reduce using rule 31 (nested_descriptions -> nested_descriptions OR nested_descriptions .)
    RIGHT_PAREN     reduce using rule 31 (nested_descriptions -> nested_descriptions OR nested_descriptions .)
    AND             shift and go to state 34
    OR              shift and go to state 35

  ! AND             [ reduce using rule 31 (nested_descriptions -> nested_descriptions OR nested_descriptions .) ]
  ! OR              [ reduce using rule 31 (nested_descriptions -> nested_descriptions OR nested_descriptions .) ]


state 57

    (51) statement -> Class CLASS_IDENTIFIER EquivalentTo LEFT_CURLY_BRACKET statement_enumerated_class_check RIGHT_CURLY_BRACKET .

    Class           reduce using rule 51 (statement -> Class CLASS_IDENTIFIER EquivalentTo LEFT_CURLY_BRACKET statement_enumerated_class_check RIGHT_CURLY_BRACKET .)
    $end            reduce using rule 51 (statement -> Class CLASS_IDENTIFIER EquivalentTo LEFT_CURLY_BRACKET statement_enumerated_class_check RIGHT_CURLY_BRACKET .)


state 58

    (53) statement_enumerated_class_check -> IndividualNames COMMA . statement_enumerated_class_check
    (52) statement_enumerated_class_check -> . IndividualNames
    (53) statement_enumerated_class_check -> . IndividualNames COMMA statement_enumerated_class_check

    IndividualNames shift and go to state 37

    statement_enumerated_class_check shift and go to state 74

state 59

    (32) nested_descriptions -> LEFT_PAREN nested_descriptions RIGHT_PAREN .

    AND             reduce using rule 32 (nested_descriptions -> LEFT_PAREN nested_descriptions RIGHT_PAREN .)
    OR              reduce using rule 32 (nested_descriptions -> LEFT_PAREN nested_descriptions RIGHT_PAREN .)
    Class           reduce using rule 32 (nested_descriptions -> LEFT_PAREN nested_descriptions RIGHT_PAREN .)
    $end            reduce using rule 32 (nested_descriptions -> LEFT_PAREN nested_descriptions RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 32 (nested_descriptions -> LEFT_PAREN nested_descriptions RIGHT_PAREN .)


state 60

    (33) nested_descriptions -> statement_property_identify statement_reserved_word nested_descriptions .
    (30) nested_descriptions -> nested_descriptions . AND nested_descriptions
    (31) nested_descriptions -> nested_descriptions . OR nested_descriptions

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    Class           reduce using rule 33 (nested_descriptions -> statement_property_identify statement_reserved_word nested_descriptions .)
    $end            reduce using rule 33 (nested_descriptions -> statement_property_identify statement_reserved_word nested_descriptions .)
    RIGHT_PAREN     reduce using rule 33 (nested_descriptions -> statement_property_identify statement_reserved_word nested_descriptions .)
    AND             shift and go to state 34
    OR              shift and go to state 35

  ! AND             [ reduce using rule 33 (nested_descriptions -> statement_property_identify statement_reserved_word nested_descriptions .) ]
  ! OR              [ reduce using rule 33 (nested_descriptions -> statement_property_identify statement_reserved_word nested_descriptions .) ]


state 61

    (34) nested_descriptions -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .
    (41) nested_descriptions -> CLASS_IDENTIFIER .

  ! reduce/reduce conflict for AND resolved using rule 34 (nested_descriptions -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for OR resolved using rule 34 (nested_descriptions -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for Class resolved using rule 34 (nested_descriptions -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 34 (nested_descriptions -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 34 (nested_descriptions -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    AND             reduce using rule 34 (nested_descriptions -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    OR              reduce using rule 34 (nested_descriptions -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    Class           reduce using rule 34 (nested_descriptions -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    $end            reduce using rule 34 (nested_descriptions -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    RIGHT_PAREN     reduce using rule 34 (nested_descriptions -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)

  ! AND             [ reduce using rule 41 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! OR              [ reduce using rule 41 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! Class           [ reduce using rule 41 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! $end            [ reduce using rule 41 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! RIGHT_PAREN     [ reduce using rule 41 (nested_descriptions -> CLASS_IDENTIFIER .) ]


state 62

    (35) nested_descriptions -> statement_property_identify statement_reserved_word VALUE . CLASS_IDENTIFIER
    (36) nested_descriptions -> statement_property_identify statement_reserved_word VALUE . nested_descriptions
    (30) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (31) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (32) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (33) nested_descriptions -> . statement_property_identify statement_reserved_word nested_descriptions
    (34) nested_descriptions -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (35) nested_descriptions -> . statement_property_identify statement_reserved_word VALUE CLASS_IDENTIFIER
    (36) nested_descriptions -> . statement_property_identify statement_reserved_word VALUE nested_descriptions
    (37) nested_descriptions -> . statement_property_identify statement_reserved_word ONLY CLASS_IDENTIFIER
    (38) nested_descriptions -> . statement_property_identify statement_reserved_word ONLY nested_descriptions
    (39) nested_descriptions -> . statement_property_identify statement_reserved_word SOME CLASS_IDENTIFIER
    (40) nested_descriptions -> . statement_property_identify statement_reserved_word SOME nested_descriptions
    (41) nested_descriptions -> . CLASS_IDENTIFIER
    (12) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (13) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (14) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 75
    LEFT_PAREN      shift and go to state 18
    PROPERTY_IDENTIFIER_has shift and go to state 11
    PROPERTY_IDENTIFIER_is_Of shift and go to state 12
    PROPERTY_IDENTIFIER shift and go to state 13

    statement_property_identify    shift and go to state 19
    nested_descriptions            shift and go to state 76

state 63

    (37) nested_descriptions -> statement_property_identify statement_reserved_word ONLY . CLASS_IDENTIFIER
    (38) nested_descriptions -> statement_property_identify statement_reserved_word ONLY . nested_descriptions
    (30) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (31) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (32) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (33) nested_descriptions -> . statement_property_identify statement_reserved_word nested_descriptions
    (34) nested_descriptions -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (35) nested_descriptions -> . statement_property_identify statement_reserved_word VALUE CLASS_IDENTIFIER
    (36) nested_descriptions -> . statement_property_identify statement_reserved_word VALUE nested_descriptions
    (37) nested_descriptions -> . statement_property_identify statement_reserved_word ONLY CLASS_IDENTIFIER
    (38) nested_descriptions -> . statement_property_identify statement_reserved_word ONLY nested_descriptions
    (39) nested_descriptions -> . statement_property_identify statement_reserved_word SOME CLASS_IDENTIFIER
    (40) nested_descriptions -> . statement_property_identify statement_reserved_word SOME nested_descriptions
    (41) nested_descriptions -> . CLASS_IDENTIFIER
    (12) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (13) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (14) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 77
    LEFT_PAREN      shift and go to state 18
    PROPERTY_IDENTIFIER_has shift and go to state 11
    PROPERTY_IDENTIFIER_is_Of shift and go to state 12
    PROPERTY_IDENTIFIER shift and go to state 13

    statement_property_identify    shift and go to state 19
    nested_descriptions            shift and go to state 78

state 64

    (39) nested_descriptions -> statement_property_identify statement_reserved_word SOME . CLASS_IDENTIFIER
    (40) nested_descriptions -> statement_property_identify statement_reserved_word SOME . nested_descriptions
    (30) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (31) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (32) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (33) nested_descriptions -> . statement_property_identify statement_reserved_word nested_descriptions
    (34) nested_descriptions -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (35) nested_descriptions -> . statement_property_identify statement_reserved_word VALUE CLASS_IDENTIFIER
    (36) nested_descriptions -> . statement_property_identify statement_reserved_word VALUE nested_descriptions
    (37) nested_descriptions -> . statement_property_identify statement_reserved_word ONLY CLASS_IDENTIFIER
    (38) nested_descriptions -> . statement_property_identify statement_reserved_word ONLY nested_descriptions
    (39) nested_descriptions -> . statement_property_identify statement_reserved_word SOME CLASS_IDENTIFIER
    (40) nested_descriptions -> . statement_property_identify statement_reserved_word SOME nested_descriptions
    (41) nested_descriptions -> . CLASS_IDENTIFIER
    (12) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (13) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (14) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 79
    LEFT_PAREN      shift and go to state 18
    PROPERTY_IDENTIFIER_has shift and go to state 11
    PROPERTY_IDENTIFIER_is_Of shift and go to state 12
    PROPERTY_IDENTIFIER shift and go to state 13

    statement_property_identify    shift and go to state 19
    nested_descriptions            shift and go to state 80

state 65

    (45) closed_axiom_mandatory -> CLASS_IDENTIFIER COMMA . closed_axiom_mandatory
    (20) primitive_class_mandatory -> CLASS_IDENTIFIER COMMA . primitive_class_mandatory
    (43) closed_axiom_mandatory -> . CLASS_IDENTIFIER
    (44) closed_axiom_mandatory -> . statement_property_restriction
    (45) closed_axiom_mandatory -> . CLASS_IDENTIFIER COMMA closed_axiom_mandatory
    (46) closed_axiom_mandatory -> . statement_property_restriction COMMA closed_axiom_mandatory
    (15) primitive_class_mandatory -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (16) primitive_class_mandatory -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (17) primitive_class_mandatory -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (18) primitive_class_mandatory -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory
    (19) primitive_class_mandatory -> . CLASS_IDENTIFIER
    (20) primitive_class_mandatory -> . CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (47) statement_property_restriction -> . statement_property_identify SOME CLASS_IDENTIFIER
    (48) statement_property_restriction -> . statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN
    (12) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (13) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (14) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 41
    PROPERTY_IDENTIFIER_has shift and go to state 11
    PROPERTY_IDENTIFIER_is_Of shift and go to state 12
    PROPERTY_IDENTIFIER shift and go to state 13

    closed_axiom_mandatory         shift and go to state 81
    primitive_class_mandatory      shift and go to state 43
    statement_property_restriction shift and go to state 44
    statement_property_identify    shift and go to state 45

state 66

    (46) closed_axiom_mandatory -> statement_property_restriction COMMA . closed_axiom_mandatory
    (43) closed_axiom_mandatory -> . CLASS_IDENTIFIER
    (44) closed_axiom_mandatory -> . statement_property_restriction
    (45) closed_axiom_mandatory -> . CLASS_IDENTIFIER COMMA closed_axiom_mandatory
    (46) closed_axiom_mandatory -> . statement_property_restriction COMMA closed_axiom_mandatory
    (47) statement_property_restriction -> . statement_property_identify SOME CLASS_IDENTIFIER
    (48) statement_property_restriction -> . statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN
    (12) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (13) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (14) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 83
    PROPERTY_IDENTIFIER_has shift and go to state 11
    PROPERTY_IDENTIFIER_is_Of shift and go to state 12
    PROPERTY_IDENTIFIER shift and go to state 13

    statement_property_restriction shift and go to state 44
    closed_axiom_mandatory         shift and go to state 82
    statement_property_identify    shift and go to state 84

state 67

    (47) statement_property_restriction -> statement_property_identify SOME . CLASS_IDENTIFIER
    (4) statement_reserved_word -> SOME .

  ! shift/reduce conflict for CLASS_IDENTIFIER resolved as shift
    CLASS_IDENTIFIER shift and go to state 85
    NAMESPACEID     reduce using rule 4 (statement_reserved_word -> SOME .)

  ! CLASS_IDENTIFIER [ reduce using rule 4 (statement_reserved_word -> SOME .) ]


state 68

    (48) statement_property_restriction -> statement_property_identify ONLY . LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN
    (9) statement_reserved_word -> ONLY .

    LEFT_PAREN      shift and go to state 86
    CLASS_IDENTIFIER reduce using rule 9 (statement_reserved_word -> ONLY .)
    NAMESPACEID     reduce using rule 9 (statement_reserved_word -> ONLY .)


state 69

    (26) statement_class_individuals -> Individuals statement_class_individuals_check .

    Class           reduce using rule 26 (statement_class_individuals -> Individuals statement_class_individuals_check .)
    $end            reduce using rule 26 (statement_class_individuals -> Individuals statement_class_individuals_check .)


state 70

    (27) statement_class_individuals_check -> IndividualNames .
    (28) statement_class_individuals_check -> IndividualNames . COMMA statement_class_individuals_check

    Class           reduce using rule 27 (statement_class_individuals_check -> IndividualNames .)
    $end            reduce using rule 27 (statement_class_individuals_check -> IndividualNames .)
    COMMA           shift and go to state 87


state 71

    (24) statement_class_disjoin_check -> CLASS_IDENTIFIER COMMA . statement_class_disjoin_check
    (23) statement_class_disjoin_check -> . CLASS_IDENTIFIER
    (24) statement_class_disjoin_check -> . CLASS_IDENTIFIER COMMA statement_class_disjoin_check

    CLASS_IDENTIFIER shift and go to state 50

    statement_class_disjoin_check  shift and go to state 88

state 72

    (16) primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA . primitive_class_mandatory
    (15) primitive_class_mandatory -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (16) primitive_class_mandatory -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (17) primitive_class_mandatory -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (18) primitive_class_mandatory -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory
    (19) primitive_class_mandatory -> . CLASS_IDENTIFIER
    (20) primitive_class_mandatory -> . CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (12) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (13) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (14) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 89
    PROPERTY_IDENTIFIER_has shift and go to state 11
    PROPERTY_IDENTIFIER_is_Of shift and go to state 12
    PROPERTY_IDENTIFIER shift and go to state 13

    statement_property_identify    shift and go to state 10
    primitive_class_mandatory      shift and go to state 90

state 73

    (17) primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE .
    (18) primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE . COMMA primitive_class_mandatory

    DisjointClasses reduce using rule 17 (primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE .)
    Individuals     reduce using rule 17 (primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE .)
    Class           reduce using rule 17 (primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE .)
    $end            reduce using rule 17 (primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE .)
    COMMA           shift and go to state 91


state 74

    (53) statement_enumerated_class_check -> IndividualNames COMMA statement_enumerated_class_check .

    RIGHT_CURLY_BRACKET reduce using rule 53 (statement_enumerated_class_check -> IndividualNames COMMA statement_enumerated_class_check .)


state 75

    (35) nested_descriptions -> statement_property_identify statement_reserved_word VALUE CLASS_IDENTIFIER .
    (41) nested_descriptions -> CLASS_IDENTIFIER .

  ! reduce/reduce conflict for AND resolved using rule 35 (nested_descriptions -> statement_property_identify statement_reserved_word VALUE CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for OR resolved using rule 35 (nested_descriptions -> statement_property_identify statement_reserved_word VALUE CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for Class resolved using rule 35 (nested_descriptions -> statement_property_identify statement_reserved_word VALUE CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 35 (nested_descriptions -> statement_property_identify statement_reserved_word VALUE CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 35 (nested_descriptions -> statement_property_identify statement_reserved_word VALUE CLASS_IDENTIFIER .)
    AND             reduce using rule 35 (nested_descriptions -> statement_property_identify statement_reserved_word VALUE CLASS_IDENTIFIER .)
    OR              reduce using rule 35 (nested_descriptions -> statement_property_identify statement_reserved_word VALUE CLASS_IDENTIFIER .)
    Class           reduce using rule 35 (nested_descriptions -> statement_property_identify statement_reserved_word VALUE CLASS_IDENTIFIER .)
    $end            reduce using rule 35 (nested_descriptions -> statement_property_identify statement_reserved_word VALUE CLASS_IDENTIFIER .)
    RIGHT_PAREN     reduce using rule 35 (nested_descriptions -> statement_property_identify statement_reserved_word VALUE CLASS_IDENTIFIER .)

  ! AND             [ reduce using rule 41 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! OR              [ reduce using rule 41 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! Class           [ reduce using rule 41 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! $end            [ reduce using rule 41 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! RIGHT_PAREN     [ reduce using rule 41 (nested_descriptions -> CLASS_IDENTIFIER .) ]


state 76

    (36) nested_descriptions -> statement_property_identify statement_reserved_word VALUE nested_descriptions .
    (30) nested_descriptions -> nested_descriptions . AND nested_descriptions
    (31) nested_descriptions -> nested_descriptions . OR nested_descriptions

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    Class           reduce using rule 36 (nested_descriptions -> statement_property_identify statement_reserved_word VALUE nested_descriptions .)
    $end            reduce using rule 36 (nested_descriptions -> statement_property_identify statement_reserved_word VALUE nested_descriptions .)
    RIGHT_PAREN     reduce using rule 36 (nested_descriptions -> statement_property_identify statement_reserved_word VALUE nested_descriptions .)
    AND             shift and go to state 34
    OR              shift and go to state 35

  ! AND             [ reduce using rule 36 (nested_descriptions -> statement_property_identify statement_reserved_word VALUE nested_descriptions .) ]
  ! OR              [ reduce using rule 36 (nested_descriptions -> statement_property_identify statement_reserved_word VALUE nested_descriptions .) ]


state 77

    (37) nested_descriptions -> statement_property_identify statement_reserved_word ONLY CLASS_IDENTIFIER .
    (41) nested_descriptions -> CLASS_IDENTIFIER .

  ! reduce/reduce conflict for AND resolved using rule 37 (nested_descriptions -> statement_property_identify statement_reserved_word ONLY CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for OR resolved using rule 37 (nested_descriptions -> statement_property_identify statement_reserved_word ONLY CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for Class resolved using rule 37 (nested_descriptions -> statement_property_identify statement_reserved_word ONLY CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 37 (nested_descriptions -> statement_property_identify statement_reserved_word ONLY CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 37 (nested_descriptions -> statement_property_identify statement_reserved_word ONLY CLASS_IDENTIFIER .)
    AND             reduce using rule 37 (nested_descriptions -> statement_property_identify statement_reserved_word ONLY CLASS_IDENTIFIER .)
    OR              reduce using rule 37 (nested_descriptions -> statement_property_identify statement_reserved_word ONLY CLASS_IDENTIFIER .)
    Class           reduce using rule 37 (nested_descriptions -> statement_property_identify statement_reserved_word ONLY CLASS_IDENTIFIER .)
    $end            reduce using rule 37 (nested_descriptions -> statement_property_identify statement_reserved_word ONLY CLASS_IDENTIFIER .)
    RIGHT_PAREN     reduce using rule 37 (nested_descriptions -> statement_property_identify statement_reserved_word ONLY CLASS_IDENTIFIER .)

  ! AND             [ reduce using rule 41 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! OR              [ reduce using rule 41 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! Class           [ reduce using rule 41 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! $end            [ reduce using rule 41 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! RIGHT_PAREN     [ reduce using rule 41 (nested_descriptions -> CLASS_IDENTIFIER .) ]


state 78

    (38) nested_descriptions -> statement_property_identify statement_reserved_word ONLY nested_descriptions .
    (30) nested_descriptions -> nested_descriptions . AND nested_descriptions
    (31) nested_descriptions -> nested_descriptions . OR nested_descriptions

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    Class           reduce using rule 38 (nested_descriptions -> statement_property_identify statement_reserved_word ONLY nested_descriptions .)
    $end            reduce using rule 38 (nested_descriptions -> statement_property_identify statement_reserved_word ONLY nested_descriptions .)
    RIGHT_PAREN     reduce using rule 38 (nested_descriptions -> statement_property_identify statement_reserved_word ONLY nested_descriptions .)
    AND             shift and go to state 34
    OR              shift and go to state 35

  ! AND             [ reduce using rule 38 (nested_descriptions -> statement_property_identify statement_reserved_word ONLY nested_descriptions .) ]
  ! OR              [ reduce using rule 38 (nested_descriptions -> statement_property_identify statement_reserved_word ONLY nested_descriptions .) ]


state 79

    (39) nested_descriptions -> statement_property_identify statement_reserved_word SOME CLASS_IDENTIFIER .
    (41) nested_descriptions -> CLASS_IDENTIFIER .

  ! reduce/reduce conflict for AND resolved using rule 39 (nested_descriptions -> statement_property_identify statement_reserved_word SOME CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for OR resolved using rule 39 (nested_descriptions -> statement_property_identify statement_reserved_word SOME CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for Class resolved using rule 39 (nested_descriptions -> statement_property_identify statement_reserved_word SOME CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 39 (nested_descriptions -> statement_property_identify statement_reserved_word SOME CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 39 (nested_descriptions -> statement_property_identify statement_reserved_word SOME CLASS_IDENTIFIER .)
    AND             reduce using rule 39 (nested_descriptions -> statement_property_identify statement_reserved_word SOME CLASS_IDENTIFIER .)
    OR              reduce using rule 39 (nested_descriptions -> statement_property_identify statement_reserved_word SOME CLASS_IDENTIFIER .)
    Class           reduce using rule 39 (nested_descriptions -> statement_property_identify statement_reserved_word SOME CLASS_IDENTIFIER .)
    $end            reduce using rule 39 (nested_descriptions -> statement_property_identify statement_reserved_word SOME CLASS_IDENTIFIER .)
    RIGHT_PAREN     reduce using rule 39 (nested_descriptions -> statement_property_identify statement_reserved_word SOME CLASS_IDENTIFIER .)

  ! AND             [ reduce using rule 41 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! OR              [ reduce using rule 41 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! Class           [ reduce using rule 41 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! $end            [ reduce using rule 41 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! RIGHT_PAREN     [ reduce using rule 41 (nested_descriptions -> CLASS_IDENTIFIER .) ]


state 80

    (40) nested_descriptions -> statement_property_identify statement_reserved_word SOME nested_descriptions .
    (30) nested_descriptions -> nested_descriptions . AND nested_descriptions
    (31) nested_descriptions -> nested_descriptions . OR nested_descriptions

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    Class           reduce using rule 40 (nested_descriptions -> statement_property_identify statement_reserved_word SOME nested_descriptions .)
    $end            reduce using rule 40 (nested_descriptions -> statement_property_identify statement_reserved_word SOME nested_descriptions .)
    RIGHT_PAREN     reduce using rule 40 (nested_descriptions -> statement_property_identify statement_reserved_word SOME nested_descriptions .)
    AND             shift and go to state 34
    OR              shift and go to state 35

  ! AND             [ reduce using rule 40 (nested_descriptions -> statement_property_identify statement_reserved_word SOME nested_descriptions .) ]
  ! OR              [ reduce using rule 40 (nested_descriptions -> statement_property_identify statement_reserved_word SOME nested_descriptions .) ]


state 81

    (45) closed_axiom_mandatory -> CLASS_IDENTIFIER COMMA closed_axiom_mandatory .

    Class           reduce using rule 45 (closed_axiom_mandatory -> CLASS_IDENTIFIER COMMA closed_axiom_mandatory .)
    $end            reduce using rule 45 (closed_axiom_mandatory -> CLASS_IDENTIFIER COMMA closed_axiom_mandatory .)


state 82

    (46) closed_axiom_mandatory -> statement_property_restriction COMMA closed_axiom_mandatory .

    Class           reduce using rule 46 (closed_axiom_mandatory -> statement_property_restriction COMMA closed_axiom_mandatory .)
    $end            reduce using rule 46 (closed_axiom_mandatory -> statement_property_restriction COMMA closed_axiom_mandatory .)


state 83

    (43) closed_axiom_mandatory -> CLASS_IDENTIFIER .
    (45) closed_axiom_mandatory -> CLASS_IDENTIFIER . COMMA closed_axiom_mandatory

    Class           reduce using rule 43 (closed_axiom_mandatory -> CLASS_IDENTIFIER .)
    $end            reduce using rule 43 (closed_axiom_mandatory -> CLASS_IDENTIFIER .)
    COMMA           shift and go to state 92


state 84

    (47) statement_property_restriction -> statement_property_identify . SOME CLASS_IDENTIFIER
    (48) statement_property_restriction -> statement_property_identify . ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN

    SOME            shift and go to state 93
    ONLY            shift and go to state 94


state 85

    (47) statement_property_restriction -> statement_property_identify SOME CLASS_IDENTIFIER .

    COMMA           reduce using rule 47 (statement_property_restriction -> statement_property_identify SOME CLASS_IDENTIFIER .)
    Class           reduce using rule 47 (statement_property_restriction -> statement_property_identify SOME CLASS_IDENTIFIER .)
    $end            reduce using rule 47 (statement_property_restriction -> statement_property_identify SOME CLASS_IDENTIFIER .)


state 86

    (48) statement_property_restriction -> statement_property_identify ONLY LEFT_PAREN . closed_axiom_restriction_combination RIGHT_PAREN
    (49) closed_axiom_restriction_combination -> . CLASS_IDENTIFIER
    (50) closed_axiom_restriction_combination -> . CLASS_IDENTIFIER OR closed_axiom_restriction_combination

    CLASS_IDENTIFIER shift and go to state 96

    closed_axiom_restriction_combination shift and go to state 95

state 87

    (28) statement_class_individuals_check -> IndividualNames COMMA . statement_class_individuals_check
    (27) statement_class_individuals_check -> . IndividualNames
    (28) statement_class_individuals_check -> . IndividualNames COMMA statement_class_individuals_check

    IndividualNames shift and go to state 70

    statement_class_individuals_check shift and go to state 97

state 88

    (24) statement_class_disjoin_check -> CLASS_IDENTIFIER COMMA statement_class_disjoin_check .

    Individuals     reduce using rule 24 (statement_class_disjoin_check -> CLASS_IDENTIFIER COMMA statement_class_disjoin_check .)
    Class           reduce using rule 24 (statement_class_disjoin_check -> CLASS_IDENTIFIER COMMA statement_class_disjoin_check .)
    $end            reduce using rule 24 (statement_class_disjoin_check -> CLASS_IDENTIFIER COMMA statement_class_disjoin_check .)


state 89

    (19) primitive_class_mandatory -> CLASS_IDENTIFIER .
    (20) primitive_class_mandatory -> CLASS_IDENTIFIER . COMMA primitive_class_mandatory

    DisjointClasses reduce using rule 19 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    Individuals     reduce using rule 19 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    Class           reduce using rule 19 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    $end            reduce using rule 19 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    COMMA           shift and go to state 98


state 90

    (16) primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory .

    DisjointClasses reduce using rule 16 (primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory .)
    Individuals     reduce using rule 16 (primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory .)
    Class           reduce using rule 16 (primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory .)
    $end            reduce using rule 16 (primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory .)


state 91

    (18) primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA . primitive_class_mandatory
    (15) primitive_class_mandatory -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (16) primitive_class_mandatory -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (17) primitive_class_mandatory -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (18) primitive_class_mandatory -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory
    (19) primitive_class_mandatory -> . CLASS_IDENTIFIER
    (20) primitive_class_mandatory -> . CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (12) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (13) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (14) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 89
    PROPERTY_IDENTIFIER_has shift and go to state 11
    PROPERTY_IDENTIFIER_is_Of shift and go to state 12
    PROPERTY_IDENTIFIER shift and go to state 13

    statement_property_identify    shift and go to state 10
    primitive_class_mandatory      shift and go to state 99

state 92

    (45) closed_axiom_mandatory -> CLASS_IDENTIFIER COMMA . closed_axiom_mandatory
    (43) closed_axiom_mandatory -> . CLASS_IDENTIFIER
    (44) closed_axiom_mandatory -> . statement_property_restriction
    (45) closed_axiom_mandatory -> . CLASS_IDENTIFIER COMMA closed_axiom_mandatory
    (46) closed_axiom_mandatory -> . statement_property_restriction COMMA closed_axiom_mandatory
    (47) statement_property_restriction -> . statement_property_identify SOME CLASS_IDENTIFIER
    (48) statement_property_restriction -> . statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN
    (12) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (13) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (14) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 83
    PROPERTY_IDENTIFIER_has shift and go to state 11
    PROPERTY_IDENTIFIER_is_Of shift and go to state 12
    PROPERTY_IDENTIFIER shift and go to state 13

    closed_axiom_mandatory         shift and go to state 81
    statement_property_restriction shift and go to state 44
    statement_property_identify    shift and go to state 84

state 93

    (47) statement_property_restriction -> statement_property_identify SOME . CLASS_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 85


state 94

    (48) statement_property_restriction -> statement_property_identify ONLY . LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN

    LEFT_PAREN      shift and go to state 86


state 95

    (48) statement_property_restriction -> statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 100


state 96

    (49) closed_axiom_restriction_combination -> CLASS_IDENTIFIER .
    (50) closed_axiom_restriction_combination -> CLASS_IDENTIFIER . OR closed_axiom_restriction_combination

    RIGHT_PAREN     reduce using rule 49 (closed_axiom_restriction_combination -> CLASS_IDENTIFIER .)
    OR              shift and go to state 101


state 97

    (28) statement_class_individuals_check -> IndividualNames COMMA statement_class_individuals_check .

    Class           reduce using rule 28 (statement_class_individuals_check -> IndividualNames COMMA statement_class_individuals_check .)
    $end            reduce using rule 28 (statement_class_individuals_check -> IndividualNames COMMA statement_class_individuals_check .)


state 98

    (20) primitive_class_mandatory -> CLASS_IDENTIFIER COMMA . primitive_class_mandatory
    (15) primitive_class_mandatory -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (16) primitive_class_mandatory -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (17) primitive_class_mandatory -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (18) primitive_class_mandatory -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory
    (19) primitive_class_mandatory -> . CLASS_IDENTIFIER
    (20) primitive_class_mandatory -> . CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (12) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (13) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (14) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 89
    PROPERTY_IDENTIFIER_has shift and go to state 11
    PROPERTY_IDENTIFIER_is_Of shift and go to state 12
    PROPERTY_IDENTIFIER shift and go to state 13

    primitive_class_mandatory      shift and go to state 43
    statement_property_identify    shift and go to state 10

state 99

    (18) primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory .

    DisjointClasses reduce using rule 18 (primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory .)
    Individuals     reduce using rule 18 (primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory .)
    Class           reduce using rule 18 (primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory .)
    $end            reduce using rule 18 (primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory .)


state 100

    (48) statement_property_restriction -> statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN .

    COMMA           reduce using rule 48 (statement_property_restriction -> statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN .)
    Class           reduce using rule 48 (statement_property_restriction -> statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN .)
    $end            reduce using rule 48 (statement_property_restriction -> statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN .)


state 101

    (50) closed_axiom_restriction_combination -> CLASS_IDENTIFIER OR . closed_axiom_restriction_combination
    (49) closed_axiom_restriction_combination -> . CLASS_IDENTIFIER
    (50) closed_axiom_restriction_combination -> . CLASS_IDENTIFIER OR closed_axiom_restriction_combination

    CLASS_IDENTIFIER shift and go to state 96

    closed_axiom_restriction_combination shift and go to state 102

state 102

    (50) closed_axiom_restriction_combination -> CLASS_IDENTIFIER OR closed_axiom_restriction_combination .

    RIGHT_PAREN     reduce using rule 50 (closed_axiom_restriction_combination -> CLASS_IDENTIFIER OR closed_axiom_restriction_combination .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for OR in state 14 resolved as shift
WARNING: shift/reduce conflict for AND in state 55 resolved as shift
WARNING: shift/reduce conflict for OR in state 55 resolved as shift
WARNING: shift/reduce conflict for AND in state 56 resolved as shift
WARNING: shift/reduce conflict for OR in state 56 resolved as shift
WARNING: shift/reduce conflict for AND in state 60 resolved as shift
WARNING: shift/reduce conflict for OR in state 60 resolved as shift
WARNING: shift/reduce conflict for CLASS_IDENTIFIER in state 67 resolved as shift
WARNING: shift/reduce conflict for AND in state 76 resolved as shift
WARNING: shift/reduce conflict for OR in state 76 resolved as shift
WARNING: shift/reduce conflict for AND in state 78 resolved as shift
WARNING: shift/reduce conflict for OR in state 78 resolved as shift
WARNING: shift/reduce conflict for AND in state 80 resolved as shift
WARNING: shift/reduce conflict for OR in state 80 resolved as shift
WARNING: reduce/reduce conflict in state 14 resolved using rule (nested_descriptions -> CLASS_IDENTIFIER)
WARNING: rejected rule (statement_covered_class_check -> CLASS_IDENTIFIER) in state 14
WARNING: reduce/reduce conflict in state 41 resolved using rule (primitive_class_mandatory -> CLASS_IDENTIFIER)
WARNING: rejected rule (closed_axiom_mandatory -> CLASS_IDENTIFIER) in state 41
WARNING: reduce/reduce conflict in state 61 resolved using rule (nested_descriptions -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER)
WARNING: rejected rule (nested_descriptions -> CLASS_IDENTIFIER) in state 61
WARNING: reduce/reduce conflict in state 75 resolved using rule (nested_descriptions -> statement_property_identify statement_reserved_word VALUE CLASS_IDENTIFIER)
WARNING: rejected rule (nested_descriptions -> CLASS_IDENTIFIER) in state 75
WARNING: reduce/reduce conflict in state 77 resolved using rule (nested_descriptions -> statement_property_identify statement_reserved_word ONLY CLASS_IDENTIFIER)
WARNING: rejected rule (nested_descriptions -> CLASS_IDENTIFIER) in state 77
WARNING: reduce/reduce conflict in state 79 resolved using rule (nested_descriptions -> statement_property_identify statement_reserved_word SOME CLASS_IDENTIFIER)
WARNING: rejected rule (nested_descriptions -> CLASS_IDENTIFIER) in state 79
