Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALL
    DIVIDE
    DisjointWith
    Literal
    MINUS
    NCName
    NMTOKEN
    NOT
    Name
    PLUS
    PlainLiteral
    THAT
    TIMES
    VALUE
    XMLLiteral
    anyURI
    base64Binary
    boolean
    byte
    dateTime
    dateTimeStamp
    decimal
    double
    float
    hexBinary
    int
    integer
    langString
    languague
    long
    negativeInteger
    nonNegativeInteger
    owl
    rational
    rdf
    rdfs
    real
    string
    xsd

Grammar

Rule 0     S' -> statement
Rule 1     statement -> Class CLASS_IDENTIFIER SubClassOf primitive_class_mandatory statement_class_disjoin statement_class_individuals
Rule 2     statement_reserved_word -> SOME
Rule 3     statement_reserved_word -> EXACTLY
Rule 4     statement_reserved_word -> MIN
Rule 5     statement_reserved_word -> MAX
Rule 6     statement_property_identify -> PROPERTY_IDENTIFIER_has
Rule 7     statement_property_identify -> PROPERTY_IDENTIFIER_is_Of
Rule 8     statement_property_identify -> PROPERTY_IDENTIFIER
Rule 9     primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER
Rule 10    primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory
Rule 11    primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
Rule 12    primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory
Rule 13    primitive_class_mandatory -> CLASS_IDENTIFIER
Rule 14    primitive_class_mandatory -> CLASS_IDENTIFIER COMMA primitive_class_mandatory
Rule 15    statement_class_disjoin -> empty
Rule 16    statement_class_disjoin -> DisjointClasses statement_class_disjoin_check
Rule 17    statement_class_disjoin_check -> CLASS_IDENTIFIER
Rule 18    statement_class_disjoin_check -> CLASS_IDENTIFIER COMMA statement_class_disjoin_check
Rule 19    statement_class_individuals -> empty
Rule 20    statement_class_individuals -> Individuals statement_class_individuals_check
Rule 21    statement_class_individuals_check -> IndividualNames
Rule 22    statement_class_individuals_check -> IndividualNames COMMA statement_class_individuals_check
Rule 23    statement -> Class CLASS_IDENTIFIER statement_defined_class_equivalent statement_class_individuals
Rule 24    statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN
Rule 25    statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent
Rule 26    statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN
Rule 27    statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent
Rule 28    statement_operator_symbol -> LESS_THAN
Rule 29    statement_operator_symbol -> GREATER_THAN
Rule 30    statement_operator_symbol -> EQUALS
Rule 31    statement_operator_symbol -> GREATER_THAN EQUALS
Rule 32    statement_operator_symbol -> LESS_THAN EQUALS
Rule 33    statement -> Class CLASS_IDENTIFIER EquivalentTo LEFT_CURLY_BRACKET statement_enumerated_class_check
Rule 34    statement_enumerated_class_check -> CLASS_IDENTIFIER RIGHT_CURLY_BRACKET
Rule 35    statement_enumerated_class_check -> CLASS_IDENTIFIER COMMA statement_enumerated_class_check
Rule 36    statement -> Class CLASS_IDENTIFIER EquivalentTo statement_covered_class_check
Rule 37    statement_covered_class_check -> CLASS_IDENTIFIER
Rule 38    statement_covered_class_check -> CLASS_IDENTIFIER OR statement_covered_class_check
Rule 39    empty -> <empty>

Terminals, with rules where they appear

ALL                  : 
AND                  : 24 25 26 27
CLASS_IDENTIFIER     : 1 9 10 13 14 17 18 23 24 24 25 25 26 27 33 34 35 36 37 38
COMMA                : 10 12 14 18 22 25 27 35
Class                : 1 23 33 36
DATA_TYPE            : 11 12 26 27
DIVIDE               : 
DisjointClasses      : 16
DisjointWith         : 
EQUALS               : 30 31 32
EXACTLY              : 3
EquivalentTo         : 24 25 26 27 33 36
GREATER_THAN         : 29 31
IndividualNames      : 21 22
Individuals          : 20
LEFT_BRACKET         : 26 27
LEFT_CURLY_BRACKET   : 33
LEFT_PAREN           : 24 25 26 27
LESS_THAN            : 28 32
Literal              : 
MAX                  : 5
MIN                  : 4
MINUS                : 
NAMESPACEID          : 11 12 26 27
NCName               : 
NMTOKEN              : 
NOT                  : 
NUMBER               : 26 27
Name                 : 
OR                   : 38
PLUS                 : 
PROPERTY_IDENTIFIER  : 8
PROPERTY_IDENTIFIER_has : 6
PROPERTY_IDENTIFIER_is_Of : 7
PlainLiteral         : 
RIGHT_BRACKET        : 26 27
RIGHT_CURLY_BRACKET  : 34
RIGHT_PAREN          : 24 25 26 27
SOME                 : 2
SubClassOf           : 1
THAT                 : 
TIMES                : 
VALUE                : 
XMLLiteral           : 
anyURI               : 
base64Binary         : 
boolean              : 
byte                 : 
dateTime             : 
dateTimeStamp        : 
decimal              : 
double               : 
error                : 
float                : 
hexBinary            : 
int                  : 
integer              : 
langString           : 
languague            : 
long                 : 
negativeInteger      : 
nonNegativeInteger   : 
owl                  : 
rational             : 
rdf                  : 
rdfs                 : 
real                 : 
string               : 
xsd                  : 

Nonterminals, with rules where they appear

empty                : 15 19
primitive_class_mandatory : 1 10 12 14
statement            : 0
statement_class_disjoin : 1
statement_class_disjoin_check : 16 18
statement_class_individuals : 1 23
statement_class_individuals_check : 20 22
statement_covered_class_check : 36 38
statement_defined_class_equivalent : 23 25 27
statement_enumerated_class_check : 33 35
statement_operator_symbol : 26 27
statement_property_identify : 9 10 11 12 24 25 26 27
statement_reserved_word : 9 10 11 12 24 25 26 27

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . Class CLASS_IDENTIFIER SubClassOf primitive_class_mandatory statement_class_disjoin statement_class_individuals
    (23) statement -> . Class CLASS_IDENTIFIER statement_defined_class_equivalent statement_class_individuals
    (33) statement -> . Class CLASS_IDENTIFIER EquivalentTo LEFT_CURLY_BRACKET statement_enumerated_class_check
    (36) statement -> . Class CLASS_IDENTIFIER EquivalentTo statement_covered_class_check

    Class           shift and go to state 2

    statement                      shift and go to state 1

state 1

    (0) S' -> statement .



state 2

    (1) statement -> Class . CLASS_IDENTIFIER SubClassOf primitive_class_mandatory statement_class_disjoin statement_class_individuals
    (23) statement -> Class . CLASS_IDENTIFIER statement_defined_class_equivalent statement_class_individuals
    (33) statement -> Class . CLASS_IDENTIFIER EquivalentTo LEFT_CURLY_BRACKET statement_enumerated_class_check
    (36) statement -> Class . CLASS_IDENTIFIER EquivalentTo statement_covered_class_check

    CLASS_IDENTIFIER shift and go to state 3


state 3

    (1) statement -> Class CLASS_IDENTIFIER . SubClassOf primitive_class_mandatory statement_class_disjoin statement_class_individuals
    (23) statement -> Class CLASS_IDENTIFIER . statement_defined_class_equivalent statement_class_individuals
    (33) statement -> Class CLASS_IDENTIFIER . EquivalentTo LEFT_CURLY_BRACKET statement_enumerated_class_check
    (36) statement -> Class CLASS_IDENTIFIER . EquivalentTo statement_covered_class_check
    (24) statement_defined_class_equivalent -> . EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN
    (25) statement_defined_class_equivalent -> . EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent
    (26) statement_defined_class_equivalent -> . EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN
    (27) statement_defined_class_equivalent -> . EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent

    SubClassOf      shift and go to state 4
    EquivalentTo    shift and go to state 6

    statement_defined_class_equivalent shift and go to state 5

state 4

    (1) statement -> Class CLASS_IDENTIFIER SubClassOf . primitive_class_mandatory statement_class_disjoin statement_class_individuals
    (9) primitive_class_mandatory -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (10) primitive_class_mandatory -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (11) primitive_class_mandatory -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (12) primitive_class_mandatory -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory
    (13) primitive_class_mandatory -> . CLASS_IDENTIFIER
    (14) primitive_class_mandatory -> . CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (6) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (7) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (8) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 7
    PROPERTY_IDENTIFIER_has shift and go to state 10
    PROPERTY_IDENTIFIER_is_Of shift and go to state 11
    PROPERTY_IDENTIFIER shift and go to state 12

    primitive_class_mandatory      shift and go to state 8
    statement_property_identify    shift and go to state 9

state 5

    (23) statement -> Class CLASS_IDENTIFIER statement_defined_class_equivalent . statement_class_individuals
    (19) statement_class_individuals -> . empty
    (20) statement_class_individuals -> . Individuals statement_class_individuals_check
    (39) empty -> .

    Individuals     shift and go to state 15
    $end            reduce using rule 39 (empty -> .)

    statement_class_individuals    shift and go to state 13
    empty                          shift and go to state 14

state 6

    (33) statement -> Class CLASS_IDENTIFIER EquivalentTo . LEFT_CURLY_BRACKET statement_enumerated_class_check
    (36) statement -> Class CLASS_IDENTIFIER EquivalentTo . statement_covered_class_check
    (24) statement_defined_class_equivalent -> EquivalentTo . CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN
    (25) statement_defined_class_equivalent -> EquivalentTo . CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent
    (26) statement_defined_class_equivalent -> EquivalentTo . CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN
    (27) statement_defined_class_equivalent -> EquivalentTo . CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent
    (37) statement_covered_class_check -> . CLASS_IDENTIFIER
    (38) statement_covered_class_check -> . CLASS_IDENTIFIER OR statement_covered_class_check

    LEFT_CURLY_BRACKET shift and go to state 17
    CLASS_IDENTIFIER shift and go to state 16

    statement_covered_class_check  shift and go to state 18

state 7

    (13) primitive_class_mandatory -> CLASS_IDENTIFIER .
    (14) primitive_class_mandatory -> CLASS_IDENTIFIER . COMMA primitive_class_mandatory

    DisjointClasses reduce using rule 13 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    Individuals     reduce using rule 13 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    $end            reduce using rule 13 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    COMMA           shift and go to state 19


state 8

    (1) statement -> Class CLASS_IDENTIFIER SubClassOf primitive_class_mandatory . statement_class_disjoin statement_class_individuals
    (15) statement_class_disjoin -> . empty
    (16) statement_class_disjoin -> . DisjointClasses statement_class_disjoin_check
    (39) empty -> .

    DisjointClasses shift and go to state 22
    Individuals     reduce using rule 39 (empty -> .)
    $end            reduce using rule 39 (empty -> .)

    statement_class_disjoin        shift and go to state 20
    empty                          shift and go to state 21

state 9

    (9) primitive_class_mandatory -> statement_property_identify . statement_reserved_word CLASS_IDENTIFIER
    (10) primitive_class_mandatory -> statement_property_identify . statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (11) primitive_class_mandatory -> statement_property_identify . statement_reserved_word NAMESPACEID DATA_TYPE
    (12) primitive_class_mandatory -> statement_property_identify . statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory
    (2) statement_reserved_word -> . SOME
    (3) statement_reserved_word -> . EXACTLY
    (4) statement_reserved_word -> . MIN
    (5) statement_reserved_word -> . MAX

    SOME            shift and go to state 24
    EXACTLY         shift and go to state 25
    MIN             shift and go to state 26
    MAX             shift and go to state 27

    statement_reserved_word        shift and go to state 23

state 10

    (6) statement_property_identify -> PROPERTY_IDENTIFIER_has .

    SOME            reduce using rule 6 (statement_property_identify -> PROPERTY_IDENTIFIER_has .)
    EXACTLY         reduce using rule 6 (statement_property_identify -> PROPERTY_IDENTIFIER_has .)
    MIN             reduce using rule 6 (statement_property_identify -> PROPERTY_IDENTIFIER_has .)
    MAX             reduce using rule 6 (statement_property_identify -> PROPERTY_IDENTIFIER_has .)


state 11

    (7) statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .

    SOME            reduce using rule 7 (statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .)
    EXACTLY         reduce using rule 7 (statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .)
    MIN             reduce using rule 7 (statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .)
    MAX             reduce using rule 7 (statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .)


state 12

    (8) statement_property_identify -> PROPERTY_IDENTIFIER .

    SOME            reduce using rule 8 (statement_property_identify -> PROPERTY_IDENTIFIER .)
    EXACTLY         reduce using rule 8 (statement_property_identify -> PROPERTY_IDENTIFIER .)
    MIN             reduce using rule 8 (statement_property_identify -> PROPERTY_IDENTIFIER .)
    MAX             reduce using rule 8 (statement_property_identify -> PROPERTY_IDENTIFIER .)


state 13

    (23) statement -> Class CLASS_IDENTIFIER statement_defined_class_equivalent statement_class_individuals .

    $end            reduce using rule 23 (statement -> Class CLASS_IDENTIFIER statement_defined_class_equivalent statement_class_individuals .)


state 14

    (19) statement_class_individuals -> empty .

    $end            reduce using rule 19 (statement_class_individuals -> empty .)


state 15

    (20) statement_class_individuals -> Individuals . statement_class_individuals_check
    (21) statement_class_individuals_check -> . IndividualNames
    (22) statement_class_individuals_check -> . IndividualNames COMMA statement_class_individuals_check

    IndividualNames shift and go to state 29

    statement_class_individuals_check shift and go to state 28

state 16

    (24) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER . AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN
    (25) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER . AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent
    (26) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER . AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN
    (27) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER . AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent
    (37) statement_covered_class_check -> CLASS_IDENTIFIER .
    (38) statement_covered_class_check -> CLASS_IDENTIFIER . OR statement_covered_class_check

    AND             shift and go to state 30
    $end            reduce using rule 37 (statement_covered_class_check -> CLASS_IDENTIFIER .)
    OR              shift and go to state 31


state 17

    (33) statement -> Class CLASS_IDENTIFIER EquivalentTo LEFT_CURLY_BRACKET . statement_enumerated_class_check
    (34) statement_enumerated_class_check -> . CLASS_IDENTIFIER RIGHT_CURLY_BRACKET
    (35) statement_enumerated_class_check -> . CLASS_IDENTIFIER COMMA statement_enumerated_class_check

    CLASS_IDENTIFIER shift and go to state 32

    statement_enumerated_class_check shift and go to state 33

state 18

    (36) statement -> Class CLASS_IDENTIFIER EquivalentTo statement_covered_class_check .

    $end            reduce using rule 36 (statement -> Class CLASS_IDENTIFIER EquivalentTo statement_covered_class_check .)


state 19

    (14) primitive_class_mandatory -> CLASS_IDENTIFIER COMMA . primitive_class_mandatory
    (9) primitive_class_mandatory -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (10) primitive_class_mandatory -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (11) primitive_class_mandatory -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (12) primitive_class_mandatory -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory
    (13) primitive_class_mandatory -> . CLASS_IDENTIFIER
    (14) primitive_class_mandatory -> . CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (6) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (7) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (8) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 7
    PROPERTY_IDENTIFIER_has shift and go to state 10
    PROPERTY_IDENTIFIER_is_Of shift and go to state 11
    PROPERTY_IDENTIFIER shift and go to state 12

    primitive_class_mandatory      shift and go to state 34
    statement_property_identify    shift and go to state 9

state 20

    (1) statement -> Class CLASS_IDENTIFIER SubClassOf primitive_class_mandatory statement_class_disjoin . statement_class_individuals
    (19) statement_class_individuals -> . empty
    (20) statement_class_individuals -> . Individuals statement_class_individuals_check
    (39) empty -> .

    Individuals     shift and go to state 15
    $end            reduce using rule 39 (empty -> .)

    statement_class_individuals    shift and go to state 35
    empty                          shift and go to state 14

state 21

    (15) statement_class_disjoin -> empty .

    Individuals     reduce using rule 15 (statement_class_disjoin -> empty .)
    $end            reduce using rule 15 (statement_class_disjoin -> empty .)


state 22

    (16) statement_class_disjoin -> DisjointClasses . statement_class_disjoin_check
    (17) statement_class_disjoin_check -> . CLASS_IDENTIFIER
    (18) statement_class_disjoin_check -> . CLASS_IDENTIFIER COMMA statement_class_disjoin_check

    CLASS_IDENTIFIER shift and go to state 37

    statement_class_disjoin_check  shift and go to state 36

state 23

    (9) primitive_class_mandatory -> statement_property_identify statement_reserved_word . CLASS_IDENTIFIER
    (10) primitive_class_mandatory -> statement_property_identify statement_reserved_word . CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (11) primitive_class_mandatory -> statement_property_identify statement_reserved_word . NAMESPACEID DATA_TYPE
    (12) primitive_class_mandatory -> statement_property_identify statement_reserved_word . NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory

    CLASS_IDENTIFIER shift and go to state 38
    NAMESPACEID     shift and go to state 39


state 24

    (2) statement_reserved_word -> SOME .

    CLASS_IDENTIFIER reduce using rule 2 (statement_reserved_word -> SOME .)
    NAMESPACEID     reduce using rule 2 (statement_reserved_word -> SOME .)


state 25

    (3) statement_reserved_word -> EXACTLY .

    CLASS_IDENTIFIER reduce using rule 3 (statement_reserved_word -> EXACTLY .)
    NAMESPACEID     reduce using rule 3 (statement_reserved_word -> EXACTLY .)


state 26

    (4) statement_reserved_word -> MIN .

    CLASS_IDENTIFIER reduce using rule 4 (statement_reserved_word -> MIN .)
    NAMESPACEID     reduce using rule 4 (statement_reserved_word -> MIN .)


state 27

    (5) statement_reserved_word -> MAX .

    CLASS_IDENTIFIER reduce using rule 5 (statement_reserved_word -> MAX .)
    NAMESPACEID     reduce using rule 5 (statement_reserved_word -> MAX .)


state 28

    (20) statement_class_individuals -> Individuals statement_class_individuals_check .

    $end            reduce using rule 20 (statement_class_individuals -> Individuals statement_class_individuals_check .)


state 29

    (21) statement_class_individuals_check -> IndividualNames .
    (22) statement_class_individuals_check -> IndividualNames . COMMA statement_class_individuals_check

    $end            reduce using rule 21 (statement_class_individuals_check -> IndividualNames .)
    COMMA           shift and go to state 40


state 30

    (24) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND . LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN
    (25) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND . LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent
    (26) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND . LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN
    (27) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND . LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent

    LEFT_PAREN      shift and go to state 41


state 31

    (38) statement_covered_class_check -> CLASS_IDENTIFIER OR . statement_covered_class_check
    (37) statement_covered_class_check -> . CLASS_IDENTIFIER
    (38) statement_covered_class_check -> . CLASS_IDENTIFIER OR statement_covered_class_check

    CLASS_IDENTIFIER shift and go to state 42

    statement_covered_class_check  shift and go to state 43

state 32

    (34) statement_enumerated_class_check -> CLASS_IDENTIFIER . RIGHT_CURLY_BRACKET
    (35) statement_enumerated_class_check -> CLASS_IDENTIFIER . COMMA statement_enumerated_class_check

    RIGHT_CURLY_BRACKET shift and go to state 44
    COMMA           shift and go to state 45


state 33

    (33) statement -> Class CLASS_IDENTIFIER EquivalentTo LEFT_CURLY_BRACKET statement_enumerated_class_check .

    $end            reduce using rule 33 (statement -> Class CLASS_IDENTIFIER EquivalentTo LEFT_CURLY_BRACKET statement_enumerated_class_check .)


state 34

    (14) primitive_class_mandatory -> CLASS_IDENTIFIER COMMA primitive_class_mandatory .

    DisjointClasses reduce using rule 14 (primitive_class_mandatory -> CLASS_IDENTIFIER COMMA primitive_class_mandatory .)
    Individuals     reduce using rule 14 (primitive_class_mandatory -> CLASS_IDENTIFIER COMMA primitive_class_mandatory .)
    $end            reduce using rule 14 (primitive_class_mandatory -> CLASS_IDENTIFIER COMMA primitive_class_mandatory .)


state 35

    (1) statement -> Class CLASS_IDENTIFIER SubClassOf primitive_class_mandatory statement_class_disjoin statement_class_individuals .

    $end            reduce using rule 1 (statement -> Class CLASS_IDENTIFIER SubClassOf primitive_class_mandatory statement_class_disjoin statement_class_individuals .)


state 36

    (16) statement_class_disjoin -> DisjointClasses statement_class_disjoin_check .

    Individuals     reduce using rule 16 (statement_class_disjoin -> DisjointClasses statement_class_disjoin_check .)
    $end            reduce using rule 16 (statement_class_disjoin -> DisjointClasses statement_class_disjoin_check .)


state 37

    (17) statement_class_disjoin_check -> CLASS_IDENTIFIER .
    (18) statement_class_disjoin_check -> CLASS_IDENTIFIER . COMMA statement_class_disjoin_check

    Individuals     reduce using rule 17 (statement_class_disjoin_check -> CLASS_IDENTIFIER .)
    $end            reduce using rule 17 (statement_class_disjoin_check -> CLASS_IDENTIFIER .)
    COMMA           shift and go to state 46


state 38

    (9) primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .
    (10) primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER . COMMA primitive_class_mandatory

    DisjointClasses reduce using rule 9 (primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    Individuals     reduce using rule 9 (primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    $end            reduce using rule 9 (primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    COMMA           shift and go to state 47


state 39

    (11) primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID . DATA_TYPE
    (12) primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID . DATA_TYPE COMMA primitive_class_mandatory

    DATA_TYPE       shift and go to state 48


state 40

    (22) statement_class_individuals_check -> IndividualNames COMMA . statement_class_individuals_check
    (21) statement_class_individuals_check -> . IndividualNames
    (22) statement_class_individuals_check -> . IndividualNames COMMA statement_class_individuals_check

    IndividualNames shift and go to state 29

    statement_class_individuals_check shift and go to state 49

state 41

    (24) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN . statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN
    (25) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN . statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent
    (26) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN
    (27) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent
    (6) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (7) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (8) statement_property_identify -> . PROPERTY_IDENTIFIER

    PROPERTY_IDENTIFIER_has shift and go to state 10
    PROPERTY_IDENTIFIER_is_Of shift and go to state 11
    PROPERTY_IDENTIFIER shift and go to state 12

    statement_property_identify    shift and go to state 50

state 42

    (37) statement_covered_class_check -> CLASS_IDENTIFIER .
    (38) statement_covered_class_check -> CLASS_IDENTIFIER . OR statement_covered_class_check

    $end            reduce using rule 37 (statement_covered_class_check -> CLASS_IDENTIFIER .)
    OR              shift and go to state 31


state 43

    (38) statement_covered_class_check -> CLASS_IDENTIFIER OR statement_covered_class_check .

    $end            reduce using rule 38 (statement_covered_class_check -> CLASS_IDENTIFIER OR statement_covered_class_check .)


state 44

    (34) statement_enumerated_class_check -> CLASS_IDENTIFIER RIGHT_CURLY_BRACKET .

    $end            reduce using rule 34 (statement_enumerated_class_check -> CLASS_IDENTIFIER RIGHT_CURLY_BRACKET .)


state 45

    (35) statement_enumerated_class_check -> CLASS_IDENTIFIER COMMA . statement_enumerated_class_check
    (34) statement_enumerated_class_check -> . CLASS_IDENTIFIER RIGHT_CURLY_BRACKET
    (35) statement_enumerated_class_check -> . CLASS_IDENTIFIER COMMA statement_enumerated_class_check

    CLASS_IDENTIFIER shift and go to state 32

    statement_enumerated_class_check shift and go to state 51

state 46

    (18) statement_class_disjoin_check -> CLASS_IDENTIFIER COMMA . statement_class_disjoin_check
    (17) statement_class_disjoin_check -> . CLASS_IDENTIFIER
    (18) statement_class_disjoin_check -> . CLASS_IDENTIFIER COMMA statement_class_disjoin_check

    CLASS_IDENTIFIER shift and go to state 37

    statement_class_disjoin_check  shift and go to state 52

state 47

    (10) primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA . primitive_class_mandatory
    (9) primitive_class_mandatory -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (10) primitive_class_mandatory -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (11) primitive_class_mandatory -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (12) primitive_class_mandatory -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory
    (13) primitive_class_mandatory -> . CLASS_IDENTIFIER
    (14) primitive_class_mandatory -> . CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (6) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (7) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (8) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 7
    PROPERTY_IDENTIFIER_has shift and go to state 10
    PROPERTY_IDENTIFIER_is_Of shift and go to state 11
    PROPERTY_IDENTIFIER shift and go to state 12

    statement_property_identify    shift and go to state 9
    primitive_class_mandatory      shift and go to state 53

state 48

    (11) primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE .
    (12) primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE . COMMA primitive_class_mandatory

    DisjointClasses reduce using rule 11 (primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE .)
    Individuals     reduce using rule 11 (primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE .)
    $end            reduce using rule 11 (primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE .)
    COMMA           shift and go to state 54


state 49

    (22) statement_class_individuals_check -> IndividualNames COMMA statement_class_individuals_check .

    $end            reduce using rule 22 (statement_class_individuals_check -> IndividualNames COMMA statement_class_individuals_check .)


state 50

    (24) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify . statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN
    (25) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify . statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent
    (26) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify . statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN
    (27) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify . statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent
    (2) statement_reserved_word -> . SOME
    (3) statement_reserved_word -> . EXACTLY
    (4) statement_reserved_word -> . MIN
    (5) statement_reserved_word -> . MAX

    SOME            shift and go to state 24
    EXACTLY         shift and go to state 25
    MIN             shift and go to state 26
    MAX             shift and go to state 27

    statement_reserved_word        shift and go to state 55

state 51

    (35) statement_enumerated_class_check -> CLASS_IDENTIFIER COMMA statement_enumerated_class_check .

    $end            reduce using rule 35 (statement_enumerated_class_check -> CLASS_IDENTIFIER COMMA statement_enumerated_class_check .)


state 52

    (18) statement_class_disjoin_check -> CLASS_IDENTIFIER COMMA statement_class_disjoin_check .

    Individuals     reduce using rule 18 (statement_class_disjoin_check -> CLASS_IDENTIFIER COMMA statement_class_disjoin_check .)
    $end            reduce using rule 18 (statement_class_disjoin_check -> CLASS_IDENTIFIER COMMA statement_class_disjoin_check .)


state 53

    (10) primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory .

    DisjointClasses reduce using rule 10 (primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory .)
    Individuals     reduce using rule 10 (primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory .)
    $end            reduce using rule 10 (primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory .)


state 54

    (12) primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA . primitive_class_mandatory
    (9) primitive_class_mandatory -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (10) primitive_class_mandatory -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (11) primitive_class_mandatory -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (12) primitive_class_mandatory -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory
    (13) primitive_class_mandatory -> . CLASS_IDENTIFIER
    (14) primitive_class_mandatory -> . CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (6) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (7) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (8) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 7
    PROPERTY_IDENTIFIER_has shift and go to state 10
    PROPERTY_IDENTIFIER_is_Of shift and go to state 11
    PROPERTY_IDENTIFIER shift and go to state 12

    statement_property_identify    shift and go to state 9
    primitive_class_mandatory      shift and go to state 56

state 55

    (24) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word . CLASS_IDENTIFIER RIGHT_PAREN
    (25) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word . CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent
    (26) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word . NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN
    (27) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word . NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent

    CLASS_IDENTIFIER shift and go to state 57
    NAMESPACEID     shift and go to state 58


state 56

    (12) primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory .

    DisjointClasses reduce using rule 12 (primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory .)
    Individuals     reduce using rule 12 (primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory .)
    $end            reduce using rule 12 (primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory .)


state 57

    (24) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER . RIGHT_PAREN
    (25) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER . RIGHT_PAREN COMMA statement_defined_class_equivalent

    RIGHT_PAREN     shift and go to state 59


state 58

    (26) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID . DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN
    (27) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID . DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent

    DATA_TYPE       shift and go to state 60


state 59

    (24) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN .
    (25) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN . COMMA statement_defined_class_equivalent

    Individuals     reduce using rule 24 (statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN .)
    $end            reduce using rule 24 (statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN .)
    COMMA           shift and go to state 61


state 60

    (26) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE . LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN
    (27) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE . LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent

    LEFT_BRACKET    shift and go to state 62


state 61

    (25) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA . statement_defined_class_equivalent
    (24) statement_defined_class_equivalent -> . EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN
    (25) statement_defined_class_equivalent -> . EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent
    (26) statement_defined_class_equivalent -> . EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN
    (27) statement_defined_class_equivalent -> . EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent

    EquivalentTo    shift and go to state 63

    statement_defined_class_equivalent shift and go to state 64

state 62

    (26) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET . statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN
    (27) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET . statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent
    (28) statement_operator_symbol -> . LESS_THAN
    (29) statement_operator_symbol -> . GREATER_THAN
    (30) statement_operator_symbol -> . EQUALS
    (31) statement_operator_symbol -> . GREATER_THAN EQUALS
    (32) statement_operator_symbol -> . LESS_THAN EQUALS

    LESS_THAN       shift and go to state 66
    GREATER_THAN    shift and go to state 67
    EQUALS          shift and go to state 68

    statement_operator_symbol      shift and go to state 65

state 63

    (24) statement_defined_class_equivalent -> EquivalentTo . CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN
    (25) statement_defined_class_equivalent -> EquivalentTo . CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent
    (26) statement_defined_class_equivalent -> EquivalentTo . CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN
    (27) statement_defined_class_equivalent -> EquivalentTo . CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent

    CLASS_IDENTIFIER shift and go to state 69


state 64

    (25) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent .

    Individuals     reduce using rule 25 (statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent .)
    $end            reduce using rule 25 (statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent .)


state 65

    (26) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol . NUMBER RIGHT_BRACKET RIGHT_PAREN
    (27) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol . NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent

    NUMBER          shift and go to state 70


state 66

    (28) statement_operator_symbol -> LESS_THAN .
    (32) statement_operator_symbol -> LESS_THAN . EQUALS

    NUMBER          reduce using rule 28 (statement_operator_symbol -> LESS_THAN .)
    EQUALS          shift and go to state 71


state 67

    (29) statement_operator_symbol -> GREATER_THAN .
    (31) statement_operator_symbol -> GREATER_THAN . EQUALS

    NUMBER          reduce using rule 29 (statement_operator_symbol -> GREATER_THAN .)
    EQUALS          shift and go to state 72


state 68

    (30) statement_operator_symbol -> EQUALS .

    NUMBER          reduce using rule 30 (statement_operator_symbol -> EQUALS .)


state 69

    (24) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER . AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN
    (25) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER . AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent
    (26) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER . AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN
    (27) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER . AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent

    AND             shift and go to state 30


state 70

    (26) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER . RIGHT_BRACKET RIGHT_PAREN
    (27) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER . RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent

    RIGHT_BRACKET   shift and go to state 73


state 71

    (32) statement_operator_symbol -> LESS_THAN EQUALS .

    NUMBER          reduce using rule 32 (statement_operator_symbol -> LESS_THAN EQUALS .)


state 72

    (31) statement_operator_symbol -> GREATER_THAN EQUALS .

    NUMBER          reduce using rule 31 (statement_operator_symbol -> GREATER_THAN EQUALS .)


state 73

    (26) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET . RIGHT_PAREN
    (27) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET . RIGHT_PAREN COMMA statement_defined_class_equivalent

    RIGHT_PAREN     shift and go to state 74


state 74

    (26) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN .
    (27) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN . COMMA statement_defined_class_equivalent

    Individuals     reduce using rule 26 (statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN .)
    $end            reduce using rule 26 (statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN .)
    COMMA           shift and go to state 75


state 75

    (27) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA . statement_defined_class_equivalent
    (24) statement_defined_class_equivalent -> . EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN
    (25) statement_defined_class_equivalent -> . EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent
    (26) statement_defined_class_equivalent -> . EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN
    (27) statement_defined_class_equivalent -> . EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent

    EquivalentTo    shift and go to state 63

    statement_defined_class_equivalent shift and go to state 76

state 76

    (27) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent .

    Individuals     reduce using rule 27 (statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent .)
    $end            reduce using rule 27 (statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent .)

