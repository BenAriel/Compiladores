Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALL
    Class
    DATA_TYPE
    DIVIDE
    DisjointClasses
    DisjointWith
    EXACTLY
    EquivalentTo
    IndividualNames
    Individuals
    LPAREN
    Literal
    MAX
    MIN
    MINUS
    NAMESPACEID
    NCName
    NMTOKEN
    NOT
    NUMBER
    Name
    OR
    PLUS
    PROPERTY_IDENTIFIER_has
    PROPERTY_IDENTIFIER_is_Of
    PlainLiteral
    RPAREN
    SOME
    THAT
    TIMES
    VALUE
    XMLLiteral
    anyURI
    base64Binary
    boolean
    byte
    dateTime
    dateTimeStamp
    decimal
    double
    float
    hexBinary
    int
    integer
    langString
    languague
    long
    negativeInteger
    nonNegativeInteger
    owl
    rational
    rdf
    rdfs
    real
    string
    xsd

Grammar

Rule 0     S' -> statement
Rule 1     statement -> PROPERTY_IDENTIFIER CLASS_IDENTIFIER
Rule 2     statement -> SubClassOf PROPERTY_IDENTIFIER CLASS_IDENTIFIER
Rule 3     statement -> CLASS_IDENTIFIER AND CLASS_IDENTIFIER
Rule 4     statement -> CLASS_IDENTIFIER SpecialCharacters CLASS_IDENTIFIER

Terminals, with rules where they appear

ALL                  : 
AND                  : 3
CLASS_IDENTIFIER     : 1 2 3 3 4 4
Class                : 
DATA_TYPE            : 
DIVIDE               : 
DisjointClasses      : 
DisjointWith         : 
EXACTLY              : 
EquivalentTo         : 
IndividualNames      : 
Individuals          : 
LPAREN               : 
Literal              : 
MAX                  : 
MIN                  : 
MINUS                : 
NAMESPACEID          : 
NCName               : 
NMTOKEN              : 
NOT                  : 
NUMBER               : 
Name                 : 
OR                   : 
PLUS                 : 
PROPERTY_IDENTIFIER  : 1 2
PROPERTY_IDENTIFIER_has : 
PROPERTY_IDENTIFIER_is_Of : 
PlainLiteral         : 
RPAREN               : 
SOME                 : 
SpecialCharacters    : 4
SubClassOf           : 2
THAT                 : 
TIMES                : 
VALUE                : 
XMLLiteral           : 
anyURI               : 
base64Binary         : 
boolean              : 
byte                 : 
dateTime             : 
dateTimeStamp        : 
decimal              : 
double               : 
error                : 
float                : 
hexBinary            : 
int                  : 
integer              : 
langString           : 
languague            : 
long                 : 
negativeInteger      : 
nonNegativeInteger   : 
owl                  : 
rational             : 
rdf                  : 
rdfs                 : 
real                 : 
string               : 
xsd                  : 

Nonterminals, with rules where they appear

statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . PROPERTY_IDENTIFIER CLASS_IDENTIFIER
    (2) statement -> . SubClassOf PROPERTY_IDENTIFIER CLASS_IDENTIFIER
    (3) statement -> . CLASS_IDENTIFIER AND CLASS_IDENTIFIER
    (4) statement -> . CLASS_IDENTIFIER SpecialCharacters CLASS_IDENTIFIER

    PROPERTY_IDENTIFIER shift and go to state 2
    SubClassOf      shift and go to state 4
    CLASS_IDENTIFIER shift and go to state 3

    statement                      shift and go to state 1

state 1

    (0) S' -> statement .



state 2

    (1) statement -> PROPERTY_IDENTIFIER . CLASS_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 5


state 3

    (3) statement -> CLASS_IDENTIFIER . AND CLASS_IDENTIFIER
    (4) statement -> CLASS_IDENTIFIER . SpecialCharacters CLASS_IDENTIFIER

    AND             shift and go to state 6
    SpecialCharacters shift and go to state 7


state 4

    (2) statement -> SubClassOf . PROPERTY_IDENTIFIER CLASS_IDENTIFIER

    PROPERTY_IDENTIFIER shift and go to state 8


state 5

    (1) statement -> PROPERTY_IDENTIFIER CLASS_IDENTIFIER .

    $end            reduce using rule 1 (statement -> PROPERTY_IDENTIFIER CLASS_IDENTIFIER .)


state 6

    (3) statement -> CLASS_IDENTIFIER AND . CLASS_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 9


state 7

    (4) statement -> CLASS_IDENTIFIER SpecialCharacters . CLASS_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 10


state 8

    (2) statement -> SubClassOf PROPERTY_IDENTIFIER . CLASS_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 11


state 9

    (3) statement -> CLASS_IDENTIFIER AND CLASS_IDENTIFIER .

    $end            reduce using rule 3 (statement -> CLASS_IDENTIFIER AND CLASS_IDENTIFIER .)


state 10

    (4) statement -> CLASS_IDENTIFIER SpecialCharacters CLASS_IDENTIFIER .

    $end            reduce using rule 4 (statement -> CLASS_IDENTIFIER SpecialCharacters CLASS_IDENTIFIER .)


state 11

    (2) statement -> SubClassOf PROPERTY_IDENTIFIER CLASS_IDENTIFIER .

    $end            reduce using rule 2 (statement -> SubClassOf PROPERTY_IDENTIFIER CLASS_IDENTIFIER .)

