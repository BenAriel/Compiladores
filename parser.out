Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALL
    DIVIDE
    DisjointWith
    Literal
    MINUS
    NCName
    NMTOKEN
    NOT
    Name
    PLUS
    PlainLiteral
    THAT
    TIMES
    VALUE
    XMLLiteral
    anyURI
    base64Binary
    boolean
    byte
    dateTime
    dateTimeStamp
    decimal
    double
    float
    hexBinary
    int
    integer
    langString
    languague
    long
    negativeInteger
    nonNegativeInteger
    owl
    rational
    rdf
    rdfs
    real
    string
    xsd

Grammar

Rule 0     S' -> statements
Rule 1     statements -> statement
Rule 2     statements -> statement statements
Rule 3     statement -> Class CLASS_IDENTIFIER SubClassOf primitive_class_mandatory statement_class_disjoin statement_class_individuals
Rule 4     statement_reserved_word -> SOME
Rule 5     statement_reserved_word -> EXACTLY
Rule 6     statement_reserved_word -> MIN
Rule 7     statement_reserved_word -> MAX
Rule 8     statement_property_identify -> PROPERTY_IDENTIFIER_has
Rule 9     statement_property_identify -> PROPERTY_IDENTIFIER_is_Of
Rule 10    statement_property_identify -> PROPERTY_IDENTIFIER
Rule 11    primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER
Rule 12    primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory
Rule 13    primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
Rule 14    primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory
Rule 15    primitive_class_mandatory -> CLASS_IDENTIFIER
Rule 16    primitive_class_mandatory -> CLASS_IDENTIFIER COMMA primitive_class_mandatory
Rule 17    statement_class_disjoin -> empty
Rule 18    statement_class_disjoin -> DisjointClasses statement_class_disjoin_check
Rule 19    statement_class_disjoin_check -> CLASS_IDENTIFIER
Rule 20    statement_class_disjoin_check -> CLASS_IDENTIFIER COMMA statement_class_disjoin_check
Rule 21    statement_class_individuals -> empty
Rule 22    statement_class_individuals -> Individuals statement_class_individuals_check
Rule 23    statement_class_individuals_check -> IndividualNames
Rule 24    statement_class_individuals_check -> IndividualNames COMMA statement_class_individuals_check
Rule 25    statement -> Class CLASS_IDENTIFIER statement_defined_class_equivalent statement_class_individuals
Rule 26    statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN
Rule 27    statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent
Rule 28    statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN
Rule 29    statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent
Rule 30    statement_operator_symbol -> LESS_THAN
Rule 31    statement_operator_symbol -> GREATER_THAN
Rule 32    statement_operator_symbol -> EQUALS
Rule 33    statement_operator_symbol -> GREATER_THAN EQUALS
Rule 34    statement_operator_symbol -> LESS_THAN EQUALS
Rule 35    statement -> Class CLASS_IDENTIFIER SubClassOf CLASS_IDENTIFIER COMMA closed_axiom_mandatory
Rule 36    closed_axiom_mandatory -> CLASS_IDENTIFIER
Rule 37    closed_axiom_mandatory -> statement_property_restriction
Rule 38    closed_axiom_mandatory -> CLASS_IDENTIFIER COMMA closed_axiom_mandatory
Rule 39    closed_axiom_mandatory -> statement_property_restriction COMMA closed_axiom_mandatory
Rule 40    statement_property_restriction -> statement_property_identify SOME CLASS_IDENTIFIER
Rule 41    statement_property_restriction -> statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN
Rule 42    closed_axiom_restriction_combination -> CLASS_IDENTIFIER
Rule 43    closed_axiom_restriction_combination -> CLASS_IDENTIFIER OR closed_axiom_restriction_combination
Rule 44    statement -> Class CLASS_IDENTIFIER EquivalentTo nested_descriptions
Rule 45    nested_descriptions -> CLASS_IDENTIFIER
Rule 46    nested_descriptions -> LEFT_PAREN nested_descriptions RIGHT_PAREN
Rule 47    nested_descriptions -> nested_descriptions AND nested_descriptions
Rule 48    nested_descriptions -> nested_descriptions OR nested_descriptions
Rule 49    nested_descriptions -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER
Rule 50    nested_descriptions -> statement_property_identify statement_reserved_word LEFT_PAREN nested_descriptions RIGHT_PAREN
Rule 51    statement -> Class CLASS_IDENTIFIER EquivalentTo LEFT_CURLY_BRACKET statement_enumerated_class_check
Rule 52    statement_enumerated_class_check -> CLASS_IDENTIFIER RIGHT_CURLY_BRACKET
Rule 53    statement_enumerated_class_check -> CLASS_IDENTIFIER COMMA statement_enumerated_class_check
Rule 54    statement -> Class CLASS_IDENTIFIER EquivalentTo statement_covered_class_check
Rule 55    statement_covered_class_check -> CLASS_IDENTIFIER
Rule 56    statement_covered_class_check -> CLASS_IDENTIFIER OR statement_covered_class_check
Rule 57    empty -> <empty>

Terminals, with rules where they appear

ALL                  : 
AND                  : 26 27 28 29 47
CLASS_IDENTIFIER     : 3 11 12 15 16 19 20 25 26 26 27 27 28 29 35 35 36 38 40 42 43 44 45 49 51 52 53 54 55 56
COMMA                : 12 14 16 20 24 27 29 35 38 39 53
Class                : 3 25 35 44 51 54
DATA_TYPE            : 13 14 28 29
DIVIDE               : 
DisjointClasses      : 18
DisjointWith         : 
EQUALS               : 32 33 34
EXACTLY              : 5
EquivalentTo         : 26 27 28 29 44 51 54
GREATER_THAN         : 31 33
IndividualNames      : 23 24
Individuals          : 22
LEFT_BRACKET         : 28 29
LEFT_CURLY_BRACKET   : 51
LEFT_PAREN           : 26 27 28 29 41 46 50
LESS_THAN            : 30 34
Literal              : 
MAX                  : 7
MIN                  : 6
MINUS                : 
NAMESPACEID          : 13 14 28 29
NCName               : 
NMTOKEN              : 
NOT                  : 
NUMBER               : 28 29
Name                 : 
ONLY                 : 41
OR                   : 43 48 56
PLUS                 : 
PROPERTY_IDENTIFIER  : 10
PROPERTY_IDENTIFIER_has : 8
PROPERTY_IDENTIFIER_is_Of : 9
PlainLiteral         : 
RIGHT_BRACKET        : 28 29
RIGHT_CURLY_BRACKET  : 52
RIGHT_PAREN          : 26 27 28 29 41 46 50
SOME                 : 4 40
SubClassOf           : 3 35
THAT                 : 
TIMES                : 
VALUE                : 
XMLLiteral           : 
anyURI               : 
base64Binary         : 
boolean              : 
byte                 : 
dateTime             : 
dateTimeStamp        : 
decimal              : 
double               : 
error                : 
float                : 
hexBinary            : 
int                  : 
integer              : 
langString           : 
languague            : 
long                 : 
negativeInteger      : 
nonNegativeInteger   : 
owl                  : 
rational             : 
rdf                  : 
rdfs                 : 
real                 : 
string               : 
xsd                  : 

Nonterminals, with rules where they appear

closed_axiom_mandatory : 35 38 39
closed_axiom_restriction_combination : 41 43
empty                : 17 21
nested_descriptions  : 44 46 47 47 48 48 50
primitive_class_mandatory : 3 12 14 16
statement            : 1 2
statement_class_disjoin : 3
statement_class_disjoin_check : 18 20
statement_class_individuals : 3 25
statement_class_individuals_check : 22 24
statement_covered_class_check : 54 56
statement_defined_class_equivalent : 25 27 29
statement_enumerated_class_check : 51 53
statement_operator_symbol : 28 29
statement_property_identify : 11 12 13 14 26 27 28 29 40 41 49 50
statement_property_restriction : 37 39
statement_reserved_word : 11 12 13 14 26 27 28 29 49 50
statements           : 2 0

Parsing method: LALR

state 0

    (0) S' -> . statements
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statement -> . Class CLASS_IDENTIFIER SubClassOf primitive_class_mandatory statement_class_disjoin statement_class_individuals
    (25) statement -> . Class CLASS_IDENTIFIER statement_defined_class_equivalent statement_class_individuals
    (35) statement -> . Class CLASS_IDENTIFIER SubClassOf CLASS_IDENTIFIER COMMA closed_axiom_mandatory
    (44) statement -> . Class CLASS_IDENTIFIER EquivalentTo nested_descriptions
    (51) statement -> . Class CLASS_IDENTIFIER EquivalentTo LEFT_CURLY_BRACKET statement_enumerated_class_check
    (54) statement -> . Class CLASS_IDENTIFIER EquivalentTo statement_covered_class_check

    Class           shift and go to state 3

    statements                     shift and go to state 1
    statement                      shift and go to state 2

state 1

    (0) S' -> statements .



state 2

    (1) statements -> statement .
    (2) statements -> statement . statements
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statement -> . Class CLASS_IDENTIFIER SubClassOf primitive_class_mandatory statement_class_disjoin statement_class_individuals
    (25) statement -> . Class CLASS_IDENTIFIER statement_defined_class_equivalent statement_class_individuals
    (35) statement -> . Class CLASS_IDENTIFIER SubClassOf CLASS_IDENTIFIER COMMA closed_axiom_mandatory
    (44) statement -> . Class CLASS_IDENTIFIER EquivalentTo nested_descriptions
    (51) statement -> . Class CLASS_IDENTIFIER EquivalentTo LEFT_CURLY_BRACKET statement_enumerated_class_check
    (54) statement -> . Class CLASS_IDENTIFIER EquivalentTo statement_covered_class_check

    $end            reduce using rule 1 (statements -> statement .)
    Class           shift and go to state 3

    statement                      shift and go to state 2
    statements                     shift and go to state 4

state 3

    (3) statement -> Class . CLASS_IDENTIFIER SubClassOf primitive_class_mandatory statement_class_disjoin statement_class_individuals
    (25) statement -> Class . CLASS_IDENTIFIER statement_defined_class_equivalent statement_class_individuals
    (35) statement -> Class . CLASS_IDENTIFIER SubClassOf CLASS_IDENTIFIER COMMA closed_axiom_mandatory
    (44) statement -> Class . CLASS_IDENTIFIER EquivalentTo nested_descriptions
    (51) statement -> Class . CLASS_IDENTIFIER EquivalentTo LEFT_CURLY_BRACKET statement_enumerated_class_check
    (54) statement -> Class . CLASS_IDENTIFIER EquivalentTo statement_covered_class_check

    CLASS_IDENTIFIER shift and go to state 5


state 4

    (2) statements -> statement statements .

    $end            reduce using rule 2 (statements -> statement statements .)


state 5

    (3) statement -> Class CLASS_IDENTIFIER . SubClassOf primitive_class_mandatory statement_class_disjoin statement_class_individuals
    (25) statement -> Class CLASS_IDENTIFIER . statement_defined_class_equivalent statement_class_individuals
    (35) statement -> Class CLASS_IDENTIFIER . SubClassOf CLASS_IDENTIFIER COMMA closed_axiom_mandatory
    (44) statement -> Class CLASS_IDENTIFIER . EquivalentTo nested_descriptions
    (51) statement -> Class CLASS_IDENTIFIER . EquivalentTo LEFT_CURLY_BRACKET statement_enumerated_class_check
    (54) statement -> Class CLASS_IDENTIFIER . EquivalentTo statement_covered_class_check
    (26) statement_defined_class_equivalent -> . EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN
    (27) statement_defined_class_equivalent -> . EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent
    (28) statement_defined_class_equivalent -> . EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN
    (29) statement_defined_class_equivalent -> . EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent

    SubClassOf      shift and go to state 6
    EquivalentTo    shift and go to state 8

    statement_defined_class_equivalent shift and go to state 7

state 6

    (3) statement -> Class CLASS_IDENTIFIER SubClassOf . primitive_class_mandatory statement_class_disjoin statement_class_individuals
    (35) statement -> Class CLASS_IDENTIFIER SubClassOf . CLASS_IDENTIFIER COMMA closed_axiom_mandatory
    (11) primitive_class_mandatory -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (12) primitive_class_mandatory -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (13) primitive_class_mandatory -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (14) primitive_class_mandatory -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory
    (15) primitive_class_mandatory -> . CLASS_IDENTIFIER
    (16) primitive_class_mandatory -> . CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (8) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (9) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (10) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 9
    PROPERTY_IDENTIFIER_has shift and go to state 12
    PROPERTY_IDENTIFIER_is_Of shift and go to state 13
    PROPERTY_IDENTIFIER shift and go to state 14

    primitive_class_mandatory      shift and go to state 10
    statement_property_identify    shift and go to state 11

state 7

    (25) statement -> Class CLASS_IDENTIFIER statement_defined_class_equivalent . statement_class_individuals
    (21) statement_class_individuals -> . empty
    (22) statement_class_individuals -> . Individuals statement_class_individuals_check
    (57) empty -> .

    Individuals     shift and go to state 17
    Class           reduce using rule 57 (empty -> .)
    $end            reduce using rule 57 (empty -> .)

    statement_class_individuals    shift and go to state 15
    empty                          shift and go to state 16

state 8

    (44) statement -> Class CLASS_IDENTIFIER EquivalentTo . nested_descriptions
    (51) statement -> Class CLASS_IDENTIFIER EquivalentTo . LEFT_CURLY_BRACKET statement_enumerated_class_check
    (54) statement -> Class CLASS_IDENTIFIER EquivalentTo . statement_covered_class_check
    (26) statement_defined_class_equivalent -> EquivalentTo . CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN
    (27) statement_defined_class_equivalent -> EquivalentTo . CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent
    (28) statement_defined_class_equivalent -> EquivalentTo . CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN
    (29) statement_defined_class_equivalent -> EquivalentTo . CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent
    (45) nested_descriptions -> . CLASS_IDENTIFIER
    (46) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (47) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (48) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (49) nested_descriptions -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (50) nested_descriptions -> . statement_property_identify statement_reserved_word LEFT_PAREN nested_descriptions RIGHT_PAREN
    (55) statement_covered_class_check -> . CLASS_IDENTIFIER
    (56) statement_covered_class_check -> . CLASS_IDENTIFIER OR statement_covered_class_check
    (8) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (9) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (10) statement_property_identify -> . PROPERTY_IDENTIFIER

    LEFT_CURLY_BRACKET shift and go to state 20
    CLASS_IDENTIFIER shift and go to state 18
    LEFT_PAREN      shift and go to state 22
    PROPERTY_IDENTIFIER_has shift and go to state 12
    PROPERTY_IDENTIFIER_is_Of shift and go to state 13
    PROPERTY_IDENTIFIER shift and go to state 14

    nested_descriptions            shift and go to state 19
    statement_covered_class_check  shift and go to state 21
    statement_property_identify    shift and go to state 23

state 9

    (35) statement -> Class CLASS_IDENTIFIER SubClassOf CLASS_IDENTIFIER . COMMA closed_axiom_mandatory
    (15) primitive_class_mandatory -> CLASS_IDENTIFIER .
    (16) primitive_class_mandatory -> CLASS_IDENTIFIER . COMMA primitive_class_mandatory

    COMMA           shift and go to state 24
    DisjointClasses reduce using rule 15 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    Individuals     reduce using rule 15 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    Class           reduce using rule 15 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    $end            reduce using rule 15 (primitive_class_mandatory -> CLASS_IDENTIFIER .)


state 10

    (3) statement -> Class CLASS_IDENTIFIER SubClassOf primitive_class_mandatory . statement_class_disjoin statement_class_individuals
    (17) statement_class_disjoin -> . empty
    (18) statement_class_disjoin -> . DisjointClasses statement_class_disjoin_check
    (57) empty -> .

    DisjointClasses shift and go to state 27
    Individuals     reduce using rule 57 (empty -> .)
    Class           reduce using rule 57 (empty -> .)
    $end            reduce using rule 57 (empty -> .)

    statement_class_disjoin        shift and go to state 25
    empty                          shift and go to state 26

state 11

    (11) primitive_class_mandatory -> statement_property_identify . statement_reserved_word CLASS_IDENTIFIER
    (12) primitive_class_mandatory -> statement_property_identify . statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (13) primitive_class_mandatory -> statement_property_identify . statement_reserved_word NAMESPACEID DATA_TYPE
    (14) primitive_class_mandatory -> statement_property_identify . statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory
    (4) statement_reserved_word -> . SOME
    (5) statement_reserved_word -> . EXACTLY
    (6) statement_reserved_word -> . MIN
    (7) statement_reserved_word -> . MAX

    SOME            shift and go to state 29
    EXACTLY         shift and go to state 30
    MIN             shift and go to state 31
    MAX             shift and go to state 32

    statement_reserved_word        shift and go to state 28

state 12

    (8) statement_property_identify -> PROPERTY_IDENTIFIER_has .

    SOME            reduce using rule 8 (statement_property_identify -> PROPERTY_IDENTIFIER_has .)
    EXACTLY         reduce using rule 8 (statement_property_identify -> PROPERTY_IDENTIFIER_has .)
    MIN             reduce using rule 8 (statement_property_identify -> PROPERTY_IDENTIFIER_has .)
    MAX             reduce using rule 8 (statement_property_identify -> PROPERTY_IDENTIFIER_has .)
    ONLY            reduce using rule 8 (statement_property_identify -> PROPERTY_IDENTIFIER_has .)


state 13

    (9) statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .

    SOME            reduce using rule 9 (statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .)
    EXACTLY         reduce using rule 9 (statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .)
    MIN             reduce using rule 9 (statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .)
    MAX             reduce using rule 9 (statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .)
    ONLY            reduce using rule 9 (statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .)


state 14

    (10) statement_property_identify -> PROPERTY_IDENTIFIER .

    SOME            reduce using rule 10 (statement_property_identify -> PROPERTY_IDENTIFIER .)
    EXACTLY         reduce using rule 10 (statement_property_identify -> PROPERTY_IDENTIFIER .)
    MIN             reduce using rule 10 (statement_property_identify -> PROPERTY_IDENTIFIER .)
    MAX             reduce using rule 10 (statement_property_identify -> PROPERTY_IDENTIFIER .)
    ONLY            reduce using rule 10 (statement_property_identify -> PROPERTY_IDENTIFIER .)


state 15

    (25) statement -> Class CLASS_IDENTIFIER statement_defined_class_equivalent statement_class_individuals .

    Class           reduce using rule 25 (statement -> Class CLASS_IDENTIFIER statement_defined_class_equivalent statement_class_individuals .)
    $end            reduce using rule 25 (statement -> Class CLASS_IDENTIFIER statement_defined_class_equivalent statement_class_individuals .)


state 16

    (21) statement_class_individuals -> empty .

    Class           reduce using rule 21 (statement_class_individuals -> empty .)
    $end            reduce using rule 21 (statement_class_individuals -> empty .)


state 17

    (22) statement_class_individuals -> Individuals . statement_class_individuals_check
    (23) statement_class_individuals_check -> . IndividualNames
    (24) statement_class_individuals_check -> . IndividualNames COMMA statement_class_individuals_check

    IndividualNames shift and go to state 34

    statement_class_individuals_check shift and go to state 33

state 18

    (26) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER . AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN
    (27) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER . AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent
    (28) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER . AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN
    (29) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER . AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent
    (45) nested_descriptions -> CLASS_IDENTIFIER .
    (55) statement_covered_class_check -> CLASS_IDENTIFIER .
    (56) statement_covered_class_check -> CLASS_IDENTIFIER . OR statement_covered_class_check

  ! shift/reduce conflict for AND resolved as shift
  ! reduce/reduce conflict for Class resolved using rule 45 (nested_descriptions -> CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 45 (nested_descriptions -> CLASS_IDENTIFIER .)
  ! shift/reduce conflict for OR resolved as shift
    AND             shift and go to state 35
    Class           reduce using rule 45 (nested_descriptions -> CLASS_IDENTIFIER .)
    $end            reduce using rule 45 (nested_descriptions -> CLASS_IDENTIFIER .)
    OR              shift and go to state 36

  ! AND             [ reduce using rule 45 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! OR              [ reduce using rule 45 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! Class           [ reduce using rule 55 (statement_covered_class_check -> CLASS_IDENTIFIER .) ]
  ! $end            [ reduce using rule 55 (statement_covered_class_check -> CLASS_IDENTIFIER .) ]


state 19

    (44) statement -> Class CLASS_IDENTIFIER EquivalentTo nested_descriptions .
    (47) nested_descriptions -> nested_descriptions . AND nested_descriptions
    (48) nested_descriptions -> nested_descriptions . OR nested_descriptions

    Class           reduce using rule 44 (statement -> Class CLASS_IDENTIFIER EquivalentTo nested_descriptions .)
    $end            reduce using rule 44 (statement -> Class CLASS_IDENTIFIER EquivalentTo nested_descriptions .)
    AND             shift and go to state 37
    OR              shift and go to state 38


state 20

    (51) statement -> Class CLASS_IDENTIFIER EquivalentTo LEFT_CURLY_BRACKET . statement_enumerated_class_check
    (52) statement_enumerated_class_check -> . CLASS_IDENTIFIER RIGHT_CURLY_BRACKET
    (53) statement_enumerated_class_check -> . CLASS_IDENTIFIER COMMA statement_enumerated_class_check

    CLASS_IDENTIFIER shift and go to state 39

    statement_enumerated_class_check shift and go to state 40

state 21

    (54) statement -> Class CLASS_IDENTIFIER EquivalentTo statement_covered_class_check .

    Class           reduce using rule 54 (statement -> Class CLASS_IDENTIFIER EquivalentTo statement_covered_class_check .)
    $end            reduce using rule 54 (statement -> Class CLASS_IDENTIFIER EquivalentTo statement_covered_class_check .)


state 22

    (46) nested_descriptions -> LEFT_PAREN . nested_descriptions RIGHT_PAREN
    (45) nested_descriptions -> . CLASS_IDENTIFIER
    (46) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (47) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (48) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (49) nested_descriptions -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (50) nested_descriptions -> . statement_property_identify statement_reserved_word LEFT_PAREN nested_descriptions RIGHT_PAREN
    (8) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (9) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (10) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 42
    LEFT_PAREN      shift and go to state 22
    PROPERTY_IDENTIFIER_has shift and go to state 12
    PROPERTY_IDENTIFIER_is_Of shift and go to state 13
    PROPERTY_IDENTIFIER shift and go to state 14

    nested_descriptions            shift and go to state 41
    statement_property_identify    shift and go to state 23

state 23

    (49) nested_descriptions -> statement_property_identify . statement_reserved_word CLASS_IDENTIFIER
    (50) nested_descriptions -> statement_property_identify . statement_reserved_word LEFT_PAREN nested_descriptions RIGHT_PAREN
    (4) statement_reserved_word -> . SOME
    (5) statement_reserved_word -> . EXACTLY
    (6) statement_reserved_word -> . MIN
    (7) statement_reserved_word -> . MAX

    SOME            shift and go to state 29
    EXACTLY         shift and go to state 30
    MIN             shift and go to state 31
    MAX             shift and go to state 32

    statement_reserved_word        shift and go to state 43

state 24

    (35) statement -> Class CLASS_IDENTIFIER SubClassOf CLASS_IDENTIFIER COMMA . closed_axiom_mandatory
    (16) primitive_class_mandatory -> CLASS_IDENTIFIER COMMA . primitive_class_mandatory
    (36) closed_axiom_mandatory -> . CLASS_IDENTIFIER
    (37) closed_axiom_mandatory -> . statement_property_restriction
    (38) closed_axiom_mandatory -> . CLASS_IDENTIFIER COMMA closed_axiom_mandatory
    (39) closed_axiom_mandatory -> . statement_property_restriction COMMA closed_axiom_mandatory
    (11) primitive_class_mandatory -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (12) primitive_class_mandatory -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (13) primitive_class_mandatory -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (14) primitive_class_mandatory -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory
    (15) primitive_class_mandatory -> . CLASS_IDENTIFIER
    (16) primitive_class_mandatory -> . CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (40) statement_property_restriction -> . statement_property_identify SOME CLASS_IDENTIFIER
    (41) statement_property_restriction -> . statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN
    (8) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (9) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (10) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 44
    PROPERTY_IDENTIFIER_has shift and go to state 12
    PROPERTY_IDENTIFIER_is_Of shift and go to state 13
    PROPERTY_IDENTIFIER shift and go to state 14

    closed_axiom_mandatory         shift and go to state 45
    primitive_class_mandatory      shift and go to state 46
    statement_property_restriction shift and go to state 47
    statement_property_identify    shift and go to state 48

state 25

    (3) statement -> Class CLASS_IDENTIFIER SubClassOf primitive_class_mandatory statement_class_disjoin . statement_class_individuals
    (21) statement_class_individuals -> . empty
    (22) statement_class_individuals -> . Individuals statement_class_individuals_check
    (57) empty -> .

    Individuals     shift and go to state 17
    Class           reduce using rule 57 (empty -> .)
    $end            reduce using rule 57 (empty -> .)

    statement_class_individuals    shift and go to state 49
    empty                          shift and go to state 16

state 26

    (17) statement_class_disjoin -> empty .

    Individuals     reduce using rule 17 (statement_class_disjoin -> empty .)
    Class           reduce using rule 17 (statement_class_disjoin -> empty .)
    $end            reduce using rule 17 (statement_class_disjoin -> empty .)


state 27

    (18) statement_class_disjoin -> DisjointClasses . statement_class_disjoin_check
    (19) statement_class_disjoin_check -> . CLASS_IDENTIFIER
    (20) statement_class_disjoin_check -> . CLASS_IDENTIFIER COMMA statement_class_disjoin_check

    CLASS_IDENTIFIER shift and go to state 51

    statement_class_disjoin_check  shift and go to state 50

state 28

    (11) primitive_class_mandatory -> statement_property_identify statement_reserved_word . CLASS_IDENTIFIER
    (12) primitive_class_mandatory -> statement_property_identify statement_reserved_word . CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (13) primitive_class_mandatory -> statement_property_identify statement_reserved_word . NAMESPACEID DATA_TYPE
    (14) primitive_class_mandatory -> statement_property_identify statement_reserved_word . NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory

    CLASS_IDENTIFIER shift and go to state 52
    NAMESPACEID     shift and go to state 53


state 29

    (4) statement_reserved_word -> SOME .

    CLASS_IDENTIFIER reduce using rule 4 (statement_reserved_word -> SOME .)
    NAMESPACEID     reduce using rule 4 (statement_reserved_word -> SOME .)
    LEFT_PAREN      reduce using rule 4 (statement_reserved_word -> SOME .)


state 30

    (5) statement_reserved_word -> EXACTLY .

    CLASS_IDENTIFIER reduce using rule 5 (statement_reserved_word -> EXACTLY .)
    NAMESPACEID     reduce using rule 5 (statement_reserved_word -> EXACTLY .)
    LEFT_PAREN      reduce using rule 5 (statement_reserved_word -> EXACTLY .)


state 31

    (6) statement_reserved_word -> MIN .

    CLASS_IDENTIFIER reduce using rule 6 (statement_reserved_word -> MIN .)
    NAMESPACEID     reduce using rule 6 (statement_reserved_word -> MIN .)
    LEFT_PAREN      reduce using rule 6 (statement_reserved_word -> MIN .)


state 32

    (7) statement_reserved_word -> MAX .

    CLASS_IDENTIFIER reduce using rule 7 (statement_reserved_word -> MAX .)
    NAMESPACEID     reduce using rule 7 (statement_reserved_word -> MAX .)
    LEFT_PAREN      reduce using rule 7 (statement_reserved_word -> MAX .)


state 33

    (22) statement_class_individuals -> Individuals statement_class_individuals_check .

    Class           reduce using rule 22 (statement_class_individuals -> Individuals statement_class_individuals_check .)
    $end            reduce using rule 22 (statement_class_individuals -> Individuals statement_class_individuals_check .)


state 34

    (23) statement_class_individuals_check -> IndividualNames .
    (24) statement_class_individuals_check -> IndividualNames . COMMA statement_class_individuals_check

    Class           reduce using rule 23 (statement_class_individuals_check -> IndividualNames .)
    $end            reduce using rule 23 (statement_class_individuals_check -> IndividualNames .)
    COMMA           shift and go to state 54


state 35

    (26) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND . LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN
    (27) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND . LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent
    (28) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND . LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN
    (29) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND . LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent

    LEFT_PAREN      shift and go to state 55


state 36

    (56) statement_covered_class_check -> CLASS_IDENTIFIER OR . statement_covered_class_check
    (55) statement_covered_class_check -> . CLASS_IDENTIFIER
    (56) statement_covered_class_check -> . CLASS_IDENTIFIER OR statement_covered_class_check

    CLASS_IDENTIFIER shift and go to state 56

    statement_covered_class_check  shift and go to state 57

state 37

    (47) nested_descriptions -> nested_descriptions AND . nested_descriptions
    (45) nested_descriptions -> . CLASS_IDENTIFIER
    (46) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (47) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (48) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (49) nested_descriptions -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (50) nested_descriptions -> . statement_property_identify statement_reserved_word LEFT_PAREN nested_descriptions RIGHT_PAREN
    (8) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (9) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (10) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 42
    LEFT_PAREN      shift and go to state 22
    PROPERTY_IDENTIFIER_has shift and go to state 12
    PROPERTY_IDENTIFIER_is_Of shift and go to state 13
    PROPERTY_IDENTIFIER shift and go to state 14

    nested_descriptions            shift and go to state 58
    statement_property_identify    shift and go to state 23

state 38

    (48) nested_descriptions -> nested_descriptions OR . nested_descriptions
    (45) nested_descriptions -> . CLASS_IDENTIFIER
    (46) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (47) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (48) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (49) nested_descriptions -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (50) nested_descriptions -> . statement_property_identify statement_reserved_word LEFT_PAREN nested_descriptions RIGHT_PAREN
    (8) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (9) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (10) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 42
    LEFT_PAREN      shift and go to state 22
    PROPERTY_IDENTIFIER_has shift and go to state 12
    PROPERTY_IDENTIFIER_is_Of shift and go to state 13
    PROPERTY_IDENTIFIER shift and go to state 14

    nested_descriptions            shift and go to state 59
    statement_property_identify    shift and go to state 23

state 39

    (52) statement_enumerated_class_check -> CLASS_IDENTIFIER . RIGHT_CURLY_BRACKET
    (53) statement_enumerated_class_check -> CLASS_IDENTIFIER . COMMA statement_enumerated_class_check

    RIGHT_CURLY_BRACKET shift and go to state 60
    COMMA           shift and go to state 61


state 40

    (51) statement -> Class CLASS_IDENTIFIER EquivalentTo LEFT_CURLY_BRACKET statement_enumerated_class_check .

    Class           reduce using rule 51 (statement -> Class CLASS_IDENTIFIER EquivalentTo LEFT_CURLY_BRACKET statement_enumerated_class_check .)
    $end            reduce using rule 51 (statement -> Class CLASS_IDENTIFIER EquivalentTo LEFT_CURLY_BRACKET statement_enumerated_class_check .)


state 41

    (46) nested_descriptions -> LEFT_PAREN nested_descriptions . RIGHT_PAREN
    (47) nested_descriptions -> nested_descriptions . AND nested_descriptions
    (48) nested_descriptions -> nested_descriptions . OR nested_descriptions

    RIGHT_PAREN     shift and go to state 62
    AND             shift and go to state 37
    OR              shift and go to state 38


state 42

    (45) nested_descriptions -> CLASS_IDENTIFIER .

    RIGHT_PAREN     reduce using rule 45 (nested_descriptions -> CLASS_IDENTIFIER .)
    AND             reduce using rule 45 (nested_descriptions -> CLASS_IDENTIFIER .)
    OR              reduce using rule 45 (nested_descriptions -> CLASS_IDENTIFIER .)
    Class           reduce using rule 45 (nested_descriptions -> CLASS_IDENTIFIER .)
    $end            reduce using rule 45 (nested_descriptions -> CLASS_IDENTIFIER .)


state 43

    (49) nested_descriptions -> statement_property_identify statement_reserved_word . CLASS_IDENTIFIER
    (50) nested_descriptions -> statement_property_identify statement_reserved_word . LEFT_PAREN nested_descriptions RIGHT_PAREN

    CLASS_IDENTIFIER shift and go to state 63
    LEFT_PAREN      shift and go to state 64


state 44

    (36) closed_axiom_mandatory -> CLASS_IDENTIFIER .
    (38) closed_axiom_mandatory -> CLASS_IDENTIFIER . COMMA closed_axiom_mandatory
    (15) primitive_class_mandatory -> CLASS_IDENTIFIER .
    (16) primitive_class_mandatory -> CLASS_IDENTIFIER . COMMA primitive_class_mandatory

  ! reduce/reduce conflict for Class resolved using rule 15 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 15 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    COMMA           shift and go to state 65
    DisjointClasses reduce using rule 15 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    Individuals     reduce using rule 15 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    Class           reduce using rule 15 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    $end            reduce using rule 15 (primitive_class_mandatory -> CLASS_IDENTIFIER .)

  ! Class           [ reduce using rule 36 (closed_axiom_mandatory -> CLASS_IDENTIFIER .) ]
  ! $end            [ reduce using rule 36 (closed_axiom_mandatory -> CLASS_IDENTIFIER .) ]


state 45

    (35) statement -> Class CLASS_IDENTIFIER SubClassOf CLASS_IDENTIFIER COMMA closed_axiom_mandatory .

    Class           reduce using rule 35 (statement -> Class CLASS_IDENTIFIER SubClassOf CLASS_IDENTIFIER COMMA closed_axiom_mandatory .)
    $end            reduce using rule 35 (statement -> Class CLASS_IDENTIFIER SubClassOf CLASS_IDENTIFIER COMMA closed_axiom_mandatory .)


state 46

    (16) primitive_class_mandatory -> CLASS_IDENTIFIER COMMA primitive_class_mandatory .

    DisjointClasses reduce using rule 16 (primitive_class_mandatory -> CLASS_IDENTIFIER COMMA primitive_class_mandatory .)
    Individuals     reduce using rule 16 (primitive_class_mandatory -> CLASS_IDENTIFIER COMMA primitive_class_mandatory .)
    Class           reduce using rule 16 (primitive_class_mandatory -> CLASS_IDENTIFIER COMMA primitive_class_mandatory .)
    $end            reduce using rule 16 (primitive_class_mandatory -> CLASS_IDENTIFIER COMMA primitive_class_mandatory .)


state 47

    (37) closed_axiom_mandatory -> statement_property_restriction .
    (39) closed_axiom_mandatory -> statement_property_restriction . COMMA closed_axiom_mandatory

    Class           reduce using rule 37 (closed_axiom_mandatory -> statement_property_restriction .)
    $end            reduce using rule 37 (closed_axiom_mandatory -> statement_property_restriction .)
    COMMA           shift and go to state 66


state 48

    (11) primitive_class_mandatory -> statement_property_identify . statement_reserved_word CLASS_IDENTIFIER
    (12) primitive_class_mandatory -> statement_property_identify . statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (13) primitive_class_mandatory -> statement_property_identify . statement_reserved_word NAMESPACEID DATA_TYPE
    (14) primitive_class_mandatory -> statement_property_identify . statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory
    (40) statement_property_restriction -> statement_property_identify . SOME CLASS_IDENTIFIER
    (41) statement_property_restriction -> statement_property_identify . ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN
    (4) statement_reserved_word -> . SOME
    (5) statement_reserved_word -> . EXACTLY
    (6) statement_reserved_word -> . MIN
    (7) statement_reserved_word -> . MAX

    SOME            shift and go to state 67
    ONLY            shift and go to state 68
    EXACTLY         shift and go to state 30
    MIN             shift and go to state 31
    MAX             shift and go to state 32

    statement_reserved_word        shift and go to state 28

state 49

    (3) statement -> Class CLASS_IDENTIFIER SubClassOf primitive_class_mandatory statement_class_disjoin statement_class_individuals .

    Class           reduce using rule 3 (statement -> Class CLASS_IDENTIFIER SubClassOf primitive_class_mandatory statement_class_disjoin statement_class_individuals .)
    $end            reduce using rule 3 (statement -> Class CLASS_IDENTIFIER SubClassOf primitive_class_mandatory statement_class_disjoin statement_class_individuals .)


state 50

    (18) statement_class_disjoin -> DisjointClasses statement_class_disjoin_check .

    Individuals     reduce using rule 18 (statement_class_disjoin -> DisjointClasses statement_class_disjoin_check .)
    Class           reduce using rule 18 (statement_class_disjoin -> DisjointClasses statement_class_disjoin_check .)
    $end            reduce using rule 18 (statement_class_disjoin -> DisjointClasses statement_class_disjoin_check .)


state 51

    (19) statement_class_disjoin_check -> CLASS_IDENTIFIER .
    (20) statement_class_disjoin_check -> CLASS_IDENTIFIER . COMMA statement_class_disjoin_check

    Individuals     reduce using rule 19 (statement_class_disjoin_check -> CLASS_IDENTIFIER .)
    Class           reduce using rule 19 (statement_class_disjoin_check -> CLASS_IDENTIFIER .)
    $end            reduce using rule 19 (statement_class_disjoin_check -> CLASS_IDENTIFIER .)
    COMMA           shift and go to state 69


state 52

    (11) primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .
    (12) primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER . COMMA primitive_class_mandatory

    DisjointClasses reduce using rule 11 (primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    Individuals     reduce using rule 11 (primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    Class           reduce using rule 11 (primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    $end            reduce using rule 11 (primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    COMMA           shift and go to state 70


state 53

    (13) primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID . DATA_TYPE
    (14) primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID . DATA_TYPE COMMA primitive_class_mandatory

    DATA_TYPE       shift and go to state 71


state 54

    (24) statement_class_individuals_check -> IndividualNames COMMA . statement_class_individuals_check
    (23) statement_class_individuals_check -> . IndividualNames
    (24) statement_class_individuals_check -> . IndividualNames COMMA statement_class_individuals_check

    IndividualNames shift and go to state 34

    statement_class_individuals_check shift and go to state 72

state 55

    (26) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN . statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN
    (27) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN . statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent
    (28) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN
    (29) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent
    (8) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (9) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (10) statement_property_identify -> . PROPERTY_IDENTIFIER

    PROPERTY_IDENTIFIER_has shift and go to state 12
    PROPERTY_IDENTIFIER_is_Of shift and go to state 13
    PROPERTY_IDENTIFIER shift and go to state 14

    statement_property_identify    shift and go to state 73

state 56

    (55) statement_covered_class_check -> CLASS_IDENTIFIER .
    (56) statement_covered_class_check -> CLASS_IDENTIFIER . OR statement_covered_class_check

    Class           reduce using rule 55 (statement_covered_class_check -> CLASS_IDENTIFIER .)
    $end            reduce using rule 55 (statement_covered_class_check -> CLASS_IDENTIFIER .)
    OR              shift and go to state 36


state 57

    (56) statement_covered_class_check -> CLASS_IDENTIFIER OR statement_covered_class_check .

    Class           reduce using rule 56 (statement_covered_class_check -> CLASS_IDENTIFIER OR statement_covered_class_check .)
    $end            reduce using rule 56 (statement_covered_class_check -> CLASS_IDENTIFIER OR statement_covered_class_check .)


state 58

    (47) nested_descriptions -> nested_descriptions AND nested_descriptions .
    (47) nested_descriptions -> nested_descriptions . AND nested_descriptions
    (48) nested_descriptions -> nested_descriptions . OR nested_descriptions

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    Class           reduce using rule 47 (nested_descriptions -> nested_descriptions AND nested_descriptions .)
    $end            reduce using rule 47 (nested_descriptions -> nested_descriptions AND nested_descriptions .)
    RIGHT_PAREN     reduce using rule 47 (nested_descriptions -> nested_descriptions AND nested_descriptions .)
    AND             shift and go to state 37
    OR              shift and go to state 38

  ! AND             [ reduce using rule 47 (nested_descriptions -> nested_descriptions AND nested_descriptions .) ]
  ! OR              [ reduce using rule 47 (nested_descriptions -> nested_descriptions AND nested_descriptions .) ]


state 59

    (48) nested_descriptions -> nested_descriptions OR nested_descriptions .
    (47) nested_descriptions -> nested_descriptions . AND nested_descriptions
    (48) nested_descriptions -> nested_descriptions . OR nested_descriptions

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    Class           reduce using rule 48 (nested_descriptions -> nested_descriptions OR nested_descriptions .)
    $end            reduce using rule 48 (nested_descriptions -> nested_descriptions OR nested_descriptions .)
    RIGHT_PAREN     reduce using rule 48 (nested_descriptions -> nested_descriptions OR nested_descriptions .)
    AND             shift and go to state 37
    OR              shift and go to state 38

  ! AND             [ reduce using rule 48 (nested_descriptions -> nested_descriptions OR nested_descriptions .) ]
  ! OR              [ reduce using rule 48 (nested_descriptions -> nested_descriptions OR nested_descriptions .) ]


state 60

    (52) statement_enumerated_class_check -> CLASS_IDENTIFIER RIGHT_CURLY_BRACKET .

    Class           reduce using rule 52 (statement_enumerated_class_check -> CLASS_IDENTIFIER RIGHT_CURLY_BRACKET .)
    $end            reduce using rule 52 (statement_enumerated_class_check -> CLASS_IDENTIFIER RIGHT_CURLY_BRACKET .)


state 61

    (53) statement_enumerated_class_check -> CLASS_IDENTIFIER COMMA . statement_enumerated_class_check
    (52) statement_enumerated_class_check -> . CLASS_IDENTIFIER RIGHT_CURLY_BRACKET
    (53) statement_enumerated_class_check -> . CLASS_IDENTIFIER COMMA statement_enumerated_class_check

    CLASS_IDENTIFIER shift and go to state 39

    statement_enumerated_class_check shift and go to state 74

state 62

    (46) nested_descriptions -> LEFT_PAREN nested_descriptions RIGHT_PAREN .

    AND             reduce using rule 46 (nested_descriptions -> LEFT_PAREN nested_descriptions RIGHT_PAREN .)
    OR              reduce using rule 46 (nested_descriptions -> LEFT_PAREN nested_descriptions RIGHT_PAREN .)
    Class           reduce using rule 46 (nested_descriptions -> LEFT_PAREN nested_descriptions RIGHT_PAREN .)
    $end            reduce using rule 46 (nested_descriptions -> LEFT_PAREN nested_descriptions RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 46 (nested_descriptions -> LEFT_PAREN nested_descriptions RIGHT_PAREN .)


state 63

    (49) nested_descriptions -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .

    AND             reduce using rule 49 (nested_descriptions -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    OR              reduce using rule 49 (nested_descriptions -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    Class           reduce using rule 49 (nested_descriptions -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    $end            reduce using rule 49 (nested_descriptions -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    RIGHT_PAREN     reduce using rule 49 (nested_descriptions -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)


state 64

    (50) nested_descriptions -> statement_property_identify statement_reserved_word LEFT_PAREN . nested_descriptions RIGHT_PAREN
    (45) nested_descriptions -> . CLASS_IDENTIFIER
    (46) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (47) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (48) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (49) nested_descriptions -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (50) nested_descriptions -> . statement_property_identify statement_reserved_word LEFT_PAREN nested_descriptions RIGHT_PAREN
    (8) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (9) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (10) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 42
    LEFT_PAREN      shift and go to state 22
    PROPERTY_IDENTIFIER_has shift and go to state 12
    PROPERTY_IDENTIFIER_is_Of shift and go to state 13
    PROPERTY_IDENTIFIER shift and go to state 14

    statement_property_identify    shift and go to state 23
    nested_descriptions            shift and go to state 75

state 65

    (38) closed_axiom_mandatory -> CLASS_IDENTIFIER COMMA . closed_axiom_mandatory
    (16) primitive_class_mandatory -> CLASS_IDENTIFIER COMMA . primitive_class_mandatory
    (36) closed_axiom_mandatory -> . CLASS_IDENTIFIER
    (37) closed_axiom_mandatory -> . statement_property_restriction
    (38) closed_axiom_mandatory -> . CLASS_IDENTIFIER COMMA closed_axiom_mandatory
    (39) closed_axiom_mandatory -> . statement_property_restriction COMMA closed_axiom_mandatory
    (11) primitive_class_mandatory -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (12) primitive_class_mandatory -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (13) primitive_class_mandatory -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (14) primitive_class_mandatory -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory
    (15) primitive_class_mandatory -> . CLASS_IDENTIFIER
    (16) primitive_class_mandatory -> . CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (40) statement_property_restriction -> . statement_property_identify SOME CLASS_IDENTIFIER
    (41) statement_property_restriction -> . statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN
    (8) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (9) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (10) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 44
    PROPERTY_IDENTIFIER_has shift and go to state 12
    PROPERTY_IDENTIFIER_is_Of shift and go to state 13
    PROPERTY_IDENTIFIER shift and go to state 14

    closed_axiom_mandatory         shift and go to state 76
    primitive_class_mandatory      shift and go to state 46
    statement_property_restriction shift and go to state 47
    statement_property_identify    shift and go to state 48

state 66

    (39) closed_axiom_mandatory -> statement_property_restriction COMMA . closed_axiom_mandatory
    (36) closed_axiom_mandatory -> . CLASS_IDENTIFIER
    (37) closed_axiom_mandatory -> . statement_property_restriction
    (38) closed_axiom_mandatory -> . CLASS_IDENTIFIER COMMA closed_axiom_mandatory
    (39) closed_axiom_mandatory -> . statement_property_restriction COMMA closed_axiom_mandatory
    (40) statement_property_restriction -> . statement_property_identify SOME CLASS_IDENTIFIER
    (41) statement_property_restriction -> . statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN
    (8) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (9) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (10) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 78
    PROPERTY_IDENTIFIER_has shift and go to state 12
    PROPERTY_IDENTIFIER_is_Of shift and go to state 13
    PROPERTY_IDENTIFIER shift and go to state 14

    statement_property_restriction shift and go to state 47
    closed_axiom_mandatory         shift and go to state 77
    statement_property_identify    shift and go to state 79

state 67

    (40) statement_property_restriction -> statement_property_identify SOME . CLASS_IDENTIFIER
    (4) statement_reserved_word -> SOME .

  ! shift/reduce conflict for CLASS_IDENTIFIER resolved as shift
    CLASS_IDENTIFIER shift and go to state 80
    NAMESPACEID     reduce using rule 4 (statement_reserved_word -> SOME .)

  ! CLASS_IDENTIFIER [ reduce using rule 4 (statement_reserved_word -> SOME .) ]


state 68

    (41) statement_property_restriction -> statement_property_identify ONLY . LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN

    LEFT_PAREN      shift and go to state 81


state 69

    (20) statement_class_disjoin_check -> CLASS_IDENTIFIER COMMA . statement_class_disjoin_check
    (19) statement_class_disjoin_check -> . CLASS_IDENTIFIER
    (20) statement_class_disjoin_check -> . CLASS_IDENTIFIER COMMA statement_class_disjoin_check

    CLASS_IDENTIFIER shift and go to state 51

    statement_class_disjoin_check  shift and go to state 82

state 70

    (12) primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA . primitive_class_mandatory
    (11) primitive_class_mandatory -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (12) primitive_class_mandatory -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (13) primitive_class_mandatory -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (14) primitive_class_mandatory -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory
    (15) primitive_class_mandatory -> . CLASS_IDENTIFIER
    (16) primitive_class_mandatory -> . CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (8) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (9) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (10) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 83
    PROPERTY_IDENTIFIER_has shift and go to state 12
    PROPERTY_IDENTIFIER_is_Of shift and go to state 13
    PROPERTY_IDENTIFIER shift and go to state 14

    statement_property_identify    shift and go to state 11
    primitive_class_mandatory      shift and go to state 84

state 71

    (13) primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE .
    (14) primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE . COMMA primitive_class_mandatory

    DisjointClasses reduce using rule 13 (primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE .)
    Individuals     reduce using rule 13 (primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE .)
    Class           reduce using rule 13 (primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE .)
    $end            reduce using rule 13 (primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE .)
    COMMA           shift and go to state 85


state 72

    (24) statement_class_individuals_check -> IndividualNames COMMA statement_class_individuals_check .

    Class           reduce using rule 24 (statement_class_individuals_check -> IndividualNames COMMA statement_class_individuals_check .)
    $end            reduce using rule 24 (statement_class_individuals_check -> IndividualNames COMMA statement_class_individuals_check .)


state 73

    (26) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify . statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN
    (27) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify . statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent
    (28) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify . statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN
    (29) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify . statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent
    (4) statement_reserved_word -> . SOME
    (5) statement_reserved_word -> . EXACTLY
    (6) statement_reserved_word -> . MIN
    (7) statement_reserved_word -> . MAX

    SOME            shift and go to state 29
    EXACTLY         shift and go to state 30
    MIN             shift and go to state 31
    MAX             shift and go to state 32

    statement_reserved_word        shift and go to state 86

state 74

    (53) statement_enumerated_class_check -> CLASS_IDENTIFIER COMMA statement_enumerated_class_check .

    Class           reduce using rule 53 (statement_enumerated_class_check -> CLASS_IDENTIFIER COMMA statement_enumerated_class_check .)
    $end            reduce using rule 53 (statement_enumerated_class_check -> CLASS_IDENTIFIER COMMA statement_enumerated_class_check .)


state 75

    (50) nested_descriptions -> statement_property_identify statement_reserved_word LEFT_PAREN nested_descriptions . RIGHT_PAREN
    (47) nested_descriptions -> nested_descriptions . AND nested_descriptions
    (48) nested_descriptions -> nested_descriptions . OR nested_descriptions

    RIGHT_PAREN     shift and go to state 87
    AND             shift and go to state 37
    OR              shift and go to state 38


state 76

    (38) closed_axiom_mandatory -> CLASS_IDENTIFIER COMMA closed_axiom_mandatory .

    Class           reduce using rule 38 (closed_axiom_mandatory -> CLASS_IDENTIFIER COMMA closed_axiom_mandatory .)
    $end            reduce using rule 38 (closed_axiom_mandatory -> CLASS_IDENTIFIER COMMA closed_axiom_mandatory .)


state 77

    (39) closed_axiom_mandatory -> statement_property_restriction COMMA closed_axiom_mandatory .

    Class           reduce using rule 39 (closed_axiom_mandatory -> statement_property_restriction COMMA closed_axiom_mandatory .)
    $end            reduce using rule 39 (closed_axiom_mandatory -> statement_property_restriction COMMA closed_axiom_mandatory .)


state 78

    (36) closed_axiom_mandatory -> CLASS_IDENTIFIER .
    (38) closed_axiom_mandatory -> CLASS_IDENTIFIER . COMMA closed_axiom_mandatory

    Class           reduce using rule 36 (closed_axiom_mandatory -> CLASS_IDENTIFIER .)
    $end            reduce using rule 36 (closed_axiom_mandatory -> CLASS_IDENTIFIER .)
    COMMA           shift and go to state 88


state 79

    (40) statement_property_restriction -> statement_property_identify . SOME CLASS_IDENTIFIER
    (41) statement_property_restriction -> statement_property_identify . ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN

    SOME            shift and go to state 89
    ONLY            shift and go to state 68


state 80

    (40) statement_property_restriction -> statement_property_identify SOME CLASS_IDENTIFIER .

    COMMA           reduce using rule 40 (statement_property_restriction -> statement_property_identify SOME CLASS_IDENTIFIER .)
    Class           reduce using rule 40 (statement_property_restriction -> statement_property_identify SOME CLASS_IDENTIFIER .)
    $end            reduce using rule 40 (statement_property_restriction -> statement_property_identify SOME CLASS_IDENTIFIER .)


state 81

    (41) statement_property_restriction -> statement_property_identify ONLY LEFT_PAREN . closed_axiom_restriction_combination RIGHT_PAREN
    (42) closed_axiom_restriction_combination -> . CLASS_IDENTIFIER
    (43) closed_axiom_restriction_combination -> . CLASS_IDENTIFIER OR closed_axiom_restriction_combination

    CLASS_IDENTIFIER shift and go to state 91

    closed_axiom_restriction_combination shift and go to state 90

state 82

    (20) statement_class_disjoin_check -> CLASS_IDENTIFIER COMMA statement_class_disjoin_check .

    Individuals     reduce using rule 20 (statement_class_disjoin_check -> CLASS_IDENTIFIER COMMA statement_class_disjoin_check .)
    Class           reduce using rule 20 (statement_class_disjoin_check -> CLASS_IDENTIFIER COMMA statement_class_disjoin_check .)
    $end            reduce using rule 20 (statement_class_disjoin_check -> CLASS_IDENTIFIER COMMA statement_class_disjoin_check .)


state 83

    (15) primitive_class_mandatory -> CLASS_IDENTIFIER .
    (16) primitive_class_mandatory -> CLASS_IDENTIFIER . COMMA primitive_class_mandatory

    DisjointClasses reduce using rule 15 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    Individuals     reduce using rule 15 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    Class           reduce using rule 15 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    $end            reduce using rule 15 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    COMMA           shift and go to state 92


state 84

    (12) primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory .

    DisjointClasses reduce using rule 12 (primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory .)
    Individuals     reduce using rule 12 (primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory .)
    Class           reduce using rule 12 (primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory .)
    $end            reduce using rule 12 (primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory .)


state 85

    (14) primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA . primitive_class_mandatory
    (11) primitive_class_mandatory -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (12) primitive_class_mandatory -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (13) primitive_class_mandatory -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (14) primitive_class_mandatory -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory
    (15) primitive_class_mandatory -> . CLASS_IDENTIFIER
    (16) primitive_class_mandatory -> . CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (8) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (9) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (10) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 83
    PROPERTY_IDENTIFIER_has shift and go to state 12
    PROPERTY_IDENTIFIER_is_Of shift and go to state 13
    PROPERTY_IDENTIFIER shift and go to state 14

    statement_property_identify    shift and go to state 11
    primitive_class_mandatory      shift and go to state 93

state 86

    (26) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word . CLASS_IDENTIFIER RIGHT_PAREN
    (27) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word . CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent
    (28) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word . NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN
    (29) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word . NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent

    CLASS_IDENTIFIER shift and go to state 94
    NAMESPACEID     shift and go to state 95


state 87

    (50) nested_descriptions -> statement_property_identify statement_reserved_word LEFT_PAREN nested_descriptions RIGHT_PAREN .

    AND             reduce using rule 50 (nested_descriptions -> statement_property_identify statement_reserved_word LEFT_PAREN nested_descriptions RIGHT_PAREN .)
    OR              reduce using rule 50 (nested_descriptions -> statement_property_identify statement_reserved_word LEFT_PAREN nested_descriptions RIGHT_PAREN .)
    Class           reduce using rule 50 (nested_descriptions -> statement_property_identify statement_reserved_word LEFT_PAREN nested_descriptions RIGHT_PAREN .)
    $end            reduce using rule 50 (nested_descriptions -> statement_property_identify statement_reserved_word LEFT_PAREN nested_descriptions RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 50 (nested_descriptions -> statement_property_identify statement_reserved_word LEFT_PAREN nested_descriptions RIGHT_PAREN .)


state 88

    (38) closed_axiom_mandatory -> CLASS_IDENTIFIER COMMA . closed_axiom_mandatory
    (36) closed_axiom_mandatory -> . CLASS_IDENTIFIER
    (37) closed_axiom_mandatory -> . statement_property_restriction
    (38) closed_axiom_mandatory -> . CLASS_IDENTIFIER COMMA closed_axiom_mandatory
    (39) closed_axiom_mandatory -> . statement_property_restriction COMMA closed_axiom_mandatory
    (40) statement_property_restriction -> . statement_property_identify SOME CLASS_IDENTIFIER
    (41) statement_property_restriction -> . statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN
    (8) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (9) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (10) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 78
    PROPERTY_IDENTIFIER_has shift and go to state 12
    PROPERTY_IDENTIFIER_is_Of shift and go to state 13
    PROPERTY_IDENTIFIER shift and go to state 14

    closed_axiom_mandatory         shift and go to state 76
    statement_property_restriction shift and go to state 47
    statement_property_identify    shift and go to state 79

state 89

    (40) statement_property_restriction -> statement_property_identify SOME . CLASS_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 80


state 90

    (41) statement_property_restriction -> statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 96


state 91

    (42) closed_axiom_restriction_combination -> CLASS_IDENTIFIER .
    (43) closed_axiom_restriction_combination -> CLASS_IDENTIFIER . OR closed_axiom_restriction_combination

    RIGHT_PAREN     reduce using rule 42 (closed_axiom_restriction_combination -> CLASS_IDENTIFIER .)
    OR              shift and go to state 97


state 92

    (16) primitive_class_mandatory -> CLASS_IDENTIFIER COMMA . primitive_class_mandatory
    (11) primitive_class_mandatory -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (12) primitive_class_mandatory -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (13) primitive_class_mandatory -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (14) primitive_class_mandatory -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory
    (15) primitive_class_mandatory -> . CLASS_IDENTIFIER
    (16) primitive_class_mandatory -> . CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (8) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (9) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (10) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 83
    PROPERTY_IDENTIFIER_has shift and go to state 12
    PROPERTY_IDENTIFIER_is_Of shift and go to state 13
    PROPERTY_IDENTIFIER shift and go to state 14

    primitive_class_mandatory      shift and go to state 46
    statement_property_identify    shift and go to state 11

state 93

    (14) primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory .

    DisjointClasses reduce using rule 14 (primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory .)
    Individuals     reduce using rule 14 (primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory .)
    Class           reduce using rule 14 (primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory .)
    $end            reduce using rule 14 (primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory .)


state 94

    (26) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER . RIGHT_PAREN
    (27) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER . RIGHT_PAREN COMMA statement_defined_class_equivalent

    RIGHT_PAREN     shift and go to state 98


state 95

    (28) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID . DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN
    (29) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID . DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent

    DATA_TYPE       shift and go to state 99


state 96

    (41) statement_property_restriction -> statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN .

    COMMA           reduce using rule 41 (statement_property_restriction -> statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN .)
    Class           reduce using rule 41 (statement_property_restriction -> statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN .)
    $end            reduce using rule 41 (statement_property_restriction -> statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN .)


state 97

    (43) closed_axiom_restriction_combination -> CLASS_IDENTIFIER OR . closed_axiom_restriction_combination
    (42) closed_axiom_restriction_combination -> . CLASS_IDENTIFIER
    (43) closed_axiom_restriction_combination -> . CLASS_IDENTIFIER OR closed_axiom_restriction_combination

    CLASS_IDENTIFIER shift and go to state 91

    closed_axiom_restriction_combination shift and go to state 100

state 98

    (26) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN .
    (27) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN . COMMA statement_defined_class_equivalent

    Individuals     reduce using rule 26 (statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN .)
    Class           reduce using rule 26 (statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN .)
    $end            reduce using rule 26 (statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN .)
    COMMA           shift and go to state 101


state 99

    (28) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE . LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN
    (29) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE . LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent

    LEFT_BRACKET    shift and go to state 102


state 100

    (43) closed_axiom_restriction_combination -> CLASS_IDENTIFIER OR closed_axiom_restriction_combination .

    RIGHT_PAREN     reduce using rule 43 (closed_axiom_restriction_combination -> CLASS_IDENTIFIER OR closed_axiom_restriction_combination .)


state 101

    (27) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA . statement_defined_class_equivalent
    (26) statement_defined_class_equivalent -> . EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN
    (27) statement_defined_class_equivalent -> . EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent
    (28) statement_defined_class_equivalent -> . EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN
    (29) statement_defined_class_equivalent -> . EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent

    EquivalentTo    shift and go to state 103

    statement_defined_class_equivalent shift and go to state 104

state 102

    (28) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET . statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN
    (29) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET . statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent
    (30) statement_operator_symbol -> . LESS_THAN
    (31) statement_operator_symbol -> . GREATER_THAN
    (32) statement_operator_symbol -> . EQUALS
    (33) statement_operator_symbol -> . GREATER_THAN EQUALS
    (34) statement_operator_symbol -> . LESS_THAN EQUALS

    LESS_THAN       shift and go to state 106
    GREATER_THAN    shift and go to state 107
    EQUALS          shift and go to state 108

    statement_operator_symbol      shift and go to state 105

state 103

    (26) statement_defined_class_equivalent -> EquivalentTo . CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN
    (27) statement_defined_class_equivalent -> EquivalentTo . CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent
    (28) statement_defined_class_equivalent -> EquivalentTo . CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN
    (29) statement_defined_class_equivalent -> EquivalentTo . CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent

    CLASS_IDENTIFIER shift and go to state 109


state 104

    (27) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent .

    Individuals     reduce using rule 27 (statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent .)
    Class           reduce using rule 27 (statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent .)
    $end            reduce using rule 27 (statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent .)


state 105

    (28) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol . NUMBER RIGHT_BRACKET RIGHT_PAREN
    (29) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol . NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent

    NUMBER          shift and go to state 110


state 106

    (30) statement_operator_symbol -> LESS_THAN .
    (34) statement_operator_symbol -> LESS_THAN . EQUALS

    NUMBER          reduce using rule 30 (statement_operator_symbol -> LESS_THAN .)
    EQUALS          shift and go to state 111


state 107

    (31) statement_operator_symbol -> GREATER_THAN .
    (33) statement_operator_symbol -> GREATER_THAN . EQUALS

    NUMBER          reduce using rule 31 (statement_operator_symbol -> GREATER_THAN .)
    EQUALS          shift and go to state 112


state 108

    (32) statement_operator_symbol -> EQUALS .

    NUMBER          reduce using rule 32 (statement_operator_symbol -> EQUALS .)


state 109

    (26) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER . AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN
    (27) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER . AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent
    (28) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER . AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN
    (29) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER . AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent

    AND             shift and go to state 35


state 110

    (28) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER . RIGHT_BRACKET RIGHT_PAREN
    (29) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER . RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent

    RIGHT_BRACKET   shift and go to state 113


state 111

    (34) statement_operator_symbol -> LESS_THAN EQUALS .

    NUMBER          reduce using rule 34 (statement_operator_symbol -> LESS_THAN EQUALS .)


state 112

    (33) statement_operator_symbol -> GREATER_THAN EQUALS .

    NUMBER          reduce using rule 33 (statement_operator_symbol -> GREATER_THAN EQUALS .)


state 113

    (28) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET . RIGHT_PAREN
    (29) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET . RIGHT_PAREN COMMA statement_defined_class_equivalent

    RIGHT_PAREN     shift and go to state 114


state 114

    (28) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN .
    (29) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN . COMMA statement_defined_class_equivalent

    Individuals     reduce using rule 28 (statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN .)
    Class           reduce using rule 28 (statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN .)
    $end            reduce using rule 28 (statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN .)
    COMMA           shift and go to state 115


state 115

    (29) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA . statement_defined_class_equivalent
    (26) statement_defined_class_equivalent -> . EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN
    (27) statement_defined_class_equivalent -> . EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent
    (28) statement_defined_class_equivalent -> . EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN
    (29) statement_defined_class_equivalent -> . EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent

    EquivalentTo    shift and go to state 103

    statement_defined_class_equivalent shift and go to state 116

state 116

    (29) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent .

    Individuals     reduce using rule 29 (statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent .)
    Class           reduce using rule 29 (statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent .)
    $end            reduce using rule 29 (statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for AND in state 18 resolved as shift
WARNING: shift/reduce conflict for OR in state 18 resolved as shift
WARNING: shift/reduce conflict for AND in state 58 resolved as shift
WARNING: shift/reduce conflict for OR in state 58 resolved as shift
WARNING: shift/reduce conflict for AND in state 59 resolved as shift
WARNING: shift/reduce conflict for OR in state 59 resolved as shift
WARNING: shift/reduce conflict for CLASS_IDENTIFIER in state 67 resolved as shift
WARNING: reduce/reduce conflict in state 18 resolved using rule (nested_descriptions -> CLASS_IDENTIFIER)
WARNING: rejected rule (statement_covered_class_check -> CLASS_IDENTIFIER) in state 18
WARNING: reduce/reduce conflict in state 44 resolved using rule (primitive_class_mandatory -> CLASS_IDENTIFIER)
WARNING: rejected rule (closed_axiom_mandatory -> CLASS_IDENTIFIER) in state 44
