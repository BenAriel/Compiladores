Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALL
    DIVIDE
    DisjointWith
    Literal
    MINUS
    NCName
    NMTOKEN
    NOT
    Name
    PLUS
    PlainLiteral
    THAT
    TIMES
    XMLLiteral
    anyURI
    base64Binary
    boolean
    byte
    dateTime
    dateTimeStamp
    decimal
    double
    float
    hexBinary
    int
    integer
    langString
    languague
    long
    negativeInteger
    nonNegativeInteger
    owl
    rational
    rdf
    rdfs
    real
    string
    xsd

Grammar

Rule 0     S' -> statements
Rule 1     statements -> Class CLASS_IDENTIFIER statement_defined_class statements
Rule 2     statements -> Class CLASS_IDENTIFIER statement_defined_class
Rule 3     statements -> Class CLASS_IDENTIFIER statement_primitive_class
Rule 4     statements -> Class CLASS_IDENTIFIER statement_primitive_class statements
Rule 5     statements -> empty
Rule 6     statement_defined_class -> EquivalentTo_possible maybe_suclassof statement_class_disjoin statement_class_individuals
Rule 7     statement_defined_class -> subclassof_possible EquivalentTo_possible statement_class_disjoin statement_class_individuals
Rule 8     statement_primitive_class -> subclassof_possible statement_class_disjoin statement_class_individuals
Rule 9     EquivalentTo_possible -> EquivalentTo JustDefined
Rule 10    EquivalentTo_possible -> EquivalentTo nested
Rule 11    EquivalentTo_possible -> EquivalentTo statement_closed_axiom_class
Rule 12    EquivalentTo_possible -> EquivalentTo statement_enumerated_class
Rule 13    EquivalentTo_possible -> EquivalentTo statement_covered_class
Rule 14    maybe_suclassof -> subclassof_possible
Rule 15    maybe_suclassof -> empty
Rule 16    subclassof_possible -> SubClassOf statement_closed_axiom_class
Rule 17    subclassof_possible -> SubClassOf statement_enumerated_class
Rule 18    subclassof_possible -> SubClassOf statement_covered_class
Rule 19    subclassof_possible -> SubClassOf primitive_class_mandatory
Rule 20    JustDefined -> CLASS_IDENTIFIER COMMA expression statement_class_disjoin statement_class_individuals
Rule 21    JustDefined -> CLASS_IDENTIFIER AND expression statement_class_disjoin statement_class_individuals
Rule 22    JustDefined -> expression statement_class_disjoin statement_class_individuals
Rule 23    statement_reserved_word -> SOME
Rule 24    statement_reserved_word -> EXACTLY
Rule 25    statement_reserved_word -> MIN
Rule 26    statement_reserved_word -> MAX
Rule 27    statement_reserved_word -> OR
Rule 28    statement_reserved_word -> AND
Rule 29    statement_reserved_word -> VALUE
Rule 30    statement_others_reserved_word -> SOME
Rule 31    statement_others_reserved_word -> ONLY
Rule 32    statement_others_reserved_word -> OR
Rule 33    statement_others_reserved_word -> AND
Rule 34    statement_property_identify -> PROPERTY_IDENTIFIER_has
Rule 35    statement_property_identify -> PROPERTY_IDENTIFIER_is_Of
Rule 36    statement_property_identify -> PROPERTY_IDENTIFIER
Rule 37    primitive_class_mandatory -> CLASS_IDENTIFIER COMMA expression statement_class_disjoin statement_class_individuals
Rule 38    primitive_class_mandatory -> CLASS_IDENTIFIER AND expression statement_class_disjoin statement_class_individuals
Rule 39    primitive_class_mandatory -> expression statement_class_disjoin statement_class_individuals
Rule 40    primitive_class_mandatory -> CLASS_IDENTIFIER
Rule 41    statement_defined_class_equivalent -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN
Rule 42    statement_defined_class_equivalent -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent
Rule 43    statement_defined_class_equivalent -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN
Rule 44    statement_defined_class_equivalent -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent
Rule 45    statement_operator_symbol -> LESS_THAN
Rule 46    statement_operator_symbol -> GREATER_THAN
Rule 47    statement_operator_symbol -> EQUALS
Rule 48    statement_operator_symbol -> GREATER_THAN EQUALS
Rule 49    statement_operator_symbol -> LESS_THAN EQUALS
Rule 50    usually_inside_paren -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER
Rule 51    usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
Rule 52    usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE
Rule 53    usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER
Rule 54    usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
Rule 55    usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
Rule 56    usually_others_paren -> statement_property_identify statement_others_reserved_word LEFT_PAREN usually_others_others_paren
Rule 57    usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE
Rule 58    usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE
Rule 59    usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER
Rule 60    usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
Rule 61    usually_others_others_paren -> CLASS_IDENTIFIER RIGHT_PAREN
Rule 62    usually_others_others_paren -> CLASS_IDENTIFIER OR usually_others_others_paren
Rule 63    simple_paren -> LEFT_PAREN usually_inside_paren RIGHT_PAREN
Rule 64    expression -> usually_inside_paren
Rule 65    expression -> usually_others_paren
Rule 66    expression -> usually_inside_paren COMMA expression
Rule 67    expression -> simple_paren
Rule 68    expression -> simple_paren AND expression
Rule 69    statement_class_disjoin -> empty
Rule 70    statement_class_disjoin -> DisjointClasses statement_class_disjoin_check
Rule 71    statement_class_disjoin_check -> CLASS_IDENTIFIER
Rule 72    statement_class_disjoin_check -> CLASS_IDENTIFIER COMMA statement_class_disjoin_check
Rule 73    statement_class_individuals -> empty
Rule 74    statement_class_individuals -> Individuals statement_class_individuals_check
Rule 75    statement_class_individuals_check -> IndividualNames
Rule 76    statement_class_individuals_check -> IndividualNames COMMA statement_class_individuals_check
Rule 77    nested -> CLASS_IDENTIFIER AND nested_descriptions
Rule 78    nested -> CLASS_IDENTIFIER COMMA nested_descriptions
Rule 79    nested_descriptions -> nested_descriptions AND nested_descriptions
Rule 80    nested_descriptions -> nested_descriptions OR nested_descriptions
Rule 81    nested_descriptions -> LEFT_PAREN nested_descriptions RIGHT_PAREN
Rule 82    nested_descriptions -> statement_property_identify statement_others_reserved_word nested_descriptions
Rule 83    nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
Rule 84    nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER
Rule 85    nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE IndividualNames
Rule 86    nested_descriptions -> statement_property_identify VALUE IndividualNames
Rule 87    nested_descriptions -> statement_property_identify VALUE CLASS_IDENTIFIER
Rule 88    nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE nested_descriptions
Rule 89    nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER
Rule 90    nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY nested_descriptions
Rule 91    nested_descriptions -> statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER
Rule 92    nested_descriptions -> statement_property_identify statement_others_reserved_word SOME nested_descriptions
Rule 93    nested_descriptions -> CLASS_IDENTIFIER
Rule 94    statement_closed_axiom_class -> CLASS_IDENTIFIER COMMA expression statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN
Rule 95    statement_closed_axiom_class -> CLASS_IDENTIFIER AND expression statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN
Rule 96    statement_closed_axiom_class -> CLASS_IDENTIFIER expression statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN
Rule 97    closed_axiom_restriction_combination -> CLASS_IDENTIFIER
Rule 98    closed_axiom_restriction_combination -> CLASS_IDENTIFIER OR closed_axiom_restriction_combination
Rule 99    statement_enumerated_class -> LEFT_CURLY_BRACKET statement_enumerated_class_check RIGHT_CURLY_BRACKET
Rule 100   statement_enumerated_class_check -> IndividualNames
Rule 101   statement_enumerated_class_check -> IndividualNames COMMA statement_enumerated_class_check
Rule 102   statement_covered_class -> statement_covered_class_check
Rule 103   statement_covered_class_check -> CLASS_IDENTIFIER
Rule 104   statement_covered_class_check -> CLASS_IDENTIFIER OR statement_covered_class_check
Rule 105   empty -> <empty>

Terminals, with rules where they appear

ALL                  : 
AND                  : 21 28 33 38 68 77 79 95
CLASS_IDENTIFIER     : 1 2 3 4 20 21 37 38 40 41 42 50 53 55 59 61 62 71 72 77 78 83 84 87 89 91 93 94 95 96 97 98 103 104
COMMA                : 20 37 42 44 66 72 76 78 94 101
Class                : 1 2 3 4
DATA_TYPE            : 43 44 51 52 54 57 58 60
DIVIDE               : 
DisjointClasses      : 70
DisjointWith         : 
EQUALS               : 47 48 49
EXACTLY              : 24
EquivalentTo         : 9 10 11 12 13
GREATER_THAN         : 46 48
IndividualNames      : 75 76 85 86 100 101
Individuals          : 74
LEFT_BRACKET         : 43 44 54 60
LEFT_CURLY_BRACKET   : 99
LEFT_PAREN           : 56 63 81 94 95 96
LESS_THAN            : 45 49
Literal              : 
MAX                  : 26
MIN                  : 25
MINUS                : 
NAMESPACEID          : 43 44 51 52 54 57 58 60
NCName               : 
NMTOKEN              : 
NOT                  : 
NUMBER               : 43 44 52 53 54 58 59 60
Name                 : 
ONLY                 : 31 89 90 94 95 96
OR                   : 27 32 62 80 98 104
PLUS                 : 
PROPERTY_IDENTIFIER  : 36
PROPERTY_IDENTIFIER_has : 34
PROPERTY_IDENTIFIER_is_Of : 35
PlainLiteral         : 
RIGHT_BRACKET        : 43 44 54 60
RIGHT_CURLY_BRACKET  : 99
RIGHT_PAREN          : 41 42 43 44 61 63 81 94 95 96
SOME                 : 23 30 91 92
SubClassOf           : 16 17 18 19
THAT                 : 
TIMES                : 
VALUE                : 29 84 85 86 87 88
XMLLiteral           : 
anyURI               : 
base64Binary         : 
boolean              : 
byte                 : 
dateTime             : 
dateTimeStamp        : 
decimal              : 
double               : 
error                : 
float                : 
hexBinary            : 
int                  : 
integer              : 
langString           : 
languague            : 
long                 : 
negativeInteger      : 
nonNegativeInteger   : 
owl                  : 
rational             : 
rdf                  : 
rdfs                 : 
real                 : 
string               : 
xsd                  : 

Nonterminals, with rules where they appear

EquivalentTo_possible : 6 7
JustDefined          : 9
closed_axiom_restriction_combination : 94 95 96 98
empty                : 5 15 69 73
expression           : 20 21 22 37 38 39 66 68 94 95 96
maybe_suclassof      : 6
nested               : 10
nested_descriptions  : 77 78 79 79 80 80 81 82 88 90 92
primitive_class_mandatory : 19
simple_paren         : 67 68
statement_class_disjoin : 6 7 8 20 21 22 37 38 39
statement_class_disjoin_check : 70 72
statement_class_individuals : 6 7 8 20 21 22 37 38 39
statement_class_individuals_check : 74 76
statement_closed_axiom_class : 11 16
statement_covered_class : 13 18
statement_covered_class_check : 102 104
statement_defined_class : 1 2
statement_defined_class_equivalent : 42 44
statement_enumerated_class : 12 17
statement_enumerated_class_check : 99 101
statement_operator_symbol : 43 44 54 60
statement_others_reserved_word : 55 56 57 58 59 60 82 83 84 85 88 89 90 91 92
statement_primitive_class : 3 4
statement_property_identify : 41 42 43 44 50 51 52 53 54 55 56 57 58 59 60 82 83 84 85 86 87 88 89 90 91 92 94 95 96
statement_reserved_word : 41 42 43 44 50 51 52 53 54
statements           : 1 4 0
subclassof_possible  : 7 8 14
usually_inside_paren : 63 64 66
usually_others_others_paren : 56 62
usually_others_paren : 65

Parsing method: LALR

state 0

    (0) S' -> . statements
    (1) statements -> . Class CLASS_IDENTIFIER statement_defined_class statements
    (2) statements -> . Class CLASS_IDENTIFIER statement_defined_class
    (3) statements -> . Class CLASS_IDENTIFIER statement_primitive_class
    (4) statements -> . Class CLASS_IDENTIFIER statement_primitive_class statements
    (5) statements -> . empty
    (105) empty -> .

    Class           shift and go to state 2
    $end            reduce using rule 105 (empty -> .)

    statements                     shift and go to state 1
    empty                          shift and go to state 3

state 1

    (0) S' -> statements .



state 2

    (1) statements -> Class . CLASS_IDENTIFIER statement_defined_class statements
    (2) statements -> Class . CLASS_IDENTIFIER statement_defined_class
    (3) statements -> Class . CLASS_IDENTIFIER statement_primitive_class
    (4) statements -> Class . CLASS_IDENTIFIER statement_primitive_class statements

    CLASS_IDENTIFIER shift and go to state 4


state 3

    (5) statements -> empty .

    $end            reduce using rule 5 (statements -> empty .)


state 4

    (1) statements -> Class CLASS_IDENTIFIER . statement_defined_class statements
    (2) statements -> Class CLASS_IDENTIFIER . statement_defined_class
    (3) statements -> Class CLASS_IDENTIFIER . statement_primitive_class
    (4) statements -> Class CLASS_IDENTIFIER . statement_primitive_class statements
    (6) statement_defined_class -> . EquivalentTo_possible maybe_suclassof statement_class_disjoin statement_class_individuals
    (7) statement_defined_class -> . subclassof_possible EquivalentTo_possible statement_class_disjoin statement_class_individuals
    (8) statement_primitive_class -> . subclassof_possible statement_class_disjoin statement_class_individuals
    (9) EquivalentTo_possible -> . EquivalentTo JustDefined
    (10) EquivalentTo_possible -> . EquivalentTo nested
    (11) EquivalentTo_possible -> . EquivalentTo statement_closed_axiom_class
    (12) EquivalentTo_possible -> . EquivalentTo statement_enumerated_class
    (13) EquivalentTo_possible -> . EquivalentTo statement_covered_class
    (16) subclassof_possible -> . SubClassOf statement_closed_axiom_class
    (17) subclassof_possible -> . SubClassOf statement_enumerated_class
    (18) subclassof_possible -> . SubClassOf statement_covered_class
    (19) subclassof_possible -> . SubClassOf primitive_class_mandatory

    EquivalentTo    shift and go to state 9
    SubClassOf      shift and go to state 10

    statement_defined_class        shift and go to state 5
    statement_primitive_class      shift and go to state 6
    EquivalentTo_possible          shift and go to state 7
    subclassof_possible            shift and go to state 8

state 5

    (1) statements -> Class CLASS_IDENTIFIER statement_defined_class . statements
    (2) statements -> Class CLASS_IDENTIFIER statement_defined_class .
    (1) statements -> . Class CLASS_IDENTIFIER statement_defined_class statements
    (2) statements -> . Class CLASS_IDENTIFIER statement_defined_class
    (3) statements -> . Class CLASS_IDENTIFIER statement_primitive_class
    (4) statements -> . Class CLASS_IDENTIFIER statement_primitive_class statements
    (5) statements -> . empty
    (105) empty -> .

  ! reduce/reduce conflict for $end resolved using rule 2 (statements -> Class CLASS_IDENTIFIER statement_defined_class .)
    $end            reduce using rule 2 (statements -> Class CLASS_IDENTIFIER statement_defined_class .)
    Class           shift and go to state 2

  ! $end            [ reduce using rule 105 (empty -> .) ]

    statements                     shift and go to state 11
    empty                          shift and go to state 3

state 6

    (3) statements -> Class CLASS_IDENTIFIER statement_primitive_class .
    (4) statements -> Class CLASS_IDENTIFIER statement_primitive_class . statements
    (1) statements -> . Class CLASS_IDENTIFIER statement_defined_class statements
    (2) statements -> . Class CLASS_IDENTIFIER statement_defined_class
    (3) statements -> . Class CLASS_IDENTIFIER statement_primitive_class
    (4) statements -> . Class CLASS_IDENTIFIER statement_primitive_class statements
    (5) statements -> . empty
    (105) empty -> .

  ! reduce/reduce conflict for $end resolved using rule 3 (statements -> Class CLASS_IDENTIFIER statement_primitive_class .)
    $end            reduce using rule 3 (statements -> Class CLASS_IDENTIFIER statement_primitive_class .)
    Class           shift and go to state 2

  ! $end            [ reduce using rule 105 (empty -> .) ]

    statements                     shift and go to state 12
    empty                          shift and go to state 3

state 7

    (6) statement_defined_class -> EquivalentTo_possible . maybe_suclassof statement_class_disjoin statement_class_individuals
    (14) maybe_suclassof -> . subclassof_possible
    (15) maybe_suclassof -> . empty
    (16) subclassof_possible -> . SubClassOf statement_closed_axiom_class
    (17) subclassof_possible -> . SubClassOf statement_enumerated_class
    (18) subclassof_possible -> . SubClassOf statement_covered_class
    (19) subclassof_possible -> . SubClassOf primitive_class_mandatory
    (105) empty -> .

    SubClassOf      shift and go to state 10
    DisjointClasses reduce using rule 105 (empty -> .)
    Individuals     reduce using rule 105 (empty -> .)
    Class           reduce using rule 105 (empty -> .)
    $end            reduce using rule 105 (empty -> .)

    maybe_suclassof                shift and go to state 13
    subclassof_possible            shift and go to state 14
    empty                          shift and go to state 15

state 8

    (7) statement_defined_class -> subclassof_possible . EquivalentTo_possible statement_class_disjoin statement_class_individuals
    (8) statement_primitive_class -> subclassof_possible . statement_class_disjoin statement_class_individuals
    (9) EquivalentTo_possible -> . EquivalentTo JustDefined
    (10) EquivalentTo_possible -> . EquivalentTo nested
    (11) EquivalentTo_possible -> . EquivalentTo statement_closed_axiom_class
    (12) EquivalentTo_possible -> . EquivalentTo statement_enumerated_class
    (13) EquivalentTo_possible -> . EquivalentTo statement_covered_class
    (69) statement_class_disjoin -> . empty
    (70) statement_class_disjoin -> . DisjointClasses statement_class_disjoin_check
    (105) empty -> .

    EquivalentTo    shift and go to state 9
    DisjointClasses shift and go to state 19
    Individuals     reduce using rule 105 (empty -> .)
    Class           reduce using rule 105 (empty -> .)
    $end            reduce using rule 105 (empty -> .)

    EquivalentTo_possible          shift and go to state 16
    statement_class_disjoin        shift and go to state 17
    empty                          shift and go to state 18

state 9

    (9) EquivalentTo_possible -> EquivalentTo . JustDefined
    (10) EquivalentTo_possible -> EquivalentTo . nested
    (11) EquivalentTo_possible -> EquivalentTo . statement_closed_axiom_class
    (12) EquivalentTo_possible -> EquivalentTo . statement_enumerated_class
    (13) EquivalentTo_possible -> EquivalentTo . statement_covered_class
    (20) JustDefined -> . CLASS_IDENTIFIER COMMA expression statement_class_disjoin statement_class_individuals
    (21) JustDefined -> . CLASS_IDENTIFIER AND expression statement_class_disjoin statement_class_individuals
    (22) JustDefined -> . expression statement_class_disjoin statement_class_individuals
    (77) nested -> . CLASS_IDENTIFIER AND nested_descriptions
    (78) nested -> . CLASS_IDENTIFIER COMMA nested_descriptions
    (94) statement_closed_axiom_class -> . CLASS_IDENTIFIER COMMA expression statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN
    (95) statement_closed_axiom_class -> . CLASS_IDENTIFIER AND expression statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN
    (96) statement_closed_axiom_class -> . CLASS_IDENTIFIER expression statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN
    (99) statement_enumerated_class -> . LEFT_CURLY_BRACKET statement_enumerated_class_check RIGHT_CURLY_BRACKET
    (102) statement_covered_class -> . statement_covered_class_check
    (64) expression -> . usually_inside_paren
    (65) expression -> . usually_others_paren
    (66) expression -> . usually_inside_paren COMMA expression
    (67) expression -> . simple_paren
    (68) expression -> . simple_paren AND expression
    (103) statement_covered_class_check -> . CLASS_IDENTIFIER
    (104) statement_covered_class_check -> . CLASS_IDENTIFIER OR statement_covered_class_check
    (50) usually_inside_paren -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (51) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (52) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (53) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER
    (54) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (55) usually_others_paren -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (56) usually_others_paren -> . statement_property_identify statement_others_reserved_word LEFT_PAREN usually_others_others_paren
    (57) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE
    (58) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (59) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER
    (60) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (63) simple_paren -> . LEFT_PAREN usually_inside_paren RIGHT_PAREN
    (34) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (35) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (36) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 25
    LEFT_CURLY_BRACKET shift and go to state 29
    LEFT_PAREN      shift and go to state 28
    PROPERTY_IDENTIFIER_has shift and go to state 34
    PROPERTY_IDENTIFIER_is_Of shift and go to state 35
    PROPERTY_IDENTIFIER shift and go to state 36

    JustDefined                    shift and go to state 20
    nested                         shift and go to state 21
    statement_closed_axiom_class   shift and go to state 22
    statement_enumerated_class     shift and go to state 23
    statement_covered_class        shift and go to state 24
    expression                     shift and go to state 26
    statement_property_identify    shift and go to state 27
    statement_covered_class_check  shift and go to state 30
    usually_inside_paren           shift and go to state 31
    usually_others_paren           shift and go to state 32
    simple_paren                   shift and go to state 33

state 10

    (16) subclassof_possible -> SubClassOf . statement_closed_axiom_class
    (17) subclassof_possible -> SubClassOf . statement_enumerated_class
    (18) subclassof_possible -> SubClassOf . statement_covered_class
    (19) subclassof_possible -> SubClassOf . primitive_class_mandatory
    (94) statement_closed_axiom_class -> . CLASS_IDENTIFIER COMMA expression statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN
    (95) statement_closed_axiom_class -> . CLASS_IDENTIFIER AND expression statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN
    (96) statement_closed_axiom_class -> . CLASS_IDENTIFIER expression statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN
    (99) statement_enumerated_class -> . LEFT_CURLY_BRACKET statement_enumerated_class_check RIGHT_CURLY_BRACKET
    (102) statement_covered_class -> . statement_covered_class_check
    (37) primitive_class_mandatory -> . CLASS_IDENTIFIER COMMA expression statement_class_disjoin statement_class_individuals
    (38) primitive_class_mandatory -> . CLASS_IDENTIFIER AND expression statement_class_disjoin statement_class_individuals
    (39) primitive_class_mandatory -> . expression statement_class_disjoin statement_class_individuals
    (40) primitive_class_mandatory -> . CLASS_IDENTIFIER
    (103) statement_covered_class_check -> . CLASS_IDENTIFIER
    (104) statement_covered_class_check -> . CLASS_IDENTIFIER OR statement_covered_class_check
    (64) expression -> . usually_inside_paren
    (65) expression -> . usually_others_paren
    (66) expression -> . usually_inside_paren COMMA expression
    (67) expression -> . simple_paren
    (68) expression -> . simple_paren AND expression
    (50) usually_inside_paren -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (51) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (52) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (53) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER
    (54) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (55) usually_others_paren -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (56) usually_others_paren -> . statement_property_identify statement_others_reserved_word LEFT_PAREN usually_others_others_paren
    (57) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE
    (58) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (59) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER
    (60) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (63) simple_paren -> . LEFT_PAREN usually_inside_paren RIGHT_PAREN
    (34) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (35) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (36) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 41
    LEFT_CURLY_BRACKET shift and go to state 29
    LEFT_PAREN      shift and go to state 28
    PROPERTY_IDENTIFIER_has shift and go to state 34
    PROPERTY_IDENTIFIER_is_Of shift and go to state 35
    PROPERTY_IDENTIFIER shift and go to state 36

    statement_closed_axiom_class   shift and go to state 37
    statement_enumerated_class     shift and go to state 38
    statement_covered_class        shift and go to state 39
    primitive_class_mandatory      shift and go to state 40
    expression                     shift and go to state 42
    statement_property_identify    shift and go to state 27
    statement_covered_class_check  shift and go to state 30
    usually_inside_paren           shift and go to state 31
    usually_others_paren           shift and go to state 32
    simple_paren                   shift and go to state 33

state 11

    (1) statements -> Class CLASS_IDENTIFIER statement_defined_class statements .

    $end            reduce using rule 1 (statements -> Class CLASS_IDENTIFIER statement_defined_class statements .)


state 12

    (4) statements -> Class CLASS_IDENTIFIER statement_primitive_class statements .

    $end            reduce using rule 4 (statements -> Class CLASS_IDENTIFIER statement_primitive_class statements .)


state 13

    (6) statement_defined_class -> EquivalentTo_possible maybe_suclassof . statement_class_disjoin statement_class_individuals
    (69) statement_class_disjoin -> . empty
    (70) statement_class_disjoin -> . DisjointClasses statement_class_disjoin_check
    (105) empty -> .

    DisjointClasses shift and go to state 19
    Individuals     reduce using rule 105 (empty -> .)
    Class           reduce using rule 105 (empty -> .)
    $end            reduce using rule 105 (empty -> .)

    statement_class_disjoin        shift and go to state 43
    empty                          shift and go to state 18

state 14

    (14) maybe_suclassof -> subclassof_possible .

    DisjointClasses reduce using rule 14 (maybe_suclassof -> subclassof_possible .)
    Individuals     reduce using rule 14 (maybe_suclassof -> subclassof_possible .)
    Class           reduce using rule 14 (maybe_suclassof -> subclassof_possible .)
    $end            reduce using rule 14 (maybe_suclassof -> subclassof_possible .)


state 15

    (15) maybe_suclassof -> empty .

    DisjointClasses reduce using rule 15 (maybe_suclassof -> empty .)
    Individuals     reduce using rule 15 (maybe_suclassof -> empty .)
    Class           reduce using rule 15 (maybe_suclassof -> empty .)
    $end            reduce using rule 15 (maybe_suclassof -> empty .)


state 16

    (7) statement_defined_class -> subclassof_possible EquivalentTo_possible . statement_class_disjoin statement_class_individuals
    (69) statement_class_disjoin -> . empty
    (70) statement_class_disjoin -> . DisjointClasses statement_class_disjoin_check
    (105) empty -> .

    DisjointClasses shift and go to state 19
    Individuals     reduce using rule 105 (empty -> .)
    Class           reduce using rule 105 (empty -> .)
    $end            reduce using rule 105 (empty -> .)

    statement_class_disjoin        shift and go to state 44
    empty                          shift and go to state 18

state 17

    (8) statement_primitive_class -> subclassof_possible statement_class_disjoin . statement_class_individuals
    (73) statement_class_individuals -> . empty
    (74) statement_class_individuals -> . Individuals statement_class_individuals_check
    (105) empty -> .

    Individuals     shift and go to state 47
    Class           reduce using rule 105 (empty -> .)
    $end            reduce using rule 105 (empty -> .)

    statement_class_individuals    shift and go to state 45
    empty                          shift and go to state 46

state 18

    (69) statement_class_disjoin -> empty .

    Individuals     reduce using rule 69 (statement_class_disjoin -> empty .)
    Class           reduce using rule 69 (statement_class_disjoin -> empty .)
    $end            reduce using rule 69 (statement_class_disjoin -> empty .)
    SubClassOf      reduce using rule 69 (statement_class_disjoin -> empty .)
    DisjointClasses reduce using rule 69 (statement_class_disjoin -> empty .)
    EquivalentTo    reduce using rule 69 (statement_class_disjoin -> empty .)


state 19

    (70) statement_class_disjoin -> DisjointClasses . statement_class_disjoin_check
    (71) statement_class_disjoin_check -> . CLASS_IDENTIFIER
    (72) statement_class_disjoin_check -> . CLASS_IDENTIFIER COMMA statement_class_disjoin_check

    CLASS_IDENTIFIER shift and go to state 49

    statement_class_disjoin_check  shift and go to state 48

state 20

    (9) EquivalentTo_possible -> EquivalentTo JustDefined .

    SubClassOf      reduce using rule 9 (EquivalentTo_possible -> EquivalentTo JustDefined .)
    DisjointClasses reduce using rule 9 (EquivalentTo_possible -> EquivalentTo JustDefined .)
    Individuals     reduce using rule 9 (EquivalentTo_possible -> EquivalentTo JustDefined .)
    Class           reduce using rule 9 (EquivalentTo_possible -> EquivalentTo JustDefined .)
    $end            reduce using rule 9 (EquivalentTo_possible -> EquivalentTo JustDefined .)


state 21

    (10) EquivalentTo_possible -> EquivalentTo nested .

    SubClassOf      reduce using rule 10 (EquivalentTo_possible -> EquivalentTo nested .)
    DisjointClasses reduce using rule 10 (EquivalentTo_possible -> EquivalentTo nested .)
    Individuals     reduce using rule 10 (EquivalentTo_possible -> EquivalentTo nested .)
    Class           reduce using rule 10 (EquivalentTo_possible -> EquivalentTo nested .)
    $end            reduce using rule 10 (EquivalentTo_possible -> EquivalentTo nested .)


state 22

    (11) EquivalentTo_possible -> EquivalentTo statement_closed_axiom_class .

    SubClassOf      reduce using rule 11 (EquivalentTo_possible -> EquivalentTo statement_closed_axiom_class .)
    DisjointClasses reduce using rule 11 (EquivalentTo_possible -> EquivalentTo statement_closed_axiom_class .)
    Individuals     reduce using rule 11 (EquivalentTo_possible -> EquivalentTo statement_closed_axiom_class .)
    Class           reduce using rule 11 (EquivalentTo_possible -> EquivalentTo statement_closed_axiom_class .)
    $end            reduce using rule 11 (EquivalentTo_possible -> EquivalentTo statement_closed_axiom_class .)


state 23

    (12) EquivalentTo_possible -> EquivalentTo statement_enumerated_class .

    SubClassOf      reduce using rule 12 (EquivalentTo_possible -> EquivalentTo statement_enumerated_class .)
    DisjointClasses reduce using rule 12 (EquivalentTo_possible -> EquivalentTo statement_enumerated_class .)
    Individuals     reduce using rule 12 (EquivalentTo_possible -> EquivalentTo statement_enumerated_class .)
    Class           reduce using rule 12 (EquivalentTo_possible -> EquivalentTo statement_enumerated_class .)
    $end            reduce using rule 12 (EquivalentTo_possible -> EquivalentTo statement_enumerated_class .)


state 24

    (13) EquivalentTo_possible -> EquivalentTo statement_covered_class .

    SubClassOf      reduce using rule 13 (EquivalentTo_possible -> EquivalentTo statement_covered_class .)
    DisjointClasses reduce using rule 13 (EquivalentTo_possible -> EquivalentTo statement_covered_class .)
    Individuals     reduce using rule 13 (EquivalentTo_possible -> EquivalentTo statement_covered_class .)
    Class           reduce using rule 13 (EquivalentTo_possible -> EquivalentTo statement_covered_class .)
    $end            reduce using rule 13 (EquivalentTo_possible -> EquivalentTo statement_covered_class .)


state 25

    (20) JustDefined -> CLASS_IDENTIFIER . COMMA expression statement_class_disjoin statement_class_individuals
    (21) JustDefined -> CLASS_IDENTIFIER . AND expression statement_class_disjoin statement_class_individuals
    (77) nested -> CLASS_IDENTIFIER . AND nested_descriptions
    (78) nested -> CLASS_IDENTIFIER . COMMA nested_descriptions
    (94) statement_closed_axiom_class -> CLASS_IDENTIFIER . COMMA expression statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN
    (95) statement_closed_axiom_class -> CLASS_IDENTIFIER . AND expression statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN
    (96) statement_closed_axiom_class -> CLASS_IDENTIFIER . expression statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN
    (103) statement_covered_class_check -> CLASS_IDENTIFIER .
    (104) statement_covered_class_check -> CLASS_IDENTIFIER . OR statement_covered_class_check
    (64) expression -> . usually_inside_paren
    (65) expression -> . usually_others_paren
    (66) expression -> . usually_inside_paren COMMA expression
    (67) expression -> . simple_paren
    (68) expression -> . simple_paren AND expression
    (50) usually_inside_paren -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (51) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (52) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (53) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER
    (54) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (55) usually_others_paren -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (56) usually_others_paren -> . statement_property_identify statement_others_reserved_word LEFT_PAREN usually_others_others_paren
    (57) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE
    (58) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (59) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER
    (60) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (63) simple_paren -> . LEFT_PAREN usually_inside_paren RIGHT_PAREN
    (34) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (35) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (36) statement_property_identify -> . PROPERTY_IDENTIFIER

    COMMA           shift and go to state 50
    AND             shift and go to state 52
    SubClassOf      reduce using rule 103 (statement_covered_class_check -> CLASS_IDENTIFIER .)
    DisjointClasses reduce using rule 103 (statement_covered_class_check -> CLASS_IDENTIFIER .)
    Individuals     reduce using rule 103 (statement_covered_class_check -> CLASS_IDENTIFIER .)
    Class           reduce using rule 103 (statement_covered_class_check -> CLASS_IDENTIFIER .)
    $end            reduce using rule 103 (statement_covered_class_check -> CLASS_IDENTIFIER .)
    OR              shift and go to state 53
    LEFT_PAREN      shift and go to state 28
    PROPERTY_IDENTIFIER_has shift and go to state 34
    PROPERTY_IDENTIFIER_is_Of shift and go to state 35
    PROPERTY_IDENTIFIER shift and go to state 36

    expression                     shift and go to state 51
    statement_property_identify    shift and go to state 27
    usually_inside_paren           shift and go to state 31
    usually_others_paren           shift and go to state 32
    simple_paren                   shift and go to state 33

state 26

    (22) JustDefined -> expression . statement_class_disjoin statement_class_individuals
    (69) statement_class_disjoin -> . empty
    (70) statement_class_disjoin -> . DisjointClasses statement_class_disjoin_check
    (105) empty -> .

  ! shift/reduce conflict for DisjointClasses resolved as shift
    DisjointClasses shift and go to state 19
    Individuals     reduce using rule 105 (empty -> .)
    SubClassOf      reduce using rule 105 (empty -> .)
    Class           reduce using rule 105 (empty -> .)
    $end            reduce using rule 105 (empty -> .)

  ! DisjointClasses [ reduce using rule 105 (empty -> .) ]

    statement_class_disjoin        shift and go to state 54
    empty                          shift and go to state 18

state 27

    (50) usually_inside_paren -> statement_property_identify . statement_reserved_word CLASS_IDENTIFIER
    (51) usually_inside_paren -> statement_property_identify . statement_reserved_word NAMESPACEID DATA_TYPE
    (52) usually_inside_paren -> statement_property_identify . statement_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (53) usually_inside_paren -> statement_property_identify . statement_reserved_word NUMBER CLASS_IDENTIFIER
    (54) usually_inside_paren -> statement_property_identify . statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (55) usually_others_paren -> statement_property_identify . statement_others_reserved_word CLASS_IDENTIFIER
    (56) usually_others_paren -> statement_property_identify . statement_others_reserved_word LEFT_PAREN usually_others_others_paren
    (57) usually_others_paren -> statement_property_identify . statement_others_reserved_word NAMESPACEID DATA_TYPE
    (58) usually_others_paren -> statement_property_identify . statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (59) usually_others_paren -> statement_property_identify . statement_others_reserved_word NUMBER CLASS_IDENTIFIER
    (60) usually_others_paren -> statement_property_identify . statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (23) statement_reserved_word -> . SOME
    (24) statement_reserved_word -> . EXACTLY
    (25) statement_reserved_word -> . MIN
    (26) statement_reserved_word -> . MAX
    (27) statement_reserved_word -> . OR
    (28) statement_reserved_word -> . AND
    (29) statement_reserved_word -> . VALUE
    (30) statement_others_reserved_word -> . SOME
    (31) statement_others_reserved_word -> . ONLY
    (32) statement_others_reserved_word -> . OR
    (33) statement_others_reserved_word -> . AND

    SOME            shift and go to state 57
    EXACTLY         shift and go to state 58
    MIN             shift and go to state 59
    MAX             shift and go to state 60
    OR              shift and go to state 61
    AND             shift and go to state 62
    VALUE           shift and go to state 63
    ONLY            shift and go to state 64

    statement_reserved_word        shift and go to state 55
    statement_others_reserved_word shift and go to state 56

state 28

    (63) simple_paren -> LEFT_PAREN . usually_inside_paren RIGHT_PAREN
    (50) usually_inside_paren -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (51) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (52) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (53) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER
    (54) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (34) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (35) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (36) statement_property_identify -> . PROPERTY_IDENTIFIER

    PROPERTY_IDENTIFIER_has shift and go to state 34
    PROPERTY_IDENTIFIER_is_Of shift and go to state 35
    PROPERTY_IDENTIFIER shift and go to state 36

    usually_inside_paren           shift and go to state 65
    statement_property_identify    shift and go to state 66

state 29

    (99) statement_enumerated_class -> LEFT_CURLY_BRACKET . statement_enumerated_class_check RIGHT_CURLY_BRACKET
    (100) statement_enumerated_class_check -> . IndividualNames
    (101) statement_enumerated_class_check -> . IndividualNames COMMA statement_enumerated_class_check

    IndividualNames shift and go to state 68

    statement_enumerated_class_check shift and go to state 67

state 30

    (102) statement_covered_class -> statement_covered_class_check .

    SubClassOf      reduce using rule 102 (statement_covered_class -> statement_covered_class_check .)
    DisjointClasses reduce using rule 102 (statement_covered_class -> statement_covered_class_check .)
    Individuals     reduce using rule 102 (statement_covered_class -> statement_covered_class_check .)
    Class           reduce using rule 102 (statement_covered_class -> statement_covered_class_check .)
    $end            reduce using rule 102 (statement_covered_class -> statement_covered_class_check .)
    EquivalentTo    reduce using rule 102 (statement_covered_class -> statement_covered_class_check .)


state 31

    (64) expression -> usually_inside_paren .
    (66) expression -> usually_inside_paren . COMMA expression

    DisjointClasses reduce using rule 64 (expression -> usually_inside_paren .)
    Individuals     reduce using rule 64 (expression -> usually_inside_paren .)
    SubClassOf      reduce using rule 64 (expression -> usually_inside_paren .)
    Class           reduce using rule 64 (expression -> usually_inside_paren .)
    $end            reduce using rule 64 (expression -> usually_inside_paren .)
    EquivalentTo    reduce using rule 64 (expression -> usually_inside_paren .)
    PROPERTY_IDENTIFIER_has reduce using rule 64 (expression -> usually_inside_paren .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 64 (expression -> usually_inside_paren .)
    PROPERTY_IDENTIFIER reduce using rule 64 (expression -> usually_inside_paren .)
    COMMA           shift and go to state 69


state 32

    (65) expression -> usually_others_paren .

    DisjointClasses reduce using rule 65 (expression -> usually_others_paren .)
    Individuals     reduce using rule 65 (expression -> usually_others_paren .)
    SubClassOf      reduce using rule 65 (expression -> usually_others_paren .)
    Class           reduce using rule 65 (expression -> usually_others_paren .)
    $end            reduce using rule 65 (expression -> usually_others_paren .)
    EquivalentTo    reduce using rule 65 (expression -> usually_others_paren .)
    PROPERTY_IDENTIFIER_has reduce using rule 65 (expression -> usually_others_paren .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 65 (expression -> usually_others_paren .)
    PROPERTY_IDENTIFIER reduce using rule 65 (expression -> usually_others_paren .)


state 33

    (67) expression -> simple_paren .
    (68) expression -> simple_paren . AND expression

    DisjointClasses reduce using rule 67 (expression -> simple_paren .)
    Individuals     reduce using rule 67 (expression -> simple_paren .)
    SubClassOf      reduce using rule 67 (expression -> simple_paren .)
    Class           reduce using rule 67 (expression -> simple_paren .)
    $end            reduce using rule 67 (expression -> simple_paren .)
    EquivalentTo    reduce using rule 67 (expression -> simple_paren .)
    PROPERTY_IDENTIFIER_has reduce using rule 67 (expression -> simple_paren .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 67 (expression -> simple_paren .)
    PROPERTY_IDENTIFIER reduce using rule 67 (expression -> simple_paren .)
    AND             shift and go to state 70


state 34

    (34) statement_property_identify -> PROPERTY_IDENTIFIER_has .

    SOME            reduce using rule 34 (statement_property_identify -> PROPERTY_IDENTIFIER_has .)
    EXACTLY         reduce using rule 34 (statement_property_identify -> PROPERTY_IDENTIFIER_has .)
    MIN             reduce using rule 34 (statement_property_identify -> PROPERTY_IDENTIFIER_has .)
    MAX             reduce using rule 34 (statement_property_identify -> PROPERTY_IDENTIFIER_has .)
    OR              reduce using rule 34 (statement_property_identify -> PROPERTY_IDENTIFIER_has .)
    AND             reduce using rule 34 (statement_property_identify -> PROPERTY_IDENTIFIER_has .)
    VALUE           reduce using rule 34 (statement_property_identify -> PROPERTY_IDENTIFIER_has .)
    ONLY            reduce using rule 34 (statement_property_identify -> PROPERTY_IDENTIFIER_has .)


state 35

    (35) statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .

    SOME            reduce using rule 35 (statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .)
    EXACTLY         reduce using rule 35 (statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .)
    MIN             reduce using rule 35 (statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .)
    MAX             reduce using rule 35 (statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .)
    OR              reduce using rule 35 (statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .)
    AND             reduce using rule 35 (statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .)
    VALUE           reduce using rule 35 (statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .)
    ONLY            reduce using rule 35 (statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .)


state 36

    (36) statement_property_identify -> PROPERTY_IDENTIFIER .

    SOME            reduce using rule 36 (statement_property_identify -> PROPERTY_IDENTIFIER .)
    EXACTLY         reduce using rule 36 (statement_property_identify -> PROPERTY_IDENTIFIER .)
    MIN             reduce using rule 36 (statement_property_identify -> PROPERTY_IDENTIFIER .)
    MAX             reduce using rule 36 (statement_property_identify -> PROPERTY_IDENTIFIER .)
    OR              reduce using rule 36 (statement_property_identify -> PROPERTY_IDENTIFIER .)
    AND             reduce using rule 36 (statement_property_identify -> PROPERTY_IDENTIFIER .)
    VALUE           reduce using rule 36 (statement_property_identify -> PROPERTY_IDENTIFIER .)
    ONLY            reduce using rule 36 (statement_property_identify -> PROPERTY_IDENTIFIER .)


state 37

    (16) subclassof_possible -> SubClassOf statement_closed_axiom_class .

    EquivalentTo    reduce using rule 16 (subclassof_possible -> SubClassOf statement_closed_axiom_class .)
    DisjointClasses reduce using rule 16 (subclassof_possible -> SubClassOf statement_closed_axiom_class .)
    Individuals     reduce using rule 16 (subclassof_possible -> SubClassOf statement_closed_axiom_class .)
    Class           reduce using rule 16 (subclassof_possible -> SubClassOf statement_closed_axiom_class .)
    $end            reduce using rule 16 (subclassof_possible -> SubClassOf statement_closed_axiom_class .)


state 38

    (17) subclassof_possible -> SubClassOf statement_enumerated_class .

    EquivalentTo    reduce using rule 17 (subclassof_possible -> SubClassOf statement_enumerated_class .)
    DisjointClasses reduce using rule 17 (subclassof_possible -> SubClassOf statement_enumerated_class .)
    Individuals     reduce using rule 17 (subclassof_possible -> SubClassOf statement_enumerated_class .)
    Class           reduce using rule 17 (subclassof_possible -> SubClassOf statement_enumerated_class .)
    $end            reduce using rule 17 (subclassof_possible -> SubClassOf statement_enumerated_class .)


state 39

    (18) subclassof_possible -> SubClassOf statement_covered_class .

    EquivalentTo    reduce using rule 18 (subclassof_possible -> SubClassOf statement_covered_class .)
    DisjointClasses reduce using rule 18 (subclassof_possible -> SubClassOf statement_covered_class .)
    Individuals     reduce using rule 18 (subclassof_possible -> SubClassOf statement_covered_class .)
    Class           reduce using rule 18 (subclassof_possible -> SubClassOf statement_covered_class .)
    $end            reduce using rule 18 (subclassof_possible -> SubClassOf statement_covered_class .)


state 40

    (19) subclassof_possible -> SubClassOf primitive_class_mandatory .

    EquivalentTo    reduce using rule 19 (subclassof_possible -> SubClassOf primitive_class_mandatory .)
    DisjointClasses reduce using rule 19 (subclassof_possible -> SubClassOf primitive_class_mandatory .)
    Individuals     reduce using rule 19 (subclassof_possible -> SubClassOf primitive_class_mandatory .)
    Class           reduce using rule 19 (subclassof_possible -> SubClassOf primitive_class_mandatory .)
    $end            reduce using rule 19 (subclassof_possible -> SubClassOf primitive_class_mandatory .)


state 41

    (94) statement_closed_axiom_class -> CLASS_IDENTIFIER . COMMA expression statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN
    (95) statement_closed_axiom_class -> CLASS_IDENTIFIER . AND expression statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN
    (96) statement_closed_axiom_class -> CLASS_IDENTIFIER . expression statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN
    (37) primitive_class_mandatory -> CLASS_IDENTIFIER . COMMA expression statement_class_disjoin statement_class_individuals
    (38) primitive_class_mandatory -> CLASS_IDENTIFIER . AND expression statement_class_disjoin statement_class_individuals
    (40) primitive_class_mandatory -> CLASS_IDENTIFIER .
    (103) statement_covered_class_check -> CLASS_IDENTIFIER .
    (104) statement_covered_class_check -> CLASS_IDENTIFIER . OR statement_covered_class_check
    (64) expression -> . usually_inside_paren
    (65) expression -> . usually_others_paren
    (66) expression -> . usually_inside_paren COMMA expression
    (67) expression -> . simple_paren
    (68) expression -> . simple_paren AND expression
    (50) usually_inside_paren -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (51) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (52) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (53) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER
    (54) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (55) usually_others_paren -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (56) usually_others_paren -> . statement_property_identify statement_others_reserved_word LEFT_PAREN usually_others_others_paren
    (57) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE
    (58) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (59) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER
    (60) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (63) simple_paren -> . LEFT_PAREN usually_inside_paren RIGHT_PAREN
    (34) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (35) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (36) statement_property_identify -> . PROPERTY_IDENTIFIER

  ! reduce/reduce conflict for EquivalentTo resolved using rule 40 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for DisjointClasses resolved using rule 40 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for Individuals resolved using rule 40 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for Class resolved using rule 40 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 40 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    COMMA           shift and go to state 71
    AND             shift and go to state 72
    EquivalentTo    reduce using rule 40 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    DisjointClasses reduce using rule 40 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    Individuals     reduce using rule 40 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    Class           reduce using rule 40 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    $end            reduce using rule 40 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    OR              shift and go to state 53
    LEFT_PAREN      shift and go to state 28
    PROPERTY_IDENTIFIER_has shift and go to state 34
    PROPERTY_IDENTIFIER_is_Of shift and go to state 35
    PROPERTY_IDENTIFIER shift and go to state 36

  ! EquivalentTo    [ reduce using rule 103 (statement_covered_class_check -> CLASS_IDENTIFIER .) ]
  ! DisjointClasses [ reduce using rule 103 (statement_covered_class_check -> CLASS_IDENTIFIER .) ]
  ! Individuals     [ reduce using rule 103 (statement_covered_class_check -> CLASS_IDENTIFIER .) ]
  ! Class           [ reduce using rule 103 (statement_covered_class_check -> CLASS_IDENTIFIER .) ]
  ! $end            [ reduce using rule 103 (statement_covered_class_check -> CLASS_IDENTIFIER .) ]

    expression                     shift and go to state 51
    statement_property_identify    shift and go to state 27
    usually_inside_paren           shift and go to state 31
    usually_others_paren           shift and go to state 32
    simple_paren                   shift and go to state 33

state 42

    (39) primitive_class_mandatory -> expression . statement_class_disjoin statement_class_individuals
    (69) statement_class_disjoin -> . empty
    (70) statement_class_disjoin -> . DisjointClasses statement_class_disjoin_check
    (105) empty -> .

  ! shift/reduce conflict for DisjointClasses resolved as shift
    DisjointClasses shift and go to state 19
    Individuals     reduce using rule 105 (empty -> .)
    EquivalentTo    reduce using rule 105 (empty -> .)
    Class           reduce using rule 105 (empty -> .)
    $end            reduce using rule 105 (empty -> .)

  ! DisjointClasses [ reduce using rule 105 (empty -> .) ]

    statement_class_disjoin        shift and go to state 73
    empty                          shift and go to state 18

state 43

    (6) statement_defined_class -> EquivalentTo_possible maybe_suclassof statement_class_disjoin . statement_class_individuals
    (73) statement_class_individuals -> . empty
    (74) statement_class_individuals -> . Individuals statement_class_individuals_check
    (105) empty -> .

    Individuals     shift and go to state 47
    Class           reduce using rule 105 (empty -> .)
    $end            reduce using rule 105 (empty -> .)

    statement_class_individuals    shift and go to state 74
    empty                          shift and go to state 46

state 44

    (7) statement_defined_class -> subclassof_possible EquivalentTo_possible statement_class_disjoin . statement_class_individuals
    (73) statement_class_individuals -> . empty
    (74) statement_class_individuals -> . Individuals statement_class_individuals_check
    (105) empty -> .

    Individuals     shift and go to state 47
    Class           reduce using rule 105 (empty -> .)
    $end            reduce using rule 105 (empty -> .)

    statement_class_individuals    shift and go to state 75
    empty                          shift and go to state 46

state 45

    (8) statement_primitive_class -> subclassof_possible statement_class_disjoin statement_class_individuals .

    Class           reduce using rule 8 (statement_primitive_class -> subclassof_possible statement_class_disjoin statement_class_individuals .)
    $end            reduce using rule 8 (statement_primitive_class -> subclassof_possible statement_class_disjoin statement_class_individuals .)


state 46

    (73) statement_class_individuals -> empty .

    Class           reduce using rule 73 (statement_class_individuals -> empty .)
    $end            reduce using rule 73 (statement_class_individuals -> empty .)
    SubClassOf      reduce using rule 73 (statement_class_individuals -> empty .)
    DisjointClasses reduce using rule 73 (statement_class_individuals -> empty .)
    Individuals     reduce using rule 73 (statement_class_individuals -> empty .)
    EquivalentTo    reduce using rule 73 (statement_class_individuals -> empty .)


state 47

    (74) statement_class_individuals -> Individuals . statement_class_individuals_check
    (75) statement_class_individuals_check -> . IndividualNames
    (76) statement_class_individuals_check -> . IndividualNames COMMA statement_class_individuals_check

    IndividualNames shift and go to state 77

    statement_class_individuals_check shift and go to state 76

state 48

    (70) statement_class_disjoin -> DisjointClasses statement_class_disjoin_check .

    Individuals     reduce using rule 70 (statement_class_disjoin -> DisjointClasses statement_class_disjoin_check .)
    Class           reduce using rule 70 (statement_class_disjoin -> DisjointClasses statement_class_disjoin_check .)
    $end            reduce using rule 70 (statement_class_disjoin -> DisjointClasses statement_class_disjoin_check .)
    SubClassOf      reduce using rule 70 (statement_class_disjoin -> DisjointClasses statement_class_disjoin_check .)
    DisjointClasses reduce using rule 70 (statement_class_disjoin -> DisjointClasses statement_class_disjoin_check .)
    EquivalentTo    reduce using rule 70 (statement_class_disjoin -> DisjointClasses statement_class_disjoin_check .)


state 49

    (71) statement_class_disjoin_check -> CLASS_IDENTIFIER .
    (72) statement_class_disjoin_check -> CLASS_IDENTIFIER . COMMA statement_class_disjoin_check

    Individuals     reduce using rule 71 (statement_class_disjoin_check -> CLASS_IDENTIFIER .)
    Class           reduce using rule 71 (statement_class_disjoin_check -> CLASS_IDENTIFIER .)
    $end            reduce using rule 71 (statement_class_disjoin_check -> CLASS_IDENTIFIER .)
    SubClassOf      reduce using rule 71 (statement_class_disjoin_check -> CLASS_IDENTIFIER .)
    DisjointClasses reduce using rule 71 (statement_class_disjoin_check -> CLASS_IDENTIFIER .)
    EquivalentTo    reduce using rule 71 (statement_class_disjoin_check -> CLASS_IDENTIFIER .)
    COMMA           shift and go to state 78


state 50

    (20) JustDefined -> CLASS_IDENTIFIER COMMA . expression statement_class_disjoin statement_class_individuals
    (78) nested -> CLASS_IDENTIFIER COMMA . nested_descriptions
    (94) statement_closed_axiom_class -> CLASS_IDENTIFIER COMMA . expression statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN
    (64) expression -> . usually_inside_paren
    (65) expression -> . usually_others_paren
    (66) expression -> . usually_inside_paren COMMA expression
    (67) expression -> . simple_paren
    (68) expression -> . simple_paren AND expression
    (79) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (80) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (81) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (82) nested_descriptions -> . statement_property_identify statement_others_reserved_word nested_descriptions
    (83) nested_descriptions -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (84) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER
    (85) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE IndividualNames
    (86) nested_descriptions -> . statement_property_identify VALUE IndividualNames
    (87) nested_descriptions -> . statement_property_identify VALUE CLASS_IDENTIFIER
    (88) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE nested_descriptions
    (89) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER
    (90) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY nested_descriptions
    (91) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER
    (92) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME nested_descriptions
    (93) nested_descriptions -> . CLASS_IDENTIFIER
    (50) usually_inside_paren -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (51) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (52) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (53) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER
    (54) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (55) usually_others_paren -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (56) usually_others_paren -> . statement_property_identify statement_others_reserved_word LEFT_PAREN usually_others_others_paren
    (57) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE
    (58) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (59) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER
    (60) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (63) simple_paren -> . LEFT_PAREN usually_inside_paren RIGHT_PAREN
    (34) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (35) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (36) statement_property_identify -> . PROPERTY_IDENTIFIER

    LEFT_PAREN      shift and go to state 83
    CLASS_IDENTIFIER shift and go to state 79
    PROPERTY_IDENTIFIER_has shift and go to state 34
    PROPERTY_IDENTIFIER_is_Of shift and go to state 35
    PROPERTY_IDENTIFIER shift and go to state 36

    expression                     shift and go to state 80
    nested_descriptions            shift and go to state 81
    statement_property_identify    shift and go to state 82
    usually_inside_paren           shift and go to state 31
    usually_others_paren           shift and go to state 32
    simple_paren                   shift and go to state 33

state 51

    (96) statement_closed_axiom_class -> CLASS_IDENTIFIER expression . statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN
    (34) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (35) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (36) statement_property_identify -> . PROPERTY_IDENTIFIER

    PROPERTY_IDENTIFIER_has shift and go to state 34
    PROPERTY_IDENTIFIER_is_Of shift and go to state 35
    PROPERTY_IDENTIFIER shift and go to state 36

    statement_property_identify    shift and go to state 84

state 52

    (21) JustDefined -> CLASS_IDENTIFIER AND . expression statement_class_disjoin statement_class_individuals
    (77) nested -> CLASS_IDENTIFIER AND . nested_descriptions
    (95) statement_closed_axiom_class -> CLASS_IDENTIFIER AND . expression statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN
    (64) expression -> . usually_inside_paren
    (65) expression -> . usually_others_paren
    (66) expression -> . usually_inside_paren COMMA expression
    (67) expression -> . simple_paren
    (68) expression -> . simple_paren AND expression
    (79) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (80) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (81) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (82) nested_descriptions -> . statement_property_identify statement_others_reserved_word nested_descriptions
    (83) nested_descriptions -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (84) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER
    (85) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE IndividualNames
    (86) nested_descriptions -> . statement_property_identify VALUE IndividualNames
    (87) nested_descriptions -> . statement_property_identify VALUE CLASS_IDENTIFIER
    (88) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE nested_descriptions
    (89) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER
    (90) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY nested_descriptions
    (91) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER
    (92) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME nested_descriptions
    (93) nested_descriptions -> . CLASS_IDENTIFIER
    (50) usually_inside_paren -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (51) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (52) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (53) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER
    (54) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (55) usually_others_paren -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (56) usually_others_paren -> . statement_property_identify statement_others_reserved_word LEFT_PAREN usually_others_others_paren
    (57) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE
    (58) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (59) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER
    (60) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (63) simple_paren -> . LEFT_PAREN usually_inside_paren RIGHT_PAREN
    (34) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (35) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (36) statement_property_identify -> . PROPERTY_IDENTIFIER

    LEFT_PAREN      shift and go to state 83
    CLASS_IDENTIFIER shift and go to state 79
    PROPERTY_IDENTIFIER_has shift and go to state 34
    PROPERTY_IDENTIFIER_is_Of shift and go to state 35
    PROPERTY_IDENTIFIER shift and go to state 36

    expression                     shift and go to state 85
    nested_descriptions            shift and go to state 86
    statement_property_identify    shift and go to state 82
    usually_inside_paren           shift and go to state 31
    usually_others_paren           shift and go to state 32
    simple_paren                   shift and go to state 33

state 53

    (104) statement_covered_class_check -> CLASS_IDENTIFIER OR . statement_covered_class_check
    (103) statement_covered_class_check -> . CLASS_IDENTIFIER
    (104) statement_covered_class_check -> . CLASS_IDENTIFIER OR statement_covered_class_check

    CLASS_IDENTIFIER shift and go to state 87

    statement_covered_class_check  shift and go to state 88

state 54

    (22) JustDefined -> expression statement_class_disjoin . statement_class_individuals
    (73) statement_class_individuals -> . empty
    (74) statement_class_individuals -> . Individuals statement_class_individuals_check
    (105) empty -> .

  ! shift/reduce conflict for Individuals resolved as shift
    Individuals     shift and go to state 47
    SubClassOf      reduce using rule 105 (empty -> .)
    DisjointClasses reduce using rule 105 (empty -> .)
    Class           reduce using rule 105 (empty -> .)
    $end            reduce using rule 105 (empty -> .)

  ! Individuals     [ reduce using rule 105 (empty -> .) ]

    statement_class_individuals    shift and go to state 89
    empty                          shift and go to state 46

state 55

    (50) usually_inside_paren -> statement_property_identify statement_reserved_word . CLASS_IDENTIFIER
    (51) usually_inside_paren -> statement_property_identify statement_reserved_word . NAMESPACEID DATA_TYPE
    (52) usually_inside_paren -> statement_property_identify statement_reserved_word . NUMBER NAMESPACEID DATA_TYPE
    (53) usually_inside_paren -> statement_property_identify statement_reserved_word . NUMBER CLASS_IDENTIFIER
    (54) usually_inside_paren -> statement_property_identify statement_reserved_word . NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET

    CLASS_IDENTIFIER shift and go to state 90
    NAMESPACEID     shift and go to state 91
    NUMBER          shift and go to state 92


state 56

    (55) usually_others_paren -> statement_property_identify statement_others_reserved_word . CLASS_IDENTIFIER
    (56) usually_others_paren -> statement_property_identify statement_others_reserved_word . LEFT_PAREN usually_others_others_paren
    (57) usually_others_paren -> statement_property_identify statement_others_reserved_word . NAMESPACEID DATA_TYPE
    (58) usually_others_paren -> statement_property_identify statement_others_reserved_word . NUMBER NAMESPACEID DATA_TYPE
    (59) usually_others_paren -> statement_property_identify statement_others_reserved_word . NUMBER CLASS_IDENTIFIER
    (60) usually_others_paren -> statement_property_identify statement_others_reserved_word . NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET

    CLASS_IDENTIFIER shift and go to state 93
    LEFT_PAREN      shift and go to state 94
    NAMESPACEID     shift and go to state 95
    NUMBER          shift and go to state 96


state 57

    (23) statement_reserved_word -> SOME .
    (30) statement_others_reserved_word -> SOME .

  ! reduce/reduce conflict for CLASS_IDENTIFIER resolved using rule 23 (statement_reserved_word -> SOME .)
  ! reduce/reduce conflict for NAMESPACEID resolved using rule 23 (statement_reserved_word -> SOME .)
  ! reduce/reduce conflict for NUMBER resolved using rule 23 (statement_reserved_word -> SOME .)
    CLASS_IDENTIFIER reduce using rule 23 (statement_reserved_word -> SOME .)
    NAMESPACEID     reduce using rule 23 (statement_reserved_word -> SOME .)
    NUMBER          reduce using rule 23 (statement_reserved_word -> SOME .)
    LEFT_PAREN      reduce using rule 30 (statement_others_reserved_word -> SOME .)

  ! CLASS_IDENTIFIER [ reduce using rule 30 (statement_others_reserved_word -> SOME .) ]
  ! NAMESPACEID     [ reduce using rule 30 (statement_others_reserved_word -> SOME .) ]
  ! NUMBER          [ reduce using rule 30 (statement_others_reserved_word -> SOME .) ]


state 58

    (24) statement_reserved_word -> EXACTLY .

    CLASS_IDENTIFIER reduce using rule 24 (statement_reserved_word -> EXACTLY .)
    NAMESPACEID     reduce using rule 24 (statement_reserved_word -> EXACTLY .)
    NUMBER          reduce using rule 24 (statement_reserved_word -> EXACTLY .)


state 59

    (25) statement_reserved_word -> MIN .

    CLASS_IDENTIFIER reduce using rule 25 (statement_reserved_word -> MIN .)
    NAMESPACEID     reduce using rule 25 (statement_reserved_word -> MIN .)
    NUMBER          reduce using rule 25 (statement_reserved_word -> MIN .)


state 60

    (26) statement_reserved_word -> MAX .

    CLASS_IDENTIFIER reduce using rule 26 (statement_reserved_word -> MAX .)
    NAMESPACEID     reduce using rule 26 (statement_reserved_word -> MAX .)
    NUMBER          reduce using rule 26 (statement_reserved_word -> MAX .)


state 61

    (27) statement_reserved_word -> OR .
    (32) statement_others_reserved_word -> OR .

  ! reduce/reduce conflict for CLASS_IDENTIFIER resolved using rule 27 (statement_reserved_word -> OR .)
  ! reduce/reduce conflict for NAMESPACEID resolved using rule 27 (statement_reserved_word -> OR .)
  ! reduce/reduce conflict for NUMBER resolved using rule 27 (statement_reserved_word -> OR .)
    CLASS_IDENTIFIER reduce using rule 27 (statement_reserved_word -> OR .)
    NAMESPACEID     reduce using rule 27 (statement_reserved_word -> OR .)
    NUMBER          reduce using rule 27 (statement_reserved_word -> OR .)
    LEFT_PAREN      reduce using rule 32 (statement_others_reserved_word -> OR .)

  ! CLASS_IDENTIFIER [ reduce using rule 32 (statement_others_reserved_word -> OR .) ]
  ! NAMESPACEID     [ reduce using rule 32 (statement_others_reserved_word -> OR .) ]
  ! NUMBER          [ reduce using rule 32 (statement_others_reserved_word -> OR .) ]


state 62

    (28) statement_reserved_word -> AND .
    (33) statement_others_reserved_word -> AND .

  ! reduce/reduce conflict for CLASS_IDENTIFIER resolved using rule 28 (statement_reserved_word -> AND .)
  ! reduce/reduce conflict for NAMESPACEID resolved using rule 28 (statement_reserved_word -> AND .)
  ! reduce/reduce conflict for NUMBER resolved using rule 28 (statement_reserved_word -> AND .)
    CLASS_IDENTIFIER reduce using rule 28 (statement_reserved_word -> AND .)
    NAMESPACEID     reduce using rule 28 (statement_reserved_word -> AND .)
    NUMBER          reduce using rule 28 (statement_reserved_word -> AND .)
    LEFT_PAREN      reduce using rule 33 (statement_others_reserved_word -> AND .)

  ! CLASS_IDENTIFIER [ reduce using rule 33 (statement_others_reserved_word -> AND .) ]
  ! NAMESPACEID     [ reduce using rule 33 (statement_others_reserved_word -> AND .) ]
  ! NUMBER          [ reduce using rule 33 (statement_others_reserved_word -> AND .) ]


state 63

    (29) statement_reserved_word -> VALUE .

    CLASS_IDENTIFIER reduce using rule 29 (statement_reserved_word -> VALUE .)
    NAMESPACEID     reduce using rule 29 (statement_reserved_word -> VALUE .)
    NUMBER          reduce using rule 29 (statement_reserved_word -> VALUE .)


state 64

    (31) statement_others_reserved_word -> ONLY .

    CLASS_IDENTIFIER reduce using rule 31 (statement_others_reserved_word -> ONLY .)
    LEFT_PAREN      reduce using rule 31 (statement_others_reserved_word -> ONLY .)
    NAMESPACEID     reduce using rule 31 (statement_others_reserved_word -> ONLY .)
    NUMBER          reduce using rule 31 (statement_others_reserved_word -> ONLY .)
    VALUE           reduce using rule 31 (statement_others_reserved_word -> ONLY .)
    ONLY            reduce using rule 31 (statement_others_reserved_word -> ONLY .)
    SOME            reduce using rule 31 (statement_others_reserved_word -> ONLY .)
    PROPERTY_IDENTIFIER_has reduce using rule 31 (statement_others_reserved_word -> ONLY .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 31 (statement_others_reserved_word -> ONLY .)
    PROPERTY_IDENTIFIER reduce using rule 31 (statement_others_reserved_word -> ONLY .)


state 65

    (63) simple_paren -> LEFT_PAREN usually_inside_paren . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 97


state 66

    (50) usually_inside_paren -> statement_property_identify . statement_reserved_word CLASS_IDENTIFIER
    (51) usually_inside_paren -> statement_property_identify . statement_reserved_word NAMESPACEID DATA_TYPE
    (52) usually_inside_paren -> statement_property_identify . statement_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (53) usually_inside_paren -> statement_property_identify . statement_reserved_word NUMBER CLASS_IDENTIFIER
    (54) usually_inside_paren -> statement_property_identify . statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (23) statement_reserved_word -> . SOME
    (24) statement_reserved_word -> . EXACTLY
    (25) statement_reserved_word -> . MIN
    (26) statement_reserved_word -> . MAX
    (27) statement_reserved_word -> . OR
    (28) statement_reserved_word -> . AND
    (29) statement_reserved_word -> . VALUE

    SOME            shift and go to state 98
    EXACTLY         shift and go to state 58
    MIN             shift and go to state 59
    MAX             shift and go to state 60
    OR              shift and go to state 99
    AND             shift and go to state 100
    VALUE           shift and go to state 63

    statement_reserved_word        shift and go to state 55

state 67

    (99) statement_enumerated_class -> LEFT_CURLY_BRACKET statement_enumerated_class_check . RIGHT_CURLY_BRACKET

    RIGHT_CURLY_BRACKET shift and go to state 101


state 68

    (100) statement_enumerated_class_check -> IndividualNames .
    (101) statement_enumerated_class_check -> IndividualNames . COMMA statement_enumerated_class_check

    RIGHT_CURLY_BRACKET reduce using rule 100 (statement_enumerated_class_check -> IndividualNames .)
    COMMA           shift and go to state 102


state 69

    (66) expression -> usually_inside_paren COMMA . expression
    (64) expression -> . usually_inside_paren
    (65) expression -> . usually_others_paren
    (66) expression -> . usually_inside_paren COMMA expression
    (67) expression -> . simple_paren
    (68) expression -> . simple_paren AND expression
    (50) usually_inside_paren -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (51) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (52) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (53) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER
    (54) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (55) usually_others_paren -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (56) usually_others_paren -> . statement_property_identify statement_others_reserved_word LEFT_PAREN usually_others_others_paren
    (57) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE
    (58) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (59) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER
    (60) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (63) simple_paren -> . LEFT_PAREN usually_inside_paren RIGHT_PAREN
    (34) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (35) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (36) statement_property_identify -> . PROPERTY_IDENTIFIER

    LEFT_PAREN      shift and go to state 28
    PROPERTY_IDENTIFIER_has shift and go to state 34
    PROPERTY_IDENTIFIER_is_Of shift and go to state 35
    PROPERTY_IDENTIFIER shift and go to state 36

    usually_inside_paren           shift and go to state 31
    expression                     shift and go to state 103
    usually_others_paren           shift and go to state 32
    simple_paren                   shift and go to state 33
    statement_property_identify    shift and go to state 27

state 70

    (68) expression -> simple_paren AND . expression
    (64) expression -> . usually_inside_paren
    (65) expression -> . usually_others_paren
    (66) expression -> . usually_inside_paren COMMA expression
    (67) expression -> . simple_paren
    (68) expression -> . simple_paren AND expression
    (50) usually_inside_paren -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (51) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (52) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (53) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER
    (54) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (55) usually_others_paren -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (56) usually_others_paren -> . statement_property_identify statement_others_reserved_word LEFT_PAREN usually_others_others_paren
    (57) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE
    (58) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (59) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER
    (60) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (63) simple_paren -> . LEFT_PAREN usually_inside_paren RIGHT_PAREN
    (34) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (35) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (36) statement_property_identify -> . PROPERTY_IDENTIFIER

    LEFT_PAREN      shift and go to state 28
    PROPERTY_IDENTIFIER_has shift and go to state 34
    PROPERTY_IDENTIFIER_is_Of shift and go to state 35
    PROPERTY_IDENTIFIER shift and go to state 36

    simple_paren                   shift and go to state 33
    expression                     shift and go to state 104
    usually_inside_paren           shift and go to state 31
    usually_others_paren           shift and go to state 32
    statement_property_identify    shift and go to state 27

state 71

    (94) statement_closed_axiom_class -> CLASS_IDENTIFIER COMMA . expression statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN
    (37) primitive_class_mandatory -> CLASS_IDENTIFIER COMMA . expression statement_class_disjoin statement_class_individuals
    (64) expression -> . usually_inside_paren
    (65) expression -> . usually_others_paren
    (66) expression -> . usually_inside_paren COMMA expression
    (67) expression -> . simple_paren
    (68) expression -> . simple_paren AND expression
    (50) usually_inside_paren -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (51) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (52) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (53) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER
    (54) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (55) usually_others_paren -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (56) usually_others_paren -> . statement_property_identify statement_others_reserved_word LEFT_PAREN usually_others_others_paren
    (57) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE
    (58) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (59) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER
    (60) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (63) simple_paren -> . LEFT_PAREN usually_inside_paren RIGHT_PAREN
    (34) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (35) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (36) statement_property_identify -> . PROPERTY_IDENTIFIER

    LEFT_PAREN      shift and go to state 28
    PROPERTY_IDENTIFIER_has shift and go to state 34
    PROPERTY_IDENTIFIER_is_Of shift and go to state 35
    PROPERTY_IDENTIFIER shift and go to state 36

    expression                     shift and go to state 105
    statement_property_identify    shift and go to state 27
    usually_inside_paren           shift and go to state 31
    usually_others_paren           shift and go to state 32
    simple_paren                   shift and go to state 33

state 72

    (95) statement_closed_axiom_class -> CLASS_IDENTIFIER AND . expression statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN
    (38) primitive_class_mandatory -> CLASS_IDENTIFIER AND . expression statement_class_disjoin statement_class_individuals
    (64) expression -> . usually_inside_paren
    (65) expression -> . usually_others_paren
    (66) expression -> . usually_inside_paren COMMA expression
    (67) expression -> . simple_paren
    (68) expression -> . simple_paren AND expression
    (50) usually_inside_paren -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (51) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (52) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (53) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER
    (54) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (55) usually_others_paren -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (56) usually_others_paren -> . statement_property_identify statement_others_reserved_word LEFT_PAREN usually_others_others_paren
    (57) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE
    (58) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (59) usually_others_paren -> . statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER
    (60) usually_others_paren -> . statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (63) simple_paren -> . LEFT_PAREN usually_inside_paren RIGHT_PAREN
    (34) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (35) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (36) statement_property_identify -> . PROPERTY_IDENTIFIER

    LEFT_PAREN      shift and go to state 28
    PROPERTY_IDENTIFIER_has shift and go to state 34
    PROPERTY_IDENTIFIER_is_Of shift and go to state 35
    PROPERTY_IDENTIFIER shift and go to state 36

    expression                     shift and go to state 106
    statement_property_identify    shift and go to state 27
    usually_inside_paren           shift and go to state 31
    usually_others_paren           shift and go to state 32
    simple_paren                   shift and go to state 33

state 73

    (39) primitive_class_mandatory -> expression statement_class_disjoin . statement_class_individuals
    (73) statement_class_individuals -> . empty
    (74) statement_class_individuals -> . Individuals statement_class_individuals_check
    (105) empty -> .

  ! shift/reduce conflict for Individuals resolved as shift
    Individuals     shift and go to state 47
    EquivalentTo    reduce using rule 105 (empty -> .)
    DisjointClasses reduce using rule 105 (empty -> .)
    Class           reduce using rule 105 (empty -> .)
    $end            reduce using rule 105 (empty -> .)

  ! Individuals     [ reduce using rule 105 (empty -> .) ]

    statement_class_individuals    shift and go to state 107
    empty                          shift and go to state 46

state 74

    (6) statement_defined_class -> EquivalentTo_possible maybe_suclassof statement_class_disjoin statement_class_individuals .

    Class           reduce using rule 6 (statement_defined_class -> EquivalentTo_possible maybe_suclassof statement_class_disjoin statement_class_individuals .)
    $end            reduce using rule 6 (statement_defined_class -> EquivalentTo_possible maybe_suclassof statement_class_disjoin statement_class_individuals .)


state 75

    (7) statement_defined_class -> subclassof_possible EquivalentTo_possible statement_class_disjoin statement_class_individuals .

    Class           reduce using rule 7 (statement_defined_class -> subclassof_possible EquivalentTo_possible statement_class_disjoin statement_class_individuals .)
    $end            reduce using rule 7 (statement_defined_class -> subclassof_possible EquivalentTo_possible statement_class_disjoin statement_class_individuals .)


state 76

    (74) statement_class_individuals -> Individuals statement_class_individuals_check .

    Class           reduce using rule 74 (statement_class_individuals -> Individuals statement_class_individuals_check .)
    $end            reduce using rule 74 (statement_class_individuals -> Individuals statement_class_individuals_check .)
    SubClassOf      reduce using rule 74 (statement_class_individuals -> Individuals statement_class_individuals_check .)
    DisjointClasses reduce using rule 74 (statement_class_individuals -> Individuals statement_class_individuals_check .)
    Individuals     reduce using rule 74 (statement_class_individuals -> Individuals statement_class_individuals_check .)
    EquivalentTo    reduce using rule 74 (statement_class_individuals -> Individuals statement_class_individuals_check .)


state 77

    (75) statement_class_individuals_check -> IndividualNames .
    (76) statement_class_individuals_check -> IndividualNames . COMMA statement_class_individuals_check

    Class           reduce using rule 75 (statement_class_individuals_check -> IndividualNames .)
    $end            reduce using rule 75 (statement_class_individuals_check -> IndividualNames .)
    SubClassOf      reduce using rule 75 (statement_class_individuals_check -> IndividualNames .)
    DisjointClasses reduce using rule 75 (statement_class_individuals_check -> IndividualNames .)
    Individuals     reduce using rule 75 (statement_class_individuals_check -> IndividualNames .)
    EquivalentTo    reduce using rule 75 (statement_class_individuals_check -> IndividualNames .)
    COMMA           shift and go to state 108


state 78

    (72) statement_class_disjoin_check -> CLASS_IDENTIFIER COMMA . statement_class_disjoin_check
    (71) statement_class_disjoin_check -> . CLASS_IDENTIFIER
    (72) statement_class_disjoin_check -> . CLASS_IDENTIFIER COMMA statement_class_disjoin_check

    CLASS_IDENTIFIER shift and go to state 49

    statement_class_disjoin_check  shift and go to state 109

state 79

    (93) nested_descriptions -> CLASS_IDENTIFIER .

    AND             reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .)
    OR              reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .)
    SubClassOf      reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .)
    DisjointClasses reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .)
    Individuals     reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .)
    Class           reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .)
    $end            reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .)
    RIGHT_PAREN     reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .)


state 80

    (20) JustDefined -> CLASS_IDENTIFIER COMMA expression . statement_class_disjoin statement_class_individuals
    (94) statement_closed_axiom_class -> CLASS_IDENTIFIER COMMA expression . statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN
    (69) statement_class_disjoin -> . empty
    (70) statement_class_disjoin -> . DisjointClasses statement_class_disjoin_check
    (34) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (35) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (36) statement_property_identify -> . PROPERTY_IDENTIFIER
    (105) empty -> .

  ! shift/reduce conflict for DisjointClasses resolved as shift
    DisjointClasses shift and go to state 19
    PROPERTY_IDENTIFIER_has shift and go to state 34
    PROPERTY_IDENTIFIER_is_Of shift and go to state 35
    PROPERTY_IDENTIFIER shift and go to state 36
    Individuals     reduce using rule 105 (empty -> .)
    SubClassOf      reduce using rule 105 (empty -> .)
    Class           reduce using rule 105 (empty -> .)
    $end            reduce using rule 105 (empty -> .)

  ! DisjointClasses [ reduce using rule 105 (empty -> .) ]

    statement_class_disjoin        shift and go to state 110
    statement_property_identify    shift and go to state 111
    empty                          shift and go to state 18

state 81

    (78) nested -> CLASS_IDENTIFIER COMMA nested_descriptions .
    (79) nested_descriptions -> nested_descriptions . AND nested_descriptions
    (80) nested_descriptions -> nested_descriptions . OR nested_descriptions

    SubClassOf      reduce using rule 78 (nested -> CLASS_IDENTIFIER COMMA nested_descriptions .)
    DisjointClasses reduce using rule 78 (nested -> CLASS_IDENTIFIER COMMA nested_descriptions .)
    Individuals     reduce using rule 78 (nested -> CLASS_IDENTIFIER COMMA nested_descriptions .)
    Class           reduce using rule 78 (nested -> CLASS_IDENTIFIER COMMA nested_descriptions .)
    $end            reduce using rule 78 (nested -> CLASS_IDENTIFIER COMMA nested_descriptions .)
    AND             shift and go to state 112
    OR              shift and go to state 113


state 82

    (82) nested_descriptions -> statement_property_identify . statement_others_reserved_word nested_descriptions
    (83) nested_descriptions -> statement_property_identify . statement_others_reserved_word CLASS_IDENTIFIER
    (84) nested_descriptions -> statement_property_identify . statement_others_reserved_word VALUE CLASS_IDENTIFIER
    (85) nested_descriptions -> statement_property_identify . statement_others_reserved_word VALUE IndividualNames
    (86) nested_descriptions -> statement_property_identify . VALUE IndividualNames
    (87) nested_descriptions -> statement_property_identify . VALUE CLASS_IDENTIFIER
    (88) nested_descriptions -> statement_property_identify . statement_others_reserved_word VALUE nested_descriptions
    (89) nested_descriptions -> statement_property_identify . statement_others_reserved_word ONLY CLASS_IDENTIFIER
    (90) nested_descriptions -> statement_property_identify . statement_others_reserved_word ONLY nested_descriptions
    (91) nested_descriptions -> statement_property_identify . statement_others_reserved_word SOME CLASS_IDENTIFIER
    (92) nested_descriptions -> statement_property_identify . statement_others_reserved_word SOME nested_descriptions
    (50) usually_inside_paren -> statement_property_identify . statement_reserved_word CLASS_IDENTIFIER
    (51) usually_inside_paren -> statement_property_identify . statement_reserved_word NAMESPACEID DATA_TYPE
    (52) usually_inside_paren -> statement_property_identify . statement_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (53) usually_inside_paren -> statement_property_identify . statement_reserved_word NUMBER CLASS_IDENTIFIER
    (54) usually_inside_paren -> statement_property_identify . statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (55) usually_others_paren -> statement_property_identify . statement_others_reserved_word CLASS_IDENTIFIER
    (56) usually_others_paren -> statement_property_identify . statement_others_reserved_word LEFT_PAREN usually_others_others_paren
    (57) usually_others_paren -> statement_property_identify . statement_others_reserved_word NAMESPACEID DATA_TYPE
    (58) usually_others_paren -> statement_property_identify . statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (59) usually_others_paren -> statement_property_identify . statement_others_reserved_word NUMBER CLASS_IDENTIFIER
    (60) usually_others_paren -> statement_property_identify . statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (30) statement_others_reserved_word -> . SOME
    (31) statement_others_reserved_word -> . ONLY
    (32) statement_others_reserved_word -> . OR
    (33) statement_others_reserved_word -> . AND
    (23) statement_reserved_word -> . SOME
    (24) statement_reserved_word -> . EXACTLY
    (25) statement_reserved_word -> . MIN
    (26) statement_reserved_word -> . MAX
    (27) statement_reserved_word -> . OR
    (28) statement_reserved_word -> . AND
    (29) statement_reserved_word -> . VALUE

    VALUE           shift and go to state 115
    SOME            shift and go to state 116
    ONLY            shift and go to state 64
    OR              shift and go to state 117
    AND             shift and go to state 118
    EXACTLY         shift and go to state 58
    MIN             shift and go to state 59
    MAX             shift and go to state 60

    statement_others_reserved_word shift and go to state 114
    statement_reserved_word        shift and go to state 55

state 83

    (81) nested_descriptions -> LEFT_PAREN . nested_descriptions RIGHT_PAREN
    (63) simple_paren -> LEFT_PAREN . usually_inside_paren RIGHT_PAREN
    (79) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (80) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (81) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (82) nested_descriptions -> . statement_property_identify statement_others_reserved_word nested_descriptions
    (83) nested_descriptions -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (84) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER
    (85) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE IndividualNames
    (86) nested_descriptions -> . statement_property_identify VALUE IndividualNames
    (87) nested_descriptions -> . statement_property_identify VALUE CLASS_IDENTIFIER
    (88) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE nested_descriptions
    (89) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER
    (90) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY nested_descriptions
    (91) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER
    (92) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME nested_descriptions
    (93) nested_descriptions -> . CLASS_IDENTIFIER
    (50) usually_inside_paren -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (51) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (52) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (53) usually_inside_paren -> . statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER
    (54) usually_inside_paren -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (34) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (35) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (36) statement_property_identify -> . PROPERTY_IDENTIFIER

    LEFT_PAREN      shift and go to state 119
    CLASS_IDENTIFIER shift and go to state 79
    PROPERTY_IDENTIFIER_has shift and go to state 34
    PROPERTY_IDENTIFIER_is_Of shift and go to state 35
    PROPERTY_IDENTIFIER shift and go to state 36

    nested_descriptions            shift and go to state 120
    usually_inside_paren           shift and go to state 65
    statement_property_identify    shift and go to state 121

state 84

    (96) statement_closed_axiom_class -> CLASS_IDENTIFIER expression statement_property_identify . ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN

    ONLY            shift and go to state 122


state 85

    (21) JustDefined -> CLASS_IDENTIFIER AND expression . statement_class_disjoin statement_class_individuals
    (95) statement_closed_axiom_class -> CLASS_IDENTIFIER AND expression . statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN
    (69) statement_class_disjoin -> . empty
    (70) statement_class_disjoin -> . DisjointClasses statement_class_disjoin_check
    (34) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (35) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (36) statement_property_identify -> . PROPERTY_IDENTIFIER
    (105) empty -> .

  ! shift/reduce conflict for DisjointClasses resolved as shift
    DisjointClasses shift and go to state 19
    PROPERTY_IDENTIFIER_has shift and go to state 34
    PROPERTY_IDENTIFIER_is_Of shift and go to state 35
    PROPERTY_IDENTIFIER shift and go to state 36
    Individuals     reduce using rule 105 (empty -> .)
    SubClassOf      reduce using rule 105 (empty -> .)
    Class           reduce using rule 105 (empty -> .)
    $end            reduce using rule 105 (empty -> .)

  ! DisjointClasses [ reduce using rule 105 (empty -> .) ]

    statement_class_disjoin        shift and go to state 123
    statement_property_identify    shift and go to state 124
    empty                          shift and go to state 18

state 86

    (77) nested -> CLASS_IDENTIFIER AND nested_descriptions .
    (79) nested_descriptions -> nested_descriptions . AND nested_descriptions
    (80) nested_descriptions -> nested_descriptions . OR nested_descriptions

    SubClassOf      reduce using rule 77 (nested -> CLASS_IDENTIFIER AND nested_descriptions .)
    DisjointClasses reduce using rule 77 (nested -> CLASS_IDENTIFIER AND nested_descriptions .)
    Individuals     reduce using rule 77 (nested -> CLASS_IDENTIFIER AND nested_descriptions .)
    Class           reduce using rule 77 (nested -> CLASS_IDENTIFIER AND nested_descriptions .)
    $end            reduce using rule 77 (nested -> CLASS_IDENTIFIER AND nested_descriptions .)
    AND             shift and go to state 112
    OR              shift and go to state 113


state 87

    (103) statement_covered_class_check -> CLASS_IDENTIFIER .
    (104) statement_covered_class_check -> CLASS_IDENTIFIER . OR statement_covered_class_check

    SubClassOf      reduce using rule 103 (statement_covered_class_check -> CLASS_IDENTIFIER .)
    DisjointClasses reduce using rule 103 (statement_covered_class_check -> CLASS_IDENTIFIER .)
    Individuals     reduce using rule 103 (statement_covered_class_check -> CLASS_IDENTIFIER .)
    Class           reduce using rule 103 (statement_covered_class_check -> CLASS_IDENTIFIER .)
    $end            reduce using rule 103 (statement_covered_class_check -> CLASS_IDENTIFIER .)
    EquivalentTo    reduce using rule 103 (statement_covered_class_check -> CLASS_IDENTIFIER .)
    OR              shift and go to state 53


state 88

    (104) statement_covered_class_check -> CLASS_IDENTIFIER OR statement_covered_class_check .

    SubClassOf      reduce using rule 104 (statement_covered_class_check -> CLASS_IDENTIFIER OR statement_covered_class_check .)
    DisjointClasses reduce using rule 104 (statement_covered_class_check -> CLASS_IDENTIFIER OR statement_covered_class_check .)
    Individuals     reduce using rule 104 (statement_covered_class_check -> CLASS_IDENTIFIER OR statement_covered_class_check .)
    Class           reduce using rule 104 (statement_covered_class_check -> CLASS_IDENTIFIER OR statement_covered_class_check .)
    $end            reduce using rule 104 (statement_covered_class_check -> CLASS_IDENTIFIER OR statement_covered_class_check .)
    EquivalentTo    reduce using rule 104 (statement_covered_class_check -> CLASS_IDENTIFIER OR statement_covered_class_check .)


state 89

    (22) JustDefined -> expression statement_class_disjoin statement_class_individuals .

    SubClassOf      reduce using rule 22 (JustDefined -> expression statement_class_disjoin statement_class_individuals .)
    DisjointClasses reduce using rule 22 (JustDefined -> expression statement_class_disjoin statement_class_individuals .)
    Individuals     reduce using rule 22 (JustDefined -> expression statement_class_disjoin statement_class_individuals .)
    Class           reduce using rule 22 (JustDefined -> expression statement_class_disjoin statement_class_individuals .)
    $end            reduce using rule 22 (JustDefined -> expression statement_class_disjoin statement_class_individuals .)


state 90

    (50) usually_inside_paren -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .

    COMMA           reduce using rule 50 (usually_inside_paren -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    DisjointClasses reduce using rule 50 (usually_inside_paren -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    Individuals     reduce using rule 50 (usually_inside_paren -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    SubClassOf      reduce using rule 50 (usually_inside_paren -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    Class           reduce using rule 50 (usually_inside_paren -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    $end            reduce using rule 50 (usually_inside_paren -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    EquivalentTo    reduce using rule 50 (usually_inside_paren -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    PROPERTY_IDENTIFIER_has reduce using rule 50 (usually_inside_paren -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 50 (usually_inside_paren -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    PROPERTY_IDENTIFIER reduce using rule 50 (usually_inside_paren -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    RIGHT_PAREN     reduce using rule 50 (usually_inside_paren -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)


state 91

    (51) usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID . DATA_TYPE
    (54) usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID . DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET

    DATA_TYPE       shift and go to state 125


state 92

    (52) usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER . NAMESPACEID DATA_TYPE
    (53) usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER . CLASS_IDENTIFIER

    NAMESPACEID     shift and go to state 126
    CLASS_IDENTIFIER shift and go to state 127


state 93

    (55) usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .

    DisjointClasses reduce using rule 55 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    Individuals     reduce using rule 55 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    SubClassOf      reduce using rule 55 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    Class           reduce using rule 55 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    $end            reduce using rule 55 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    EquivalentTo    reduce using rule 55 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    PROPERTY_IDENTIFIER_has reduce using rule 55 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 55 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    PROPERTY_IDENTIFIER reduce using rule 55 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)


state 94

    (56) usually_others_paren -> statement_property_identify statement_others_reserved_word LEFT_PAREN . usually_others_others_paren
    (61) usually_others_others_paren -> . CLASS_IDENTIFIER RIGHT_PAREN
    (62) usually_others_others_paren -> . CLASS_IDENTIFIER OR usually_others_others_paren

    CLASS_IDENTIFIER shift and go to state 129

    usually_others_others_paren    shift and go to state 128

state 95

    (57) usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID . DATA_TYPE
    (60) usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID . DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET

    DATA_TYPE       shift and go to state 130


state 96

    (58) usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER . NAMESPACEID DATA_TYPE
    (59) usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER . CLASS_IDENTIFIER

    NAMESPACEID     shift and go to state 131
    CLASS_IDENTIFIER shift and go to state 132


state 97

    (63) simple_paren -> LEFT_PAREN usually_inside_paren RIGHT_PAREN .

    AND             reduce using rule 63 (simple_paren -> LEFT_PAREN usually_inside_paren RIGHT_PAREN .)
    DisjointClasses reduce using rule 63 (simple_paren -> LEFT_PAREN usually_inside_paren RIGHT_PAREN .)
    Individuals     reduce using rule 63 (simple_paren -> LEFT_PAREN usually_inside_paren RIGHT_PAREN .)
    SubClassOf      reduce using rule 63 (simple_paren -> LEFT_PAREN usually_inside_paren RIGHT_PAREN .)
    Class           reduce using rule 63 (simple_paren -> LEFT_PAREN usually_inside_paren RIGHT_PAREN .)
    $end            reduce using rule 63 (simple_paren -> LEFT_PAREN usually_inside_paren RIGHT_PAREN .)
    EquivalentTo    reduce using rule 63 (simple_paren -> LEFT_PAREN usually_inside_paren RIGHT_PAREN .)
    PROPERTY_IDENTIFIER_has reduce using rule 63 (simple_paren -> LEFT_PAREN usually_inside_paren RIGHT_PAREN .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 63 (simple_paren -> LEFT_PAREN usually_inside_paren RIGHT_PAREN .)
    PROPERTY_IDENTIFIER reduce using rule 63 (simple_paren -> LEFT_PAREN usually_inside_paren RIGHT_PAREN .)


state 98

    (23) statement_reserved_word -> SOME .

    CLASS_IDENTIFIER reduce using rule 23 (statement_reserved_word -> SOME .)
    NAMESPACEID     reduce using rule 23 (statement_reserved_word -> SOME .)
    NUMBER          reduce using rule 23 (statement_reserved_word -> SOME .)


state 99

    (27) statement_reserved_word -> OR .

    CLASS_IDENTIFIER reduce using rule 27 (statement_reserved_word -> OR .)
    NAMESPACEID     reduce using rule 27 (statement_reserved_word -> OR .)
    NUMBER          reduce using rule 27 (statement_reserved_word -> OR .)


state 100

    (28) statement_reserved_word -> AND .

    CLASS_IDENTIFIER reduce using rule 28 (statement_reserved_word -> AND .)
    NAMESPACEID     reduce using rule 28 (statement_reserved_word -> AND .)
    NUMBER          reduce using rule 28 (statement_reserved_word -> AND .)


state 101

    (99) statement_enumerated_class -> LEFT_CURLY_BRACKET statement_enumerated_class_check RIGHT_CURLY_BRACKET .

    SubClassOf      reduce using rule 99 (statement_enumerated_class -> LEFT_CURLY_BRACKET statement_enumerated_class_check RIGHT_CURLY_BRACKET .)
    DisjointClasses reduce using rule 99 (statement_enumerated_class -> LEFT_CURLY_BRACKET statement_enumerated_class_check RIGHT_CURLY_BRACKET .)
    Individuals     reduce using rule 99 (statement_enumerated_class -> LEFT_CURLY_BRACKET statement_enumerated_class_check RIGHT_CURLY_BRACKET .)
    Class           reduce using rule 99 (statement_enumerated_class -> LEFT_CURLY_BRACKET statement_enumerated_class_check RIGHT_CURLY_BRACKET .)
    $end            reduce using rule 99 (statement_enumerated_class -> LEFT_CURLY_BRACKET statement_enumerated_class_check RIGHT_CURLY_BRACKET .)
    EquivalentTo    reduce using rule 99 (statement_enumerated_class -> LEFT_CURLY_BRACKET statement_enumerated_class_check RIGHT_CURLY_BRACKET .)


state 102

    (101) statement_enumerated_class_check -> IndividualNames COMMA . statement_enumerated_class_check
    (100) statement_enumerated_class_check -> . IndividualNames
    (101) statement_enumerated_class_check -> . IndividualNames COMMA statement_enumerated_class_check

    IndividualNames shift and go to state 68

    statement_enumerated_class_check shift and go to state 133

state 103

    (66) expression -> usually_inside_paren COMMA expression .

    DisjointClasses reduce using rule 66 (expression -> usually_inside_paren COMMA expression .)
    Individuals     reduce using rule 66 (expression -> usually_inside_paren COMMA expression .)
    SubClassOf      reduce using rule 66 (expression -> usually_inside_paren COMMA expression .)
    Class           reduce using rule 66 (expression -> usually_inside_paren COMMA expression .)
    $end            reduce using rule 66 (expression -> usually_inside_paren COMMA expression .)
    EquivalentTo    reduce using rule 66 (expression -> usually_inside_paren COMMA expression .)
    PROPERTY_IDENTIFIER_has reduce using rule 66 (expression -> usually_inside_paren COMMA expression .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 66 (expression -> usually_inside_paren COMMA expression .)
    PROPERTY_IDENTIFIER reduce using rule 66 (expression -> usually_inside_paren COMMA expression .)


state 104

    (68) expression -> simple_paren AND expression .

    DisjointClasses reduce using rule 68 (expression -> simple_paren AND expression .)
    Individuals     reduce using rule 68 (expression -> simple_paren AND expression .)
    SubClassOf      reduce using rule 68 (expression -> simple_paren AND expression .)
    Class           reduce using rule 68 (expression -> simple_paren AND expression .)
    $end            reduce using rule 68 (expression -> simple_paren AND expression .)
    EquivalentTo    reduce using rule 68 (expression -> simple_paren AND expression .)
    PROPERTY_IDENTIFIER_has reduce using rule 68 (expression -> simple_paren AND expression .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 68 (expression -> simple_paren AND expression .)
    PROPERTY_IDENTIFIER reduce using rule 68 (expression -> simple_paren AND expression .)


state 105

    (94) statement_closed_axiom_class -> CLASS_IDENTIFIER COMMA expression . statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN
    (37) primitive_class_mandatory -> CLASS_IDENTIFIER COMMA expression . statement_class_disjoin statement_class_individuals
    (34) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (35) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (36) statement_property_identify -> . PROPERTY_IDENTIFIER
    (69) statement_class_disjoin -> . empty
    (70) statement_class_disjoin -> . DisjointClasses statement_class_disjoin_check
    (105) empty -> .

  ! shift/reduce conflict for DisjointClasses resolved as shift
    PROPERTY_IDENTIFIER_has shift and go to state 34
    PROPERTY_IDENTIFIER_is_Of shift and go to state 35
    PROPERTY_IDENTIFIER shift and go to state 36
    DisjointClasses shift and go to state 19
    Individuals     reduce using rule 105 (empty -> .)
    EquivalentTo    reduce using rule 105 (empty -> .)
    Class           reduce using rule 105 (empty -> .)
    $end            reduce using rule 105 (empty -> .)

  ! DisjointClasses [ reduce using rule 105 (empty -> .) ]

    statement_property_identify    shift and go to state 111
    statement_class_disjoin        shift and go to state 134
    empty                          shift and go to state 18

state 106

    (95) statement_closed_axiom_class -> CLASS_IDENTIFIER AND expression . statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN
    (38) primitive_class_mandatory -> CLASS_IDENTIFIER AND expression . statement_class_disjoin statement_class_individuals
    (34) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (35) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (36) statement_property_identify -> . PROPERTY_IDENTIFIER
    (69) statement_class_disjoin -> . empty
    (70) statement_class_disjoin -> . DisjointClasses statement_class_disjoin_check
    (105) empty -> .

  ! shift/reduce conflict for DisjointClasses resolved as shift
    PROPERTY_IDENTIFIER_has shift and go to state 34
    PROPERTY_IDENTIFIER_is_Of shift and go to state 35
    PROPERTY_IDENTIFIER shift and go to state 36
    DisjointClasses shift and go to state 19
    Individuals     reduce using rule 105 (empty -> .)
    EquivalentTo    reduce using rule 105 (empty -> .)
    Class           reduce using rule 105 (empty -> .)
    $end            reduce using rule 105 (empty -> .)

  ! DisjointClasses [ reduce using rule 105 (empty -> .) ]

    statement_property_identify    shift and go to state 124
    statement_class_disjoin        shift and go to state 135
    empty                          shift and go to state 18

state 107

    (39) primitive_class_mandatory -> expression statement_class_disjoin statement_class_individuals .

    EquivalentTo    reduce using rule 39 (primitive_class_mandatory -> expression statement_class_disjoin statement_class_individuals .)
    DisjointClasses reduce using rule 39 (primitive_class_mandatory -> expression statement_class_disjoin statement_class_individuals .)
    Individuals     reduce using rule 39 (primitive_class_mandatory -> expression statement_class_disjoin statement_class_individuals .)
    Class           reduce using rule 39 (primitive_class_mandatory -> expression statement_class_disjoin statement_class_individuals .)
    $end            reduce using rule 39 (primitive_class_mandatory -> expression statement_class_disjoin statement_class_individuals .)


state 108

    (76) statement_class_individuals_check -> IndividualNames COMMA . statement_class_individuals_check
    (75) statement_class_individuals_check -> . IndividualNames
    (76) statement_class_individuals_check -> . IndividualNames COMMA statement_class_individuals_check

    IndividualNames shift and go to state 77

    statement_class_individuals_check shift and go to state 136

state 109

    (72) statement_class_disjoin_check -> CLASS_IDENTIFIER COMMA statement_class_disjoin_check .

    Individuals     reduce using rule 72 (statement_class_disjoin_check -> CLASS_IDENTIFIER COMMA statement_class_disjoin_check .)
    Class           reduce using rule 72 (statement_class_disjoin_check -> CLASS_IDENTIFIER COMMA statement_class_disjoin_check .)
    $end            reduce using rule 72 (statement_class_disjoin_check -> CLASS_IDENTIFIER COMMA statement_class_disjoin_check .)
    SubClassOf      reduce using rule 72 (statement_class_disjoin_check -> CLASS_IDENTIFIER COMMA statement_class_disjoin_check .)
    DisjointClasses reduce using rule 72 (statement_class_disjoin_check -> CLASS_IDENTIFIER COMMA statement_class_disjoin_check .)
    EquivalentTo    reduce using rule 72 (statement_class_disjoin_check -> CLASS_IDENTIFIER COMMA statement_class_disjoin_check .)


state 110

    (20) JustDefined -> CLASS_IDENTIFIER COMMA expression statement_class_disjoin . statement_class_individuals
    (73) statement_class_individuals -> . empty
    (74) statement_class_individuals -> . Individuals statement_class_individuals_check
    (105) empty -> .

  ! shift/reduce conflict for Individuals resolved as shift
    Individuals     shift and go to state 47
    SubClassOf      reduce using rule 105 (empty -> .)
    DisjointClasses reduce using rule 105 (empty -> .)
    Class           reduce using rule 105 (empty -> .)
    $end            reduce using rule 105 (empty -> .)

  ! Individuals     [ reduce using rule 105 (empty -> .) ]

    statement_class_individuals    shift and go to state 137
    empty                          shift and go to state 46

state 111

    (94) statement_closed_axiom_class -> CLASS_IDENTIFIER COMMA expression statement_property_identify . ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN

    ONLY            shift and go to state 138


state 112

    (79) nested_descriptions -> nested_descriptions AND . nested_descriptions
    (79) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (80) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (81) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (82) nested_descriptions -> . statement_property_identify statement_others_reserved_word nested_descriptions
    (83) nested_descriptions -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (84) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER
    (85) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE IndividualNames
    (86) nested_descriptions -> . statement_property_identify VALUE IndividualNames
    (87) nested_descriptions -> . statement_property_identify VALUE CLASS_IDENTIFIER
    (88) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE nested_descriptions
    (89) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER
    (90) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY nested_descriptions
    (91) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER
    (92) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME nested_descriptions
    (93) nested_descriptions -> . CLASS_IDENTIFIER
    (34) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (35) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (36) statement_property_identify -> . PROPERTY_IDENTIFIER

    LEFT_PAREN      shift and go to state 119
    CLASS_IDENTIFIER shift and go to state 79
    PROPERTY_IDENTIFIER_has shift and go to state 34
    PROPERTY_IDENTIFIER_is_Of shift and go to state 35
    PROPERTY_IDENTIFIER shift and go to state 36

    nested_descriptions            shift and go to state 139
    statement_property_identify    shift and go to state 140

state 113

    (80) nested_descriptions -> nested_descriptions OR . nested_descriptions
    (79) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (80) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (81) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (82) nested_descriptions -> . statement_property_identify statement_others_reserved_word nested_descriptions
    (83) nested_descriptions -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (84) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER
    (85) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE IndividualNames
    (86) nested_descriptions -> . statement_property_identify VALUE IndividualNames
    (87) nested_descriptions -> . statement_property_identify VALUE CLASS_IDENTIFIER
    (88) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE nested_descriptions
    (89) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER
    (90) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY nested_descriptions
    (91) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER
    (92) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME nested_descriptions
    (93) nested_descriptions -> . CLASS_IDENTIFIER
    (34) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (35) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (36) statement_property_identify -> . PROPERTY_IDENTIFIER

    LEFT_PAREN      shift and go to state 119
    CLASS_IDENTIFIER shift and go to state 79
    PROPERTY_IDENTIFIER_has shift and go to state 34
    PROPERTY_IDENTIFIER_is_Of shift and go to state 35
    PROPERTY_IDENTIFIER shift and go to state 36

    nested_descriptions            shift and go to state 141
    statement_property_identify    shift and go to state 140

state 114

    (82) nested_descriptions -> statement_property_identify statement_others_reserved_word . nested_descriptions
    (83) nested_descriptions -> statement_property_identify statement_others_reserved_word . CLASS_IDENTIFIER
    (84) nested_descriptions -> statement_property_identify statement_others_reserved_word . VALUE CLASS_IDENTIFIER
    (85) nested_descriptions -> statement_property_identify statement_others_reserved_word . VALUE IndividualNames
    (88) nested_descriptions -> statement_property_identify statement_others_reserved_word . VALUE nested_descriptions
    (89) nested_descriptions -> statement_property_identify statement_others_reserved_word . ONLY CLASS_IDENTIFIER
    (90) nested_descriptions -> statement_property_identify statement_others_reserved_word . ONLY nested_descriptions
    (91) nested_descriptions -> statement_property_identify statement_others_reserved_word . SOME CLASS_IDENTIFIER
    (92) nested_descriptions -> statement_property_identify statement_others_reserved_word . SOME nested_descriptions
    (55) usually_others_paren -> statement_property_identify statement_others_reserved_word . CLASS_IDENTIFIER
    (56) usually_others_paren -> statement_property_identify statement_others_reserved_word . LEFT_PAREN usually_others_others_paren
    (57) usually_others_paren -> statement_property_identify statement_others_reserved_word . NAMESPACEID DATA_TYPE
    (58) usually_others_paren -> statement_property_identify statement_others_reserved_word . NUMBER NAMESPACEID DATA_TYPE
    (59) usually_others_paren -> statement_property_identify statement_others_reserved_word . NUMBER CLASS_IDENTIFIER
    (60) usually_others_paren -> statement_property_identify statement_others_reserved_word . NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (79) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (80) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (81) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (82) nested_descriptions -> . statement_property_identify statement_others_reserved_word nested_descriptions
    (83) nested_descriptions -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (84) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER
    (85) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE IndividualNames
    (86) nested_descriptions -> . statement_property_identify VALUE IndividualNames
    (87) nested_descriptions -> . statement_property_identify VALUE CLASS_IDENTIFIER
    (88) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE nested_descriptions
    (89) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER
    (90) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY nested_descriptions
    (91) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER
    (92) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME nested_descriptions
    (93) nested_descriptions -> . CLASS_IDENTIFIER
    (34) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (35) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (36) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 143
    VALUE           shift and go to state 144
    ONLY            shift and go to state 145
    SOME            shift and go to state 146
    LEFT_PAREN      shift and go to state 147
    NAMESPACEID     shift and go to state 95
    NUMBER          shift and go to state 96
    PROPERTY_IDENTIFIER_has shift and go to state 34
    PROPERTY_IDENTIFIER_is_Of shift and go to state 35
    PROPERTY_IDENTIFIER shift and go to state 36

    statement_property_identify    shift and go to state 140
    nested_descriptions            shift and go to state 142

state 115

    (86) nested_descriptions -> statement_property_identify VALUE . IndividualNames
    (87) nested_descriptions -> statement_property_identify VALUE . CLASS_IDENTIFIER
    (29) statement_reserved_word -> VALUE .

  ! shift/reduce conflict for CLASS_IDENTIFIER resolved as shift
    IndividualNames shift and go to state 148
    CLASS_IDENTIFIER shift and go to state 149
    NAMESPACEID     reduce using rule 29 (statement_reserved_word -> VALUE .)
    NUMBER          reduce using rule 29 (statement_reserved_word -> VALUE .)

  ! CLASS_IDENTIFIER [ reduce using rule 29 (statement_reserved_word -> VALUE .) ]


state 116

    (30) statement_others_reserved_word -> SOME .
    (23) statement_reserved_word -> SOME .

  ! reduce/reduce conflict for CLASS_IDENTIFIER resolved using rule 23 (statement_reserved_word -> SOME .)
  ! reduce/reduce conflict for NAMESPACEID resolved using rule 23 (statement_reserved_word -> SOME .)
  ! reduce/reduce conflict for NUMBER resolved using rule 23 (statement_reserved_word -> SOME .)
    VALUE           reduce using rule 30 (statement_others_reserved_word -> SOME .)
    ONLY            reduce using rule 30 (statement_others_reserved_word -> SOME .)
    SOME            reduce using rule 30 (statement_others_reserved_word -> SOME .)
    LEFT_PAREN      reduce using rule 30 (statement_others_reserved_word -> SOME .)
    PROPERTY_IDENTIFIER_has reduce using rule 30 (statement_others_reserved_word -> SOME .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 30 (statement_others_reserved_word -> SOME .)
    PROPERTY_IDENTIFIER reduce using rule 30 (statement_others_reserved_word -> SOME .)
    CLASS_IDENTIFIER reduce using rule 23 (statement_reserved_word -> SOME .)
    NAMESPACEID     reduce using rule 23 (statement_reserved_word -> SOME .)
    NUMBER          reduce using rule 23 (statement_reserved_word -> SOME .)

  ! CLASS_IDENTIFIER [ reduce using rule 30 (statement_others_reserved_word -> SOME .) ]
  ! NAMESPACEID     [ reduce using rule 30 (statement_others_reserved_word -> SOME .) ]
  ! NUMBER          [ reduce using rule 30 (statement_others_reserved_word -> SOME .) ]


state 117

    (32) statement_others_reserved_word -> OR .
    (27) statement_reserved_word -> OR .

  ! reduce/reduce conflict for CLASS_IDENTIFIER resolved using rule 27 (statement_reserved_word -> OR .)
  ! reduce/reduce conflict for NAMESPACEID resolved using rule 27 (statement_reserved_word -> OR .)
  ! reduce/reduce conflict for NUMBER resolved using rule 27 (statement_reserved_word -> OR .)
    VALUE           reduce using rule 32 (statement_others_reserved_word -> OR .)
    ONLY            reduce using rule 32 (statement_others_reserved_word -> OR .)
    SOME            reduce using rule 32 (statement_others_reserved_word -> OR .)
    LEFT_PAREN      reduce using rule 32 (statement_others_reserved_word -> OR .)
    PROPERTY_IDENTIFIER_has reduce using rule 32 (statement_others_reserved_word -> OR .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 32 (statement_others_reserved_word -> OR .)
    PROPERTY_IDENTIFIER reduce using rule 32 (statement_others_reserved_word -> OR .)
    CLASS_IDENTIFIER reduce using rule 27 (statement_reserved_word -> OR .)
    NAMESPACEID     reduce using rule 27 (statement_reserved_word -> OR .)
    NUMBER          reduce using rule 27 (statement_reserved_word -> OR .)

  ! CLASS_IDENTIFIER [ reduce using rule 32 (statement_others_reserved_word -> OR .) ]
  ! NAMESPACEID     [ reduce using rule 32 (statement_others_reserved_word -> OR .) ]
  ! NUMBER          [ reduce using rule 32 (statement_others_reserved_word -> OR .) ]


state 118

    (33) statement_others_reserved_word -> AND .
    (28) statement_reserved_word -> AND .

  ! reduce/reduce conflict for CLASS_IDENTIFIER resolved using rule 28 (statement_reserved_word -> AND .)
  ! reduce/reduce conflict for NAMESPACEID resolved using rule 28 (statement_reserved_word -> AND .)
  ! reduce/reduce conflict for NUMBER resolved using rule 28 (statement_reserved_word -> AND .)
    VALUE           reduce using rule 33 (statement_others_reserved_word -> AND .)
    ONLY            reduce using rule 33 (statement_others_reserved_word -> AND .)
    SOME            reduce using rule 33 (statement_others_reserved_word -> AND .)
    LEFT_PAREN      reduce using rule 33 (statement_others_reserved_word -> AND .)
    PROPERTY_IDENTIFIER_has reduce using rule 33 (statement_others_reserved_word -> AND .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 33 (statement_others_reserved_word -> AND .)
    PROPERTY_IDENTIFIER reduce using rule 33 (statement_others_reserved_word -> AND .)
    CLASS_IDENTIFIER reduce using rule 28 (statement_reserved_word -> AND .)
    NAMESPACEID     reduce using rule 28 (statement_reserved_word -> AND .)
    NUMBER          reduce using rule 28 (statement_reserved_word -> AND .)

  ! CLASS_IDENTIFIER [ reduce using rule 33 (statement_others_reserved_word -> AND .) ]
  ! NAMESPACEID     [ reduce using rule 33 (statement_others_reserved_word -> AND .) ]
  ! NUMBER          [ reduce using rule 33 (statement_others_reserved_word -> AND .) ]


state 119

    (81) nested_descriptions -> LEFT_PAREN . nested_descriptions RIGHT_PAREN
    (79) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (80) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (81) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (82) nested_descriptions -> . statement_property_identify statement_others_reserved_word nested_descriptions
    (83) nested_descriptions -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (84) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER
    (85) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE IndividualNames
    (86) nested_descriptions -> . statement_property_identify VALUE IndividualNames
    (87) nested_descriptions -> . statement_property_identify VALUE CLASS_IDENTIFIER
    (88) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE nested_descriptions
    (89) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER
    (90) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY nested_descriptions
    (91) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER
    (92) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME nested_descriptions
    (93) nested_descriptions -> . CLASS_IDENTIFIER
    (34) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (35) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (36) statement_property_identify -> . PROPERTY_IDENTIFIER

    LEFT_PAREN      shift and go to state 119
    CLASS_IDENTIFIER shift and go to state 79
    PROPERTY_IDENTIFIER_has shift and go to state 34
    PROPERTY_IDENTIFIER_is_Of shift and go to state 35
    PROPERTY_IDENTIFIER shift and go to state 36

    nested_descriptions            shift and go to state 120
    statement_property_identify    shift and go to state 140

state 120

    (81) nested_descriptions -> LEFT_PAREN nested_descriptions . RIGHT_PAREN
    (79) nested_descriptions -> nested_descriptions . AND nested_descriptions
    (80) nested_descriptions -> nested_descriptions . OR nested_descriptions

    RIGHT_PAREN     shift and go to state 150
    AND             shift and go to state 112
    OR              shift and go to state 113


state 121

    (82) nested_descriptions -> statement_property_identify . statement_others_reserved_word nested_descriptions
    (83) nested_descriptions -> statement_property_identify . statement_others_reserved_word CLASS_IDENTIFIER
    (84) nested_descriptions -> statement_property_identify . statement_others_reserved_word VALUE CLASS_IDENTIFIER
    (85) nested_descriptions -> statement_property_identify . statement_others_reserved_word VALUE IndividualNames
    (86) nested_descriptions -> statement_property_identify . VALUE IndividualNames
    (87) nested_descriptions -> statement_property_identify . VALUE CLASS_IDENTIFIER
    (88) nested_descriptions -> statement_property_identify . statement_others_reserved_word VALUE nested_descriptions
    (89) nested_descriptions -> statement_property_identify . statement_others_reserved_word ONLY CLASS_IDENTIFIER
    (90) nested_descriptions -> statement_property_identify . statement_others_reserved_word ONLY nested_descriptions
    (91) nested_descriptions -> statement_property_identify . statement_others_reserved_word SOME CLASS_IDENTIFIER
    (92) nested_descriptions -> statement_property_identify . statement_others_reserved_word SOME nested_descriptions
    (50) usually_inside_paren -> statement_property_identify . statement_reserved_word CLASS_IDENTIFIER
    (51) usually_inside_paren -> statement_property_identify . statement_reserved_word NAMESPACEID DATA_TYPE
    (52) usually_inside_paren -> statement_property_identify . statement_reserved_word NUMBER NAMESPACEID DATA_TYPE
    (53) usually_inside_paren -> statement_property_identify . statement_reserved_word NUMBER CLASS_IDENTIFIER
    (54) usually_inside_paren -> statement_property_identify . statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET
    (30) statement_others_reserved_word -> . SOME
    (31) statement_others_reserved_word -> . ONLY
    (32) statement_others_reserved_word -> . OR
    (33) statement_others_reserved_word -> . AND
    (23) statement_reserved_word -> . SOME
    (24) statement_reserved_word -> . EXACTLY
    (25) statement_reserved_word -> . MIN
    (26) statement_reserved_word -> . MAX
    (27) statement_reserved_word -> . OR
    (28) statement_reserved_word -> . AND
    (29) statement_reserved_word -> . VALUE

    VALUE           shift and go to state 115
    SOME            shift and go to state 116
    ONLY            shift and go to state 64
    OR              shift and go to state 117
    AND             shift and go to state 118
    EXACTLY         shift and go to state 58
    MIN             shift and go to state 59
    MAX             shift and go to state 60

    statement_others_reserved_word shift and go to state 151
    statement_reserved_word        shift and go to state 55

state 122

    (96) statement_closed_axiom_class -> CLASS_IDENTIFIER expression statement_property_identify ONLY . LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN

    LEFT_PAREN      shift and go to state 152


state 123

    (21) JustDefined -> CLASS_IDENTIFIER AND expression statement_class_disjoin . statement_class_individuals
    (73) statement_class_individuals -> . empty
    (74) statement_class_individuals -> . Individuals statement_class_individuals_check
    (105) empty -> .

  ! shift/reduce conflict for Individuals resolved as shift
    Individuals     shift and go to state 47
    SubClassOf      reduce using rule 105 (empty -> .)
    DisjointClasses reduce using rule 105 (empty -> .)
    Class           reduce using rule 105 (empty -> .)
    $end            reduce using rule 105 (empty -> .)

  ! Individuals     [ reduce using rule 105 (empty -> .) ]

    statement_class_individuals    shift and go to state 153
    empty                          shift and go to state 46

state 124

    (95) statement_closed_axiom_class -> CLASS_IDENTIFIER AND expression statement_property_identify . ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN

    ONLY            shift and go to state 154


state 125

    (51) usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE .
    (54) usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE . LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET

    COMMA           reduce using rule 51 (usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE .)
    DisjointClasses reduce using rule 51 (usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE .)
    Individuals     reduce using rule 51 (usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE .)
    SubClassOf      reduce using rule 51 (usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE .)
    Class           reduce using rule 51 (usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE .)
    $end            reduce using rule 51 (usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE .)
    EquivalentTo    reduce using rule 51 (usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE .)
    PROPERTY_IDENTIFIER_has reduce using rule 51 (usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 51 (usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE .)
    PROPERTY_IDENTIFIER reduce using rule 51 (usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE .)
    RIGHT_PAREN     reduce using rule 51 (usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE .)
    LEFT_BRACKET    shift and go to state 155


state 126

    (52) usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER NAMESPACEID . DATA_TYPE

    DATA_TYPE       shift and go to state 156


state 127

    (53) usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER .

    COMMA           reduce using rule 53 (usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER .)
    DisjointClasses reduce using rule 53 (usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER .)
    Individuals     reduce using rule 53 (usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER .)
    SubClassOf      reduce using rule 53 (usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER .)
    Class           reduce using rule 53 (usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER .)
    $end            reduce using rule 53 (usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER .)
    EquivalentTo    reduce using rule 53 (usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER .)
    PROPERTY_IDENTIFIER_has reduce using rule 53 (usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 53 (usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER .)
    PROPERTY_IDENTIFIER reduce using rule 53 (usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER .)
    RIGHT_PAREN     reduce using rule 53 (usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER CLASS_IDENTIFIER .)


state 128

    (56) usually_others_paren -> statement_property_identify statement_others_reserved_word LEFT_PAREN usually_others_others_paren .

    DisjointClasses reduce using rule 56 (usually_others_paren -> statement_property_identify statement_others_reserved_word LEFT_PAREN usually_others_others_paren .)
    Individuals     reduce using rule 56 (usually_others_paren -> statement_property_identify statement_others_reserved_word LEFT_PAREN usually_others_others_paren .)
    SubClassOf      reduce using rule 56 (usually_others_paren -> statement_property_identify statement_others_reserved_word LEFT_PAREN usually_others_others_paren .)
    Class           reduce using rule 56 (usually_others_paren -> statement_property_identify statement_others_reserved_word LEFT_PAREN usually_others_others_paren .)
    $end            reduce using rule 56 (usually_others_paren -> statement_property_identify statement_others_reserved_word LEFT_PAREN usually_others_others_paren .)
    EquivalentTo    reduce using rule 56 (usually_others_paren -> statement_property_identify statement_others_reserved_word LEFT_PAREN usually_others_others_paren .)
    PROPERTY_IDENTIFIER_has reduce using rule 56 (usually_others_paren -> statement_property_identify statement_others_reserved_word LEFT_PAREN usually_others_others_paren .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 56 (usually_others_paren -> statement_property_identify statement_others_reserved_word LEFT_PAREN usually_others_others_paren .)
    PROPERTY_IDENTIFIER reduce using rule 56 (usually_others_paren -> statement_property_identify statement_others_reserved_word LEFT_PAREN usually_others_others_paren .)


state 129

    (61) usually_others_others_paren -> CLASS_IDENTIFIER . RIGHT_PAREN
    (62) usually_others_others_paren -> CLASS_IDENTIFIER . OR usually_others_others_paren

    RIGHT_PAREN     shift and go to state 157
    OR              shift and go to state 158


state 130

    (57) usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE .
    (60) usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE . LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET

    DisjointClasses reduce using rule 57 (usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE .)
    Individuals     reduce using rule 57 (usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE .)
    SubClassOf      reduce using rule 57 (usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE .)
    Class           reduce using rule 57 (usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE .)
    $end            reduce using rule 57 (usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE .)
    EquivalentTo    reduce using rule 57 (usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE .)
    PROPERTY_IDENTIFIER_has reduce using rule 57 (usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 57 (usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE .)
    PROPERTY_IDENTIFIER reduce using rule 57 (usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE .)
    LEFT_BRACKET    shift and go to state 159


state 131

    (58) usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID . DATA_TYPE

    DATA_TYPE       shift and go to state 160


state 132

    (59) usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER .

    DisjointClasses reduce using rule 59 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER .)
    Individuals     reduce using rule 59 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER .)
    SubClassOf      reduce using rule 59 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER .)
    Class           reduce using rule 59 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER .)
    $end            reduce using rule 59 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER .)
    EquivalentTo    reduce using rule 59 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER .)
    PROPERTY_IDENTIFIER_has reduce using rule 59 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 59 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER .)
    PROPERTY_IDENTIFIER reduce using rule 59 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER CLASS_IDENTIFIER .)


state 133

    (101) statement_enumerated_class_check -> IndividualNames COMMA statement_enumerated_class_check .

    RIGHT_CURLY_BRACKET reduce using rule 101 (statement_enumerated_class_check -> IndividualNames COMMA statement_enumerated_class_check .)


state 134

    (37) primitive_class_mandatory -> CLASS_IDENTIFIER COMMA expression statement_class_disjoin . statement_class_individuals
    (73) statement_class_individuals -> . empty
    (74) statement_class_individuals -> . Individuals statement_class_individuals_check
    (105) empty -> .

  ! shift/reduce conflict for Individuals resolved as shift
    Individuals     shift and go to state 47
    EquivalentTo    reduce using rule 105 (empty -> .)
    DisjointClasses reduce using rule 105 (empty -> .)
    Class           reduce using rule 105 (empty -> .)
    $end            reduce using rule 105 (empty -> .)

  ! Individuals     [ reduce using rule 105 (empty -> .) ]

    statement_class_individuals    shift and go to state 161
    empty                          shift and go to state 46

state 135

    (38) primitive_class_mandatory -> CLASS_IDENTIFIER AND expression statement_class_disjoin . statement_class_individuals
    (73) statement_class_individuals -> . empty
    (74) statement_class_individuals -> . Individuals statement_class_individuals_check
    (105) empty -> .

  ! shift/reduce conflict for Individuals resolved as shift
    Individuals     shift and go to state 47
    EquivalentTo    reduce using rule 105 (empty -> .)
    DisjointClasses reduce using rule 105 (empty -> .)
    Class           reduce using rule 105 (empty -> .)
    $end            reduce using rule 105 (empty -> .)

  ! Individuals     [ reduce using rule 105 (empty -> .) ]

    statement_class_individuals    shift and go to state 162
    empty                          shift and go to state 46

state 136

    (76) statement_class_individuals_check -> IndividualNames COMMA statement_class_individuals_check .

    Class           reduce using rule 76 (statement_class_individuals_check -> IndividualNames COMMA statement_class_individuals_check .)
    $end            reduce using rule 76 (statement_class_individuals_check -> IndividualNames COMMA statement_class_individuals_check .)
    SubClassOf      reduce using rule 76 (statement_class_individuals_check -> IndividualNames COMMA statement_class_individuals_check .)
    DisjointClasses reduce using rule 76 (statement_class_individuals_check -> IndividualNames COMMA statement_class_individuals_check .)
    Individuals     reduce using rule 76 (statement_class_individuals_check -> IndividualNames COMMA statement_class_individuals_check .)
    EquivalentTo    reduce using rule 76 (statement_class_individuals_check -> IndividualNames COMMA statement_class_individuals_check .)


state 137

    (20) JustDefined -> CLASS_IDENTIFIER COMMA expression statement_class_disjoin statement_class_individuals .

    SubClassOf      reduce using rule 20 (JustDefined -> CLASS_IDENTIFIER COMMA expression statement_class_disjoin statement_class_individuals .)
    DisjointClasses reduce using rule 20 (JustDefined -> CLASS_IDENTIFIER COMMA expression statement_class_disjoin statement_class_individuals .)
    Individuals     reduce using rule 20 (JustDefined -> CLASS_IDENTIFIER COMMA expression statement_class_disjoin statement_class_individuals .)
    Class           reduce using rule 20 (JustDefined -> CLASS_IDENTIFIER COMMA expression statement_class_disjoin statement_class_individuals .)
    $end            reduce using rule 20 (JustDefined -> CLASS_IDENTIFIER COMMA expression statement_class_disjoin statement_class_individuals .)


state 138

    (94) statement_closed_axiom_class -> CLASS_IDENTIFIER COMMA expression statement_property_identify ONLY . LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN

    LEFT_PAREN      shift and go to state 163


state 139

    (79) nested_descriptions -> nested_descriptions AND nested_descriptions .
    (79) nested_descriptions -> nested_descriptions . AND nested_descriptions
    (80) nested_descriptions -> nested_descriptions . OR nested_descriptions

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SubClassOf      reduce using rule 79 (nested_descriptions -> nested_descriptions AND nested_descriptions .)
    DisjointClasses reduce using rule 79 (nested_descriptions -> nested_descriptions AND nested_descriptions .)
    Individuals     reduce using rule 79 (nested_descriptions -> nested_descriptions AND nested_descriptions .)
    Class           reduce using rule 79 (nested_descriptions -> nested_descriptions AND nested_descriptions .)
    $end            reduce using rule 79 (nested_descriptions -> nested_descriptions AND nested_descriptions .)
    RIGHT_PAREN     reduce using rule 79 (nested_descriptions -> nested_descriptions AND nested_descriptions .)
    AND             shift and go to state 112
    OR              shift and go to state 113

  ! AND             [ reduce using rule 79 (nested_descriptions -> nested_descriptions AND nested_descriptions .) ]
  ! OR              [ reduce using rule 79 (nested_descriptions -> nested_descriptions AND nested_descriptions .) ]


state 140

    (82) nested_descriptions -> statement_property_identify . statement_others_reserved_word nested_descriptions
    (83) nested_descriptions -> statement_property_identify . statement_others_reserved_word CLASS_IDENTIFIER
    (84) nested_descriptions -> statement_property_identify . statement_others_reserved_word VALUE CLASS_IDENTIFIER
    (85) nested_descriptions -> statement_property_identify . statement_others_reserved_word VALUE IndividualNames
    (86) nested_descriptions -> statement_property_identify . VALUE IndividualNames
    (87) nested_descriptions -> statement_property_identify . VALUE CLASS_IDENTIFIER
    (88) nested_descriptions -> statement_property_identify . statement_others_reserved_word VALUE nested_descriptions
    (89) nested_descriptions -> statement_property_identify . statement_others_reserved_word ONLY CLASS_IDENTIFIER
    (90) nested_descriptions -> statement_property_identify . statement_others_reserved_word ONLY nested_descriptions
    (91) nested_descriptions -> statement_property_identify . statement_others_reserved_word SOME CLASS_IDENTIFIER
    (92) nested_descriptions -> statement_property_identify . statement_others_reserved_word SOME nested_descriptions
    (30) statement_others_reserved_word -> . SOME
    (31) statement_others_reserved_word -> . ONLY
    (32) statement_others_reserved_word -> . OR
    (33) statement_others_reserved_word -> . AND

    VALUE           shift and go to state 164
    SOME            shift and go to state 165
    ONLY            shift and go to state 64
    OR              shift and go to state 166
    AND             shift and go to state 167

    statement_others_reserved_word shift and go to state 151

state 141

    (80) nested_descriptions -> nested_descriptions OR nested_descriptions .
    (79) nested_descriptions -> nested_descriptions . AND nested_descriptions
    (80) nested_descriptions -> nested_descriptions . OR nested_descriptions

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SubClassOf      reduce using rule 80 (nested_descriptions -> nested_descriptions OR nested_descriptions .)
    DisjointClasses reduce using rule 80 (nested_descriptions -> nested_descriptions OR nested_descriptions .)
    Individuals     reduce using rule 80 (nested_descriptions -> nested_descriptions OR nested_descriptions .)
    Class           reduce using rule 80 (nested_descriptions -> nested_descriptions OR nested_descriptions .)
    $end            reduce using rule 80 (nested_descriptions -> nested_descriptions OR nested_descriptions .)
    RIGHT_PAREN     reduce using rule 80 (nested_descriptions -> nested_descriptions OR nested_descriptions .)
    AND             shift and go to state 112
    OR              shift and go to state 113

  ! AND             [ reduce using rule 80 (nested_descriptions -> nested_descriptions OR nested_descriptions .) ]
  ! OR              [ reduce using rule 80 (nested_descriptions -> nested_descriptions OR nested_descriptions .) ]


state 142

    (82) nested_descriptions -> statement_property_identify statement_others_reserved_word nested_descriptions .
    (79) nested_descriptions -> nested_descriptions . AND nested_descriptions
    (80) nested_descriptions -> nested_descriptions . OR nested_descriptions

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SubClassOf      reduce using rule 82 (nested_descriptions -> statement_property_identify statement_others_reserved_word nested_descriptions .)
    DisjointClasses reduce using rule 82 (nested_descriptions -> statement_property_identify statement_others_reserved_word nested_descriptions .)
    Individuals     reduce using rule 82 (nested_descriptions -> statement_property_identify statement_others_reserved_word nested_descriptions .)
    Class           reduce using rule 82 (nested_descriptions -> statement_property_identify statement_others_reserved_word nested_descriptions .)
    $end            reduce using rule 82 (nested_descriptions -> statement_property_identify statement_others_reserved_word nested_descriptions .)
    RIGHT_PAREN     reduce using rule 82 (nested_descriptions -> statement_property_identify statement_others_reserved_word nested_descriptions .)
    AND             shift and go to state 112
    OR              shift and go to state 113

  ! AND             [ reduce using rule 82 (nested_descriptions -> statement_property_identify statement_others_reserved_word nested_descriptions .) ]
  ! OR              [ reduce using rule 82 (nested_descriptions -> statement_property_identify statement_others_reserved_word nested_descriptions .) ]


state 143

    (83) nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .
    (55) usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .
    (93) nested_descriptions -> CLASS_IDENTIFIER .

  ! reduce/reduce conflict for DisjointClasses resolved using rule 55 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for Individuals resolved using rule 55 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for SubClassOf resolved using rule 55 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for Class resolved using rule 55 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 55 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for AND resolved using rule 83 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for OR resolved using rule 83 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for SubClassOf resolved using rule 55 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for DisjointClasses resolved using rule 55 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for Individuals resolved using rule 55 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for Class resolved using rule 55 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 55 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    AND             reduce using rule 83 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    OR              reduce using rule 83 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    DisjointClasses reduce using rule 55 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    PROPERTY_IDENTIFIER_has reduce using rule 55 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 55 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    PROPERTY_IDENTIFIER reduce using rule 55 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    Individuals     reduce using rule 55 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    SubClassOf      reduce using rule 55 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    Class           reduce using rule 55 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    $end            reduce using rule 55 (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)

  ! SubClassOf      [ reduce using rule 83 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .) ]
  ! DisjointClasses [ reduce using rule 83 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .) ]
  ! Individuals     [ reduce using rule 83 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .) ]
  ! Class           [ reduce using rule 83 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .) ]
  ! $end            [ reduce using rule 83 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .) ]
  ! AND             [ reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! OR              [ reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! SubClassOf      [ reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! DisjointClasses [ reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! Individuals     [ reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! Class           [ reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! $end            [ reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .) ]


state 144

    (84) nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE . CLASS_IDENTIFIER
    (85) nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE . IndividualNames
    (88) nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE . nested_descriptions
    (79) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (80) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (81) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (82) nested_descriptions -> . statement_property_identify statement_others_reserved_word nested_descriptions
    (83) nested_descriptions -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (84) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER
    (85) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE IndividualNames
    (86) nested_descriptions -> . statement_property_identify VALUE IndividualNames
    (87) nested_descriptions -> . statement_property_identify VALUE CLASS_IDENTIFIER
    (88) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE nested_descriptions
    (89) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER
    (90) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY nested_descriptions
    (91) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER
    (92) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME nested_descriptions
    (93) nested_descriptions -> . CLASS_IDENTIFIER
    (34) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (35) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (36) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 168
    IndividualNames shift and go to state 169
    LEFT_PAREN      shift and go to state 119
    PROPERTY_IDENTIFIER_has shift and go to state 34
    PROPERTY_IDENTIFIER_is_Of shift and go to state 35
    PROPERTY_IDENTIFIER shift and go to state 36

    statement_property_identify    shift and go to state 140
    nested_descriptions            shift and go to state 170

state 145

    (89) nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY . CLASS_IDENTIFIER
    (90) nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY . nested_descriptions
    (79) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (80) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (81) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (82) nested_descriptions -> . statement_property_identify statement_others_reserved_word nested_descriptions
    (83) nested_descriptions -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (84) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER
    (85) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE IndividualNames
    (86) nested_descriptions -> . statement_property_identify VALUE IndividualNames
    (87) nested_descriptions -> . statement_property_identify VALUE CLASS_IDENTIFIER
    (88) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE nested_descriptions
    (89) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER
    (90) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY nested_descriptions
    (91) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER
    (92) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME nested_descriptions
    (93) nested_descriptions -> . CLASS_IDENTIFIER
    (34) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (35) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (36) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 171
    LEFT_PAREN      shift and go to state 119
    PROPERTY_IDENTIFIER_has shift and go to state 34
    PROPERTY_IDENTIFIER_is_Of shift and go to state 35
    PROPERTY_IDENTIFIER shift and go to state 36

    statement_property_identify    shift and go to state 140
    nested_descriptions            shift and go to state 172

state 146

    (91) nested_descriptions -> statement_property_identify statement_others_reserved_word SOME . CLASS_IDENTIFIER
    (92) nested_descriptions -> statement_property_identify statement_others_reserved_word SOME . nested_descriptions
    (79) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (80) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (81) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (82) nested_descriptions -> . statement_property_identify statement_others_reserved_word nested_descriptions
    (83) nested_descriptions -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (84) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER
    (85) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE IndividualNames
    (86) nested_descriptions -> . statement_property_identify VALUE IndividualNames
    (87) nested_descriptions -> . statement_property_identify VALUE CLASS_IDENTIFIER
    (88) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE nested_descriptions
    (89) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER
    (90) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY nested_descriptions
    (91) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER
    (92) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME nested_descriptions
    (93) nested_descriptions -> . CLASS_IDENTIFIER
    (34) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (35) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (36) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 173
    LEFT_PAREN      shift and go to state 119
    PROPERTY_IDENTIFIER_has shift and go to state 34
    PROPERTY_IDENTIFIER_is_Of shift and go to state 35
    PROPERTY_IDENTIFIER shift and go to state 36

    statement_property_identify    shift and go to state 140
    nested_descriptions            shift and go to state 174

state 147

    (56) usually_others_paren -> statement_property_identify statement_others_reserved_word LEFT_PAREN . usually_others_others_paren
    (81) nested_descriptions -> LEFT_PAREN . nested_descriptions RIGHT_PAREN
    (61) usually_others_others_paren -> . CLASS_IDENTIFIER RIGHT_PAREN
    (62) usually_others_others_paren -> . CLASS_IDENTIFIER OR usually_others_others_paren
    (79) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (80) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (81) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (82) nested_descriptions -> . statement_property_identify statement_others_reserved_word nested_descriptions
    (83) nested_descriptions -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (84) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER
    (85) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE IndividualNames
    (86) nested_descriptions -> . statement_property_identify VALUE IndividualNames
    (87) nested_descriptions -> . statement_property_identify VALUE CLASS_IDENTIFIER
    (88) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE nested_descriptions
    (89) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER
    (90) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY nested_descriptions
    (91) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER
    (92) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME nested_descriptions
    (93) nested_descriptions -> . CLASS_IDENTIFIER
    (34) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (35) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (36) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 175
    LEFT_PAREN      shift and go to state 119
    PROPERTY_IDENTIFIER_has shift and go to state 34
    PROPERTY_IDENTIFIER_is_Of shift and go to state 35
    PROPERTY_IDENTIFIER shift and go to state 36

    statement_property_identify    shift and go to state 140
    usually_others_others_paren    shift and go to state 128
    nested_descriptions            shift and go to state 120

state 148

    (86) nested_descriptions -> statement_property_identify VALUE IndividualNames .

    AND             reduce using rule 86 (nested_descriptions -> statement_property_identify VALUE IndividualNames .)
    OR              reduce using rule 86 (nested_descriptions -> statement_property_identify VALUE IndividualNames .)
    SubClassOf      reduce using rule 86 (nested_descriptions -> statement_property_identify VALUE IndividualNames .)
    DisjointClasses reduce using rule 86 (nested_descriptions -> statement_property_identify VALUE IndividualNames .)
    Individuals     reduce using rule 86 (nested_descriptions -> statement_property_identify VALUE IndividualNames .)
    Class           reduce using rule 86 (nested_descriptions -> statement_property_identify VALUE IndividualNames .)
    $end            reduce using rule 86 (nested_descriptions -> statement_property_identify VALUE IndividualNames .)
    RIGHT_PAREN     reduce using rule 86 (nested_descriptions -> statement_property_identify VALUE IndividualNames .)


state 149

    (87) nested_descriptions -> statement_property_identify VALUE CLASS_IDENTIFIER .

    AND             reduce using rule 87 (nested_descriptions -> statement_property_identify VALUE CLASS_IDENTIFIER .)
    OR              reduce using rule 87 (nested_descriptions -> statement_property_identify VALUE CLASS_IDENTIFIER .)
    SubClassOf      reduce using rule 87 (nested_descriptions -> statement_property_identify VALUE CLASS_IDENTIFIER .)
    DisjointClasses reduce using rule 87 (nested_descriptions -> statement_property_identify VALUE CLASS_IDENTIFIER .)
    Individuals     reduce using rule 87 (nested_descriptions -> statement_property_identify VALUE CLASS_IDENTIFIER .)
    Class           reduce using rule 87 (nested_descriptions -> statement_property_identify VALUE CLASS_IDENTIFIER .)
    $end            reduce using rule 87 (nested_descriptions -> statement_property_identify VALUE CLASS_IDENTIFIER .)
    RIGHT_PAREN     reduce using rule 87 (nested_descriptions -> statement_property_identify VALUE CLASS_IDENTIFIER .)


state 150

    (81) nested_descriptions -> LEFT_PAREN nested_descriptions RIGHT_PAREN .

    AND             reduce using rule 81 (nested_descriptions -> LEFT_PAREN nested_descriptions RIGHT_PAREN .)
    OR              reduce using rule 81 (nested_descriptions -> LEFT_PAREN nested_descriptions RIGHT_PAREN .)
    SubClassOf      reduce using rule 81 (nested_descriptions -> LEFT_PAREN nested_descriptions RIGHT_PAREN .)
    DisjointClasses reduce using rule 81 (nested_descriptions -> LEFT_PAREN nested_descriptions RIGHT_PAREN .)
    Individuals     reduce using rule 81 (nested_descriptions -> LEFT_PAREN nested_descriptions RIGHT_PAREN .)
    Class           reduce using rule 81 (nested_descriptions -> LEFT_PAREN nested_descriptions RIGHT_PAREN .)
    $end            reduce using rule 81 (nested_descriptions -> LEFT_PAREN nested_descriptions RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 81 (nested_descriptions -> LEFT_PAREN nested_descriptions RIGHT_PAREN .)


state 151

    (82) nested_descriptions -> statement_property_identify statement_others_reserved_word . nested_descriptions
    (83) nested_descriptions -> statement_property_identify statement_others_reserved_word . CLASS_IDENTIFIER
    (84) nested_descriptions -> statement_property_identify statement_others_reserved_word . VALUE CLASS_IDENTIFIER
    (85) nested_descriptions -> statement_property_identify statement_others_reserved_word . VALUE IndividualNames
    (88) nested_descriptions -> statement_property_identify statement_others_reserved_word . VALUE nested_descriptions
    (89) nested_descriptions -> statement_property_identify statement_others_reserved_word . ONLY CLASS_IDENTIFIER
    (90) nested_descriptions -> statement_property_identify statement_others_reserved_word . ONLY nested_descriptions
    (91) nested_descriptions -> statement_property_identify statement_others_reserved_word . SOME CLASS_IDENTIFIER
    (92) nested_descriptions -> statement_property_identify statement_others_reserved_word . SOME nested_descriptions
    (79) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (80) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (81) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (82) nested_descriptions -> . statement_property_identify statement_others_reserved_word nested_descriptions
    (83) nested_descriptions -> . statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER
    (84) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER
    (85) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE IndividualNames
    (86) nested_descriptions -> . statement_property_identify VALUE IndividualNames
    (87) nested_descriptions -> . statement_property_identify VALUE CLASS_IDENTIFIER
    (88) nested_descriptions -> . statement_property_identify statement_others_reserved_word VALUE nested_descriptions
    (89) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER
    (90) nested_descriptions -> . statement_property_identify statement_others_reserved_word ONLY nested_descriptions
    (91) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER
    (92) nested_descriptions -> . statement_property_identify statement_others_reserved_word SOME nested_descriptions
    (93) nested_descriptions -> . CLASS_IDENTIFIER
    (34) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (35) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (36) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 176
    VALUE           shift and go to state 144
    ONLY            shift and go to state 145
    SOME            shift and go to state 146
    LEFT_PAREN      shift and go to state 119
    PROPERTY_IDENTIFIER_has shift and go to state 34
    PROPERTY_IDENTIFIER_is_Of shift and go to state 35
    PROPERTY_IDENTIFIER shift and go to state 36

    statement_property_identify    shift and go to state 140
    nested_descriptions            shift and go to state 142

state 152

    (96) statement_closed_axiom_class -> CLASS_IDENTIFIER expression statement_property_identify ONLY LEFT_PAREN . closed_axiom_restriction_combination RIGHT_PAREN
    (97) closed_axiom_restriction_combination -> . CLASS_IDENTIFIER
    (98) closed_axiom_restriction_combination -> . CLASS_IDENTIFIER OR closed_axiom_restriction_combination

    CLASS_IDENTIFIER shift and go to state 177

    closed_axiom_restriction_combination shift and go to state 178

state 153

    (21) JustDefined -> CLASS_IDENTIFIER AND expression statement_class_disjoin statement_class_individuals .

    SubClassOf      reduce using rule 21 (JustDefined -> CLASS_IDENTIFIER AND expression statement_class_disjoin statement_class_individuals .)
    DisjointClasses reduce using rule 21 (JustDefined -> CLASS_IDENTIFIER AND expression statement_class_disjoin statement_class_individuals .)
    Individuals     reduce using rule 21 (JustDefined -> CLASS_IDENTIFIER AND expression statement_class_disjoin statement_class_individuals .)
    Class           reduce using rule 21 (JustDefined -> CLASS_IDENTIFIER AND expression statement_class_disjoin statement_class_individuals .)
    $end            reduce using rule 21 (JustDefined -> CLASS_IDENTIFIER AND expression statement_class_disjoin statement_class_individuals .)


state 154

    (95) statement_closed_axiom_class -> CLASS_IDENTIFIER AND expression statement_property_identify ONLY . LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN

    LEFT_PAREN      shift and go to state 179


state 155

    (54) usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET . statement_operator_symbol NUMBER RIGHT_BRACKET
    (45) statement_operator_symbol -> . LESS_THAN
    (46) statement_operator_symbol -> . GREATER_THAN
    (47) statement_operator_symbol -> . EQUALS
    (48) statement_operator_symbol -> . GREATER_THAN EQUALS
    (49) statement_operator_symbol -> . LESS_THAN EQUALS

    LESS_THAN       shift and go to state 181
    GREATER_THAN    shift and go to state 182
    EQUALS          shift and go to state 183

    statement_operator_symbol      shift and go to state 180

state 156

    (52) usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE .

    COMMA           reduce using rule 52 (usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE .)
    DisjointClasses reduce using rule 52 (usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE .)
    Individuals     reduce using rule 52 (usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE .)
    SubClassOf      reduce using rule 52 (usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE .)
    Class           reduce using rule 52 (usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE .)
    $end            reduce using rule 52 (usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE .)
    EquivalentTo    reduce using rule 52 (usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE .)
    PROPERTY_IDENTIFIER_has reduce using rule 52 (usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 52 (usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE .)
    PROPERTY_IDENTIFIER reduce using rule 52 (usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE .)
    RIGHT_PAREN     reduce using rule 52 (usually_inside_paren -> statement_property_identify statement_reserved_word NUMBER NAMESPACEID DATA_TYPE .)


state 157

    (61) usually_others_others_paren -> CLASS_IDENTIFIER RIGHT_PAREN .

    DisjointClasses reduce using rule 61 (usually_others_others_paren -> CLASS_IDENTIFIER RIGHT_PAREN .)
    Individuals     reduce using rule 61 (usually_others_others_paren -> CLASS_IDENTIFIER RIGHT_PAREN .)
    SubClassOf      reduce using rule 61 (usually_others_others_paren -> CLASS_IDENTIFIER RIGHT_PAREN .)
    Class           reduce using rule 61 (usually_others_others_paren -> CLASS_IDENTIFIER RIGHT_PAREN .)
    $end            reduce using rule 61 (usually_others_others_paren -> CLASS_IDENTIFIER RIGHT_PAREN .)
    EquivalentTo    reduce using rule 61 (usually_others_others_paren -> CLASS_IDENTIFIER RIGHT_PAREN .)
    PROPERTY_IDENTIFIER_has reduce using rule 61 (usually_others_others_paren -> CLASS_IDENTIFIER RIGHT_PAREN .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 61 (usually_others_others_paren -> CLASS_IDENTIFIER RIGHT_PAREN .)
    PROPERTY_IDENTIFIER reduce using rule 61 (usually_others_others_paren -> CLASS_IDENTIFIER RIGHT_PAREN .)


state 158

    (62) usually_others_others_paren -> CLASS_IDENTIFIER OR . usually_others_others_paren
    (61) usually_others_others_paren -> . CLASS_IDENTIFIER RIGHT_PAREN
    (62) usually_others_others_paren -> . CLASS_IDENTIFIER OR usually_others_others_paren

    CLASS_IDENTIFIER shift and go to state 129

    usually_others_others_paren    shift and go to state 184

state 159

    (60) usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET . statement_operator_symbol NUMBER RIGHT_BRACKET
    (45) statement_operator_symbol -> . LESS_THAN
    (46) statement_operator_symbol -> . GREATER_THAN
    (47) statement_operator_symbol -> . EQUALS
    (48) statement_operator_symbol -> . GREATER_THAN EQUALS
    (49) statement_operator_symbol -> . LESS_THAN EQUALS

    LESS_THAN       shift and go to state 181
    GREATER_THAN    shift and go to state 182
    EQUALS          shift and go to state 183

    statement_operator_symbol      shift and go to state 185

state 160

    (58) usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE .

    DisjointClasses reduce using rule 58 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE .)
    Individuals     reduce using rule 58 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE .)
    SubClassOf      reduce using rule 58 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE .)
    Class           reduce using rule 58 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE .)
    $end            reduce using rule 58 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE .)
    EquivalentTo    reduce using rule 58 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE .)
    PROPERTY_IDENTIFIER_has reduce using rule 58 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 58 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE .)
    PROPERTY_IDENTIFIER reduce using rule 58 (usually_others_paren -> statement_property_identify statement_others_reserved_word NUMBER NAMESPACEID DATA_TYPE .)


state 161

    (37) primitive_class_mandatory -> CLASS_IDENTIFIER COMMA expression statement_class_disjoin statement_class_individuals .

    EquivalentTo    reduce using rule 37 (primitive_class_mandatory -> CLASS_IDENTIFIER COMMA expression statement_class_disjoin statement_class_individuals .)
    DisjointClasses reduce using rule 37 (primitive_class_mandatory -> CLASS_IDENTIFIER COMMA expression statement_class_disjoin statement_class_individuals .)
    Individuals     reduce using rule 37 (primitive_class_mandatory -> CLASS_IDENTIFIER COMMA expression statement_class_disjoin statement_class_individuals .)
    Class           reduce using rule 37 (primitive_class_mandatory -> CLASS_IDENTIFIER COMMA expression statement_class_disjoin statement_class_individuals .)
    $end            reduce using rule 37 (primitive_class_mandatory -> CLASS_IDENTIFIER COMMA expression statement_class_disjoin statement_class_individuals .)


state 162

    (38) primitive_class_mandatory -> CLASS_IDENTIFIER AND expression statement_class_disjoin statement_class_individuals .

    EquivalentTo    reduce using rule 38 (primitive_class_mandatory -> CLASS_IDENTIFIER AND expression statement_class_disjoin statement_class_individuals .)
    DisjointClasses reduce using rule 38 (primitive_class_mandatory -> CLASS_IDENTIFIER AND expression statement_class_disjoin statement_class_individuals .)
    Individuals     reduce using rule 38 (primitive_class_mandatory -> CLASS_IDENTIFIER AND expression statement_class_disjoin statement_class_individuals .)
    Class           reduce using rule 38 (primitive_class_mandatory -> CLASS_IDENTIFIER AND expression statement_class_disjoin statement_class_individuals .)
    $end            reduce using rule 38 (primitive_class_mandatory -> CLASS_IDENTIFIER AND expression statement_class_disjoin statement_class_individuals .)


state 163

    (94) statement_closed_axiom_class -> CLASS_IDENTIFIER COMMA expression statement_property_identify ONLY LEFT_PAREN . closed_axiom_restriction_combination RIGHT_PAREN
    (97) closed_axiom_restriction_combination -> . CLASS_IDENTIFIER
    (98) closed_axiom_restriction_combination -> . CLASS_IDENTIFIER OR closed_axiom_restriction_combination

    CLASS_IDENTIFIER shift and go to state 177

    closed_axiom_restriction_combination shift and go to state 186

state 164

    (86) nested_descriptions -> statement_property_identify VALUE . IndividualNames
    (87) nested_descriptions -> statement_property_identify VALUE . CLASS_IDENTIFIER

    IndividualNames shift and go to state 148
    CLASS_IDENTIFIER shift and go to state 149


state 165

    (30) statement_others_reserved_word -> SOME .

    CLASS_IDENTIFIER reduce using rule 30 (statement_others_reserved_word -> SOME .)
    VALUE           reduce using rule 30 (statement_others_reserved_word -> SOME .)
    ONLY            reduce using rule 30 (statement_others_reserved_word -> SOME .)
    SOME            reduce using rule 30 (statement_others_reserved_word -> SOME .)
    LEFT_PAREN      reduce using rule 30 (statement_others_reserved_word -> SOME .)
    PROPERTY_IDENTIFIER_has reduce using rule 30 (statement_others_reserved_word -> SOME .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 30 (statement_others_reserved_word -> SOME .)
    PROPERTY_IDENTIFIER reduce using rule 30 (statement_others_reserved_word -> SOME .)


state 166

    (32) statement_others_reserved_word -> OR .

    CLASS_IDENTIFIER reduce using rule 32 (statement_others_reserved_word -> OR .)
    VALUE           reduce using rule 32 (statement_others_reserved_word -> OR .)
    ONLY            reduce using rule 32 (statement_others_reserved_word -> OR .)
    SOME            reduce using rule 32 (statement_others_reserved_word -> OR .)
    LEFT_PAREN      reduce using rule 32 (statement_others_reserved_word -> OR .)
    PROPERTY_IDENTIFIER_has reduce using rule 32 (statement_others_reserved_word -> OR .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 32 (statement_others_reserved_word -> OR .)
    PROPERTY_IDENTIFIER reduce using rule 32 (statement_others_reserved_word -> OR .)


state 167

    (33) statement_others_reserved_word -> AND .

    CLASS_IDENTIFIER reduce using rule 33 (statement_others_reserved_word -> AND .)
    VALUE           reduce using rule 33 (statement_others_reserved_word -> AND .)
    ONLY            reduce using rule 33 (statement_others_reserved_word -> AND .)
    SOME            reduce using rule 33 (statement_others_reserved_word -> AND .)
    LEFT_PAREN      reduce using rule 33 (statement_others_reserved_word -> AND .)
    PROPERTY_IDENTIFIER_has reduce using rule 33 (statement_others_reserved_word -> AND .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 33 (statement_others_reserved_word -> AND .)
    PROPERTY_IDENTIFIER reduce using rule 33 (statement_others_reserved_word -> AND .)


state 168

    (84) nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER .
    (93) nested_descriptions -> CLASS_IDENTIFIER .

  ! reduce/reduce conflict for AND resolved using rule 84 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for OR resolved using rule 84 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for SubClassOf resolved using rule 84 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for DisjointClasses resolved using rule 84 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for Individuals resolved using rule 84 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for Class resolved using rule 84 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 84 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 84 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER .)
    AND             reduce using rule 84 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER .)
    OR              reduce using rule 84 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER .)
    SubClassOf      reduce using rule 84 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER .)
    DisjointClasses reduce using rule 84 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER .)
    Individuals     reduce using rule 84 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER .)
    Class           reduce using rule 84 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER .)
    $end            reduce using rule 84 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER .)
    RIGHT_PAREN     reduce using rule 84 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER .)

  ! AND             [ reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! OR              [ reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! SubClassOf      [ reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! DisjointClasses [ reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! Individuals     [ reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! Class           [ reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! $end            [ reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! RIGHT_PAREN     [ reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .) ]


state 169

    (85) nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE IndividualNames .

    AND             reduce using rule 85 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE IndividualNames .)
    OR              reduce using rule 85 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE IndividualNames .)
    SubClassOf      reduce using rule 85 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE IndividualNames .)
    DisjointClasses reduce using rule 85 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE IndividualNames .)
    Individuals     reduce using rule 85 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE IndividualNames .)
    Class           reduce using rule 85 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE IndividualNames .)
    $end            reduce using rule 85 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE IndividualNames .)
    RIGHT_PAREN     reduce using rule 85 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE IndividualNames .)


state 170

    (88) nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE nested_descriptions .
    (79) nested_descriptions -> nested_descriptions . AND nested_descriptions
    (80) nested_descriptions -> nested_descriptions . OR nested_descriptions

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SubClassOf      reduce using rule 88 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE nested_descriptions .)
    DisjointClasses reduce using rule 88 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE nested_descriptions .)
    Individuals     reduce using rule 88 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE nested_descriptions .)
    Class           reduce using rule 88 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE nested_descriptions .)
    $end            reduce using rule 88 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE nested_descriptions .)
    RIGHT_PAREN     reduce using rule 88 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE nested_descriptions .)
    AND             shift and go to state 112
    OR              shift and go to state 113

  ! AND             [ reduce using rule 88 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE nested_descriptions .) ]
  ! OR              [ reduce using rule 88 (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE nested_descriptions .) ]


state 171

    (89) nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER .
    (93) nested_descriptions -> CLASS_IDENTIFIER .

  ! reduce/reduce conflict for AND resolved using rule 89 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for OR resolved using rule 89 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for SubClassOf resolved using rule 89 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for DisjointClasses resolved using rule 89 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for Individuals resolved using rule 89 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for Class resolved using rule 89 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 89 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 89 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER .)
    AND             reduce using rule 89 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER .)
    OR              reduce using rule 89 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER .)
    SubClassOf      reduce using rule 89 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER .)
    DisjointClasses reduce using rule 89 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER .)
    Individuals     reduce using rule 89 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER .)
    Class           reduce using rule 89 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER .)
    $end            reduce using rule 89 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER .)
    RIGHT_PAREN     reduce using rule 89 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER .)

  ! AND             [ reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! OR              [ reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! SubClassOf      [ reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! DisjointClasses [ reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! Individuals     [ reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! Class           [ reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! $end            [ reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! RIGHT_PAREN     [ reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .) ]


state 172

    (90) nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY nested_descriptions .
    (79) nested_descriptions -> nested_descriptions . AND nested_descriptions
    (80) nested_descriptions -> nested_descriptions . OR nested_descriptions

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SubClassOf      reduce using rule 90 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY nested_descriptions .)
    DisjointClasses reduce using rule 90 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY nested_descriptions .)
    Individuals     reduce using rule 90 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY nested_descriptions .)
    Class           reduce using rule 90 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY nested_descriptions .)
    $end            reduce using rule 90 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY nested_descriptions .)
    RIGHT_PAREN     reduce using rule 90 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY nested_descriptions .)
    AND             shift and go to state 112
    OR              shift and go to state 113

  ! AND             [ reduce using rule 90 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY nested_descriptions .) ]
  ! OR              [ reduce using rule 90 (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY nested_descriptions .) ]


state 173

    (91) nested_descriptions -> statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER .
    (93) nested_descriptions -> CLASS_IDENTIFIER .

  ! reduce/reduce conflict for AND resolved using rule 91 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for OR resolved using rule 91 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for SubClassOf resolved using rule 91 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for DisjointClasses resolved using rule 91 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for Individuals resolved using rule 91 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for Class resolved using rule 91 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 91 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 91 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER .)
    AND             reduce using rule 91 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER .)
    OR              reduce using rule 91 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER .)
    SubClassOf      reduce using rule 91 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER .)
    DisjointClasses reduce using rule 91 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER .)
    Individuals     reduce using rule 91 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER .)
    Class           reduce using rule 91 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER .)
    $end            reduce using rule 91 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER .)
    RIGHT_PAREN     reduce using rule 91 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER .)

  ! AND             [ reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! OR              [ reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! SubClassOf      [ reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! DisjointClasses [ reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! Individuals     [ reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! Class           [ reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! $end            [ reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! RIGHT_PAREN     [ reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .) ]


state 174

    (92) nested_descriptions -> statement_property_identify statement_others_reserved_word SOME nested_descriptions .
    (79) nested_descriptions -> nested_descriptions . AND nested_descriptions
    (80) nested_descriptions -> nested_descriptions . OR nested_descriptions

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SubClassOf      reduce using rule 92 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME nested_descriptions .)
    DisjointClasses reduce using rule 92 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME nested_descriptions .)
    Individuals     reduce using rule 92 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME nested_descriptions .)
    Class           reduce using rule 92 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME nested_descriptions .)
    $end            reduce using rule 92 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME nested_descriptions .)
    RIGHT_PAREN     reduce using rule 92 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME nested_descriptions .)
    AND             shift and go to state 112
    OR              shift and go to state 113

  ! AND             [ reduce using rule 92 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME nested_descriptions .) ]
  ! OR              [ reduce using rule 92 (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME nested_descriptions .) ]


state 175

    (61) usually_others_others_paren -> CLASS_IDENTIFIER . RIGHT_PAREN
    (62) usually_others_others_paren -> CLASS_IDENTIFIER . OR usually_others_others_paren
    (93) nested_descriptions -> CLASS_IDENTIFIER .

  ! shift/reduce conflict for RIGHT_PAREN resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RIGHT_PAREN     shift and go to state 157
    OR              shift and go to state 158
    AND             reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .)

  ! RIGHT_PAREN     [ reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! OR              [ reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .) ]


state 176

    (83) nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .
    (93) nested_descriptions -> CLASS_IDENTIFIER .

  ! reduce/reduce conflict for AND resolved using rule 83 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for OR resolved using rule 83 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for SubClassOf resolved using rule 83 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for DisjointClasses resolved using rule 83 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for Individuals resolved using rule 83 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for Class resolved using rule 83 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 83 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 83 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    RIGHT_PAREN     reduce using rule 83 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    AND             reduce using rule 83 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    OR              reduce using rule 83 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    SubClassOf      reduce using rule 83 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    DisjointClasses reduce using rule 83 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    Individuals     reduce using rule 83 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    Class           reduce using rule 83 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)
    $end            reduce using rule 83 (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER .)

  ! AND             [ reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! OR              [ reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! SubClassOf      [ reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! DisjointClasses [ reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! Individuals     [ reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! Class           [ reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! $end            [ reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! RIGHT_PAREN     [ reduce using rule 93 (nested_descriptions -> CLASS_IDENTIFIER .) ]


state 177

    (97) closed_axiom_restriction_combination -> CLASS_IDENTIFIER .
    (98) closed_axiom_restriction_combination -> CLASS_IDENTIFIER . OR closed_axiom_restriction_combination

    RIGHT_PAREN     reduce using rule 97 (closed_axiom_restriction_combination -> CLASS_IDENTIFIER .)
    OR              shift and go to state 187


state 178

    (96) statement_closed_axiom_class -> CLASS_IDENTIFIER expression statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 188


state 179

    (95) statement_closed_axiom_class -> CLASS_IDENTIFIER AND expression statement_property_identify ONLY LEFT_PAREN . closed_axiom_restriction_combination RIGHT_PAREN
    (97) closed_axiom_restriction_combination -> . CLASS_IDENTIFIER
    (98) closed_axiom_restriction_combination -> . CLASS_IDENTIFIER OR closed_axiom_restriction_combination

    CLASS_IDENTIFIER shift and go to state 177

    closed_axiom_restriction_combination shift and go to state 189

state 180

    (54) usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol . NUMBER RIGHT_BRACKET

    NUMBER          shift and go to state 190


state 181

    (45) statement_operator_symbol -> LESS_THAN .
    (49) statement_operator_symbol -> LESS_THAN . EQUALS

    NUMBER          reduce using rule 45 (statement_operator_symbol -> LESS_THAN .)
    EQUALS          shift and go to state 191


state 182

    (46) statement_operator_symbol -> GREATER_THAN .
    (48) statement_operator_symbol -> GREATER_THAN . EQUALS

    NUMBER          reduce using rule 46 (statement_operator_symbol -> GREATER_THAN .)
    EQUALS          shift and go to state 192


state 183

    (47) statement_operator_symbol -> EQUALS .

    NUMBER          reduce using rule 47 (statement_operator_symbol -> EQUALS .)


state 184

    (62) usually_others_others_paren -> CLASS_IDENTIFIER OR usually_others_others_paren .

    DisjointClasses reduce using rule 62 (usually_others_others_paren -> CLASS_IDENTIFIER OR usually_others_others_paren .)
    Individuals     reduce using rule 62 (usually_others_others_paren -> CLASS_IDENTIFIER OR usually_others_others_paren .)
    SubClassOf      reduce using rule 62 (usually_others_others_paren -> CLASS_IDENTIFIER OR usually_others_others_paren .)
    Class           reduce using rule 62 (usually_others_others_paren -> CLASS_IDENTIFIER OR usually_others_others_paren .)
    $end            reduce using rule 62 (usually_others_others_paren -> CLASS_IDENTIFIER OR usually_others_others_paren .)
    EquivalentTo    reduce using rule 62 (usually_others_others_paren -> CLASS_IDENTIFIER OR usually_others_others_paren .)
    PROPERTY_IDENTIFIER_has reduce using rule 62 (usually_others_others_paren -> CLASS_IDENTIFIER OR usually_others_others_paren .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 62 (usually_others_others_paren -> CLASS_IDENTIFIER OR usually_others_others_paren .)
    PROPERTY_IDENTIFIER reduce using rule 62 (usually_others_others_paren -> CLASS_IDENTIFIER OR usually_others_others_paren .)


state 185

    (60) usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol . NUMBER RIGHT_BRACKET

    NUMBER          shift and go to state 193


state 186

    (94) statement_closed_axiom_class -> CLASS_IDENTIFIER COMMA expression statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 194


state 187

    (98) closed_axiom_restriction_combination -> CLASS_IDENTIFIER OR . closed_axiom_restriction_combination
    (97) closed_axiom_restriction_combination -> . CLASS_IDENTIFIER
    (98) closed_axiom_restriction_combination -> . CLASS_IDENTIFIER OR closed_axiom_restriction_combination

    CLASS_IDENTIFIER shift and go to state 177

    closed_axiom_restriction_combination shift and go to state 195

state 188

    (96) statement_closed_axiom_class -> CLASS_IDENTIFIER expression statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN .

    SubClassOf      reduce using rule 96 (statement_closed_axiom_class -> CLASS_IDENTIFIER expression statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN .)
    DisjointClasses reduce using rule 96 (statement_closed_axiom_class -> CLASS_IDENTIFIER expression statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN .)
    Individuals     reduce using rule 96 (statement_closed_axiom_class -> CLASS_IDENTIFIER expression statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN .)
    Class           reduce using rule 96 (statement_closed_axiom_class -> CLASS_IDENTIFIER expression statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN .)
    $end            reduce using rule 96 (statement_closed_axiom_class -> CLASS_IDENTIFIER expression statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN .)
    EquivalentTo    reduce using rule 96 (statement_closed_axiom_class -> CLASS_IDENTIFIER expression statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN .)


state 189

    (95) statement_closed_axiom_class -> CLASS_IDENTIFIER AND expression statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 196


state 190

    (54) usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 197


state 191

    (49) statement_operator_symbol -> LESS_THAN EQUALS .

    NUMBER          reduce using rule 49 (statement_operator_symbol -> LESS_THAN EQUALS .)


state 192

    (48) statement_operator_symbol -> GREATER_THAN EQUALS .

    NUMBER          reduce using rule 48 (statement_operator_symbol -> GREATER_THAN EQUALS .)


state 193

    (60) usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 198


state 194

    (94) statement_closed_axiom_class -> CLASS_IDENTIFIER COMMA expression statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN .

    SubClassOf      reduce using rule 94 (statement_closed_axiom_class -> CLASS_IDENTIFIER COMMA expression statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN .)
    DisjointClasses reduce using rule 94 (statement_closed_axiom_class -> CLASS_IDENTIFIER COMMA expression statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN .)
    Individuals     reduce using rule 94 (statement_closed_axiom_class -> CLASS_IDENTIFIER COMMA expression statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN .)
    Class           reduce using rule 94 (statement_closed_axiom_class -> CLASS_IDENTIFIER COMMA expression statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN .)
    $end            reduce using rule 94 (statement_closed_axiom_class -> CLASS_IDENTIFIER COMMA expression statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN .)
    EquivalentTo    reduce using rule 94 (statement_closed_axiom_class -> CLASS_IDENTIFIER COMMA expression statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN .)


state 195

    (98) closed_axiom_restriction_combination -> CLASS_IDENTIFIER OR closed_axiom_restriction_combination .

    RIGHT_PAREN     reduce using rule 98 (closed_axiom_restriction_combination -> CLASS_IDENTIFIER OR closed_axiom_restriction_combination .)


state 196

    (95) statement_closed_axiom_class -> CLASS_IDENTIFIER AND expression statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN .

    SubClassOf      reduce using rule 95 (statement_closed_axiom_class -> CLASS_IDENTIFIER AND expression statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN .)
    DisjointClasses reduce using rule 95 (statement_closed_axiom_class -> CLASS_IDENTIFIER AND expression statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN .)
    Individuals     reduce using rule 95 (statement_closed_axiom_class -> CLASS_IDENTIFIER AND expression statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN .)
    Class           reduce using rule 95 (statement_closed_axiom_class -> CLASS_IDENTIFIER AND expression statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN .)
    $end            reduce using rule 95 (statement_closed_axiom_class -> CLASS_IDENTIFIER AND expression statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN .)
    EquivalentTo    reduce using rule 95 (statement_closed_axiom_class -> CLASS_IDENTIFIER AND expression statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN .)


state 197

    (54) usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET .

    COMMA           reduce using rule 54 (usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET .)
    DisjointClasses reduce using rule 54 (usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET .)
    Individuals     reduce using rule 54 (usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET .)
    SubClassOf      reduce using rule 54 (usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET .)
    Class           reduce using rule 54 (usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET .)
    $end            reduce using rule 54 (usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET .)
    EquivalentTo    reduce using rule 54 (usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET .)
    PROPERTY_IDENTIFIER_has reduce using rule 54 (usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 54 (usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET .)
    PROPERTY_IDENTIFIER reduce using rule 54 (usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET .)
    RIGHT_PAREN     reduce using rule 54 (usually_inside_paren -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET .)


state 198

    (60) usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET .

    DisjointClasses reduce using rule 60 (usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET .)
    Individuals     reduce using rule 60 (usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET .)
    SubClassOf      reduce using rule 60 (usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET .)
    Class           reduce using rule 60 (usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET .)
    $end            reduce using rule 60 (usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET .)
    EquivalentTo    reduce using rule 60 (usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET .)
    PROPERTY_IDENTIFIER_has reduce using rule 60 (usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 60 (usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET .)
    PROPERTY_IDENTIFIER reduce using rule 60 (usually_others_paren -> statement_property_identify statement_others_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for DisjointClasses in state 26 resolved as shift
WARNING: shift/reduce conflict for DisjointClasses in state 42 resolved as shift
WARNING: shift/reduce conflict for Individuals in state 54 resolved as shift
WARNING: shift/reduce conflict for Individuals in state 73 resolved as shift
WARNING: shift/reduce conflict for DisjointClasses in state 80 resolved as shift
WARNING: shift/reduce conflict for DisjointClasses in state 85 resolved as shift
WARNING: shift/reduce conflict for DisjointClasses in state 105 resolved as shift
WARNING: shift/reduce conflict for DisjointClasses in state 106 resolved as shift
WARNING: shift/reduce conflict for Individuals in state 110 resolved as shift
WARNING: shift/reduce conflict for CLASS_IDENTIFIER in state 115 resolved as shift
WARNING: shift/reduce conflict for Individuals in state 123 resolved as shift
WARNING: shift/reduce conflict for Individuals in state 134 resolved as shift
WARNING: shift/reduce conflict for Individuals in state 135 resolved as shift
WARNING: shift/reduce conflict for AND in state 139 resolved as shift
WARNING: shift/reduce conflict for OR in state 139 resolved as shift
WARNING: shift/reduce conflict for AND in state 141 resolved as shift
WARNING: shift/reduce conflict for OR in state 141 resolved as shift
WARNING: shift/reduce conflict for AND in state 142 resolved as shift
WARNING: shift/reduce conflict for OR in state 142 resolved as shift
WARNING: shift/reduce conflict for AND in state 170 resolved as shift
WARNING: shift/reduce conflict for OR in state 170 resolved as shift
WARNING: shift/reduce conflict for AND in state 172 resolved as shift
WARNING: shift/reduce conflict for OR in state 172 resolved as shift
WARNING: shift/reduce conflict for AND in state 174 resolved as shift
WARNING: shift/reduce conflict for OR in state 174 resolved as shift
WARNING: shift/reduce conflict for RIGHT_PAREN in state 175 resolved as shift
WARNING: shift/reduce conflict for OR in state 175 resolved as shift
WARNING: reduce/reduce conflict in state 5 resolved using rule (statements -> Class CLASS_IDENTIFIER statement_defined_class)
WARNING: rejected rule (empty -> <empty>) in state 5
WARNING: reduce/reduce conflict in state 6 resolved using rule (statements -> Class CLASS_IDENTIFIER statement_primitive_class)
WARNING: rejected rule (empty -> <empty>) in state 6
WARNING: reduce/reduce conflict in state 41 resolved using rule (primitive_class_mandatory -> CLASS_IDENTIFIER)
WARNING: rejected rule (statement_covered_class_check -> CLASS_IDENTIFIER) in state 41
WARNING: reduce/reduce conflict in state 57 resolved using rule (statement_reserved_word -> SOME)
WARNING: rejected rule (statement_others_reserved_word -> SOME) in state 57
WARNING: reduce/reduce conflict in state 61 resolved using rule (statement_reserved_word -> OR)
WARNING: rejected rule (statement_others_reserved_word -> OR) in state 61
WARNING: reduce/reduce conflict in state 62 resolved using rule (statement_reserved_word -> AND)
WARNING: rejected rule (statement_others_reserved_word -> AND) in state 62
WARNING: reduce/reduce conflict in state 116 resolved using rule (statement_reserved_word -> SOME)
WARNING: rejected rule (statement_others_reserved_word -> SOME) in state 116
WARNING: reduce/reduce conflict in state 117 resolved using rule (statement_reserved_word -> OR)
WARNING: rejected rule (statement_others_reserved_word -> OR) in state 117
WARNING: reduce/reduce conflict in state 118 resolved using rule (statement_reserved_word -> AND)
WARNING: rejected rule (statement_others_reserved_word -> AND) in state 118
WARNING: reduce/reduce conflict in state 143 resolved using rule (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER)
WARNING: rejected rule (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER) in state 143
WARNING: reduce/reduce conflict in state 143 resolved using rule (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER)
WARNING: rejected rule (nested_descriptions -> CLASS_IDENTIFIER) in state 143
WARNING: reduce/reduce conflict in state 143 resolved using rule (usually_others_paren -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER)
WARNING: rejected rule (nested_descriptions -> CLASS_IDENTIFIER) in state 143
WARNING: reduce/reduce conflict in state 168 resolved using rule (nested_descriptions -> statement_property_identify statement_others_reserved_word VALUE CLASS_IDENTIFIER)
WARNING: rejected rule (nested_descriptions -> CLASS_IDENTIFIER) in state 168
WARNING: reduce/reduce conflict in state 171 resolved using rule (nested_descriptions -> statement_property_identify statement_others_reserved_word ONLY CLASS_IDENTIFIER)
WARNING: rejected rule (nested_descriptions -> CLASS_IDENTIFIER) in state 171
WARNING: reduce/reduce conflict in state 173 resolved using rule (nested_descriptions -> statement_property_identify statement_others_reserved_word SOME CLASS_IDENTIFIER)
WARNING: rejected rule (nested_descriptions -> CLASS_IDENTIFIER) in state 173
WARNING: reduce/reduce conflict in state 176 resolved using rule (nested_descriptions -> statement_property_identify statement_others_reserved_word CLASS_IDENTIFIER)
WARNING: rejected rule (nested_descriptions -> CLASS_IDENTIFIER) in state 176
