Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALL
    DIVIDE
    DisjointWith
    EXACTLY
    LPAREN
    Literal
    MAX
    MIN
    MINUS
    NCName
    NMTOKEN
    NOT
    Name
    PLUS
    PROPERTY_IDENTIFIER
    PROPERTY_IDENTIFIER_is_Of
    PlainLiteral
    RPAREN
    THAT
    TIMES
    VALUE
    XMLLiteral
    anyURI
    base64Binary
    boolean
    byte
    dateTime
    dateTimeStamp
    decimal
    double
    float
    hexBinary
    int
    integer
    langString
    languague
    long
    negativeInteger
    nonNegativeInteger
    owl
    rational
    rdf
    rdfs
    real
    string
    xsd

Grammar

Rule 0     S' -> statement
Rule 1     statement -> Class CLASS_IDENTIFIER SubClassOf primitive_class_mandatory statement_class_disjoin statement_class_individuals
Rule 2     primitive_class_mandatory -> PROPERTY_IDENTIFIER_has SOME CLASS_IDENTIFIER
Rule 3     primitive_class_mandatory -> PROPERTY_IDENTIFIER_has SOME CLASS_IDENTIFIER SpecialCharacters primitive_class_mandatory
Rule 4     primitive_class_mandatory -> PROPERTY_IDENTIFIER_has SOME NAMESPACEID DATA_TYPE
Rule 5     primitive_class_mandatory -> PROPERTY_IDENTIFIER_has SOME NAMESPACEID DATA_TYPE SpecialCharacters primitive_class_mandatory
Rule 6     statement_class_disjoin -> empty
Rule 7     statement_class_disjoin -> DisjointClasses statement_class_disjoin_check
Rule 8     statement_class_disjoin_check -> CLASS_IDENTIFIER
Rule 9     statement_class_disjoin_check -> CLASS_IDENTIFIER SpecialCharacters statement_class_disjoin_check
Rule 10    statement_class_individuals -> empty
Rule 11    statement_class_individuals -> Individuals statement_class_individuals_check
Rule 12    statement_class_individuals_check -> IndividualNames
Rule 13    statement_class_individuals_check -> IndividualNames SpecialCharacters statement_class_individuals_check
Rule 14    statement -> Class CLASS_IDENTIFIER statement_defined_class_equivalent statement_class_individuals
Rule 15    statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND SpecialCharacters CLASS_IDENTIFIER SOME CLASS_IDENTIFIER SpecialCharacters
Rule 16    statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND SpecialCharacters CLASS_IDENTIFIER SOME NAMESPACEID DATA_TYPE SpecialCharacters SpecialCharacters SpecialCharacters NUMBER SpecialCharacters SpecialCharacters
Rule 17    statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND SpecialCharacters CLASS_IDENTIFIER SOME NAMESPACEID DATA_TYPE SpecialCharacters SpecialCharacters NUMBER SpecialCharacters SpecialCharacters
Rule 18    statement -> Class CLASS_IDENTIFIER SpecialCharacters statement_enumerated_class_check
Rule 19    statement_enumerated_class_check -> CLASS_IDENTIFIER
Rule 20    statement_enumerated_class_check -> CLASS_IDENTIFIER SpecialCharacters statement_enumerated_class_check
Rule 21    statement -> Class CLASS_IDENTIFIER EquivalentTo statement_covered_class_check
Rule 22    statement_covered_class_check -> CLASS_IDENTIFIER
Rule 23    statement_covered_class_check -> CLASS_IDENTIFIER OR statement_covered_class_check
Rule 24    empty -> <empty>

Terminals, with rules where they appear

ALL                  : 
AND                  : 15 16 17
CLASS_IDENTIFIER     : 1 2 3 8 9 14 15 15 15 16 16 17 17 18 19 20 21 22 23
Class                : 1 14 18 21
DATA_TYPE            : 4 5 16 17
DIVIDE               : 
DisjointClasses      : 7
DisjointWith         : 
EXACTLY              : 
EquivalentTo         : 15 16 17 21
IndividualNames      : 12 13
Individuals          : 11
LPAREN               : 
Literal              : 
MAX                  : 
MIN                  : 
MINUS                : 
NAMESPACEID          : 4 5 16 17
NCName               : 
NMTOKEN              : 
NOT                  : 
NUMBER               : 16 17
Name                 : 
OR                   : 23
PLUS                 : 
PROPERTY_IDENTIFIER  : 
PROPERTY_IDENTIFIER_has : 2 3 4 5
PROPERTY_IDENTIFIER_is_Of : 
PlainLiteral         : 
RPAREN               : 
SOME                 : 2 3 4 5 15 16 17
SpecialCharacters    : 3 5 9 13 15 15 16 16 16 16 16 16 17 17 17 17 17 18 20
SubClassOf           : 1
THAT                 : 
TIMES                : 
VALUE                : 
XMLLiteral           : 
anyURI               : 
base64Binary         : 
boolean              : 
byte                 : 
dateTime             : 
dateTimeStamp        : 
decimal              : 
double               : 
error                : 
float                : 
hexBinary            : 
int                  : 
integer              : 
langString           : 
languague            : 
long                 : 
negativeInteger      : 
nonNegativeInteger   : 
owl                  : 
rational             : 
rdf                  : 
rdfs                 : 
real                 : 
string               : 
xsd                  : 

Nonterminals, with rules where they appear

empty                : 6 10
primitive_class_mandatory : 1 3 5
statement            : 0
statement_class_disjoin : 1
statement_class_disjoin_check : 7 9
statement_class_individuals : 1 14
statement_class_individuals_check : 11 13
statement_covered_class_check : 21 23
statement_defined_class_equivalent : 14
statement_enumerated_class_check : 18 20

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . Class CLASS_IDENTIFIER SubClassOf primitive_class_mandatory statement_class_disjoin statement_class_individuals
    (14) statement -> . Class CLASS_IDENTIFIER statement_defined_class_equivalent statement_class_individuals
    (18) statement -> . Class CLASS_IDENTIFIER SpecialCharacters statement_enumerated_class_check
    (21) statement -> . Class CLASS_IDENTIFIER EquivalentTo statement_covered_class_check

    Class           shift and go to state 2

    statement                      shift and go to state 1

state 1

    (0) S' -> statement .



state 2

    (1) statement -> Class . CLASS_IDENTIFIER SubClassOf primitive_class_mandatory statement_class_disjoin statement_class_individuals
    (14) statement -> Class . CLASS_IDENTIFIER statement_defined_class_equivalent statement_class_individuals
    (18) statement -> Class . CLASS_IDENTIFIER SpecialCharacters statement_enumerated_class_check
    (21) statement -> Class . CLASS_IDENTIFIER EquivalentTo statement_covered_class_check

    CLASS_IDENTIFIER shift and go to state 3


state 3

    (1) statement -> Class CLASS_IDENTIFIER . SubClassOf primitive_class_mandatory statement_class_disjoin statement_class_individuals
    (14) statement -> Class CLASS_IDENTIFIER . statement_defined_class_equivalent statement_class_individuals
    (18) statement -> Class CLASS_IDENTIFIER . SpecialCharacters statement_enumerated_class_check
    (21) statement -> Class CLASS_IDENTIFIER . EquivalentTo statement_covered_class_check
    (15) statement_defined_class_equivalent -> . EquivalentTo CLASS_IDENTIFIER AND SpecialCharacters CLASS_IDENTIFIER SOME CLASS_IDENTIFIER SpecialCharacters
    (16) statement_defined_class_equivalent -> . EquivalentTo CLASS_IDENTIFIER AND SpecialCharacters CLASS_IDENTIFIER SOME NAMESPACEID DATA_TYPE SpecialCharacters SpecialCharacters SpecialCharacters NUMBER SpecialCharacters SpecialCharacters
    (17) statement_defined_class_equivalent -> . EquivalentTo CLASS_IDENTIFIER AND SpecialCharacters CLASS_IDENTIFIER SOME NAMESPACEID DATA_TYPE SpecialCharacters SpecialCharacters NUMBER SpecialCharacters SpecialCharacters

    SubClassOf      shift and go to state 4
    SpecialCharacters shift and go to state 6
    EquivalentTo    shift and go to state 7

    statement_defined_class_equivalent shift and go to state 5

state 4

    (1) statement -> Class CLASS_IDENTIFIER SubClassOf . primitive_class_mandatory statement_class_disjoin statement_class_individuals
    (2) primitive_class_mandatory -> . PROPERTY_IDENTIFIER_has SOME CLASS_IDENTIFIER
    (3) primitive_class_mandatory -> . PROPERTY_IDENTIFIER_has SOME CLASS_IDENTIFIER SpecialCharacters primitive_class_mandatory
    (4) primitive_class_mandatory -> . PROPERTY_IDENTIFIER_has SOME NAMESPACEID DATA_TYPE
    (5) primitive_class_mandatory -> . PROPERTY_IDENTIFIER_has SOME NAMESPACEID DATA_TYPE SpecialCharacters primitive_class_mandatory

    PROPERTY_IDENTIFIER_has shift and go to state 9

    primitive_class_mandatory      shift and go to state 8

state 5

    (14) statement -> Class CLASS_IDENTIFIER statement_defined_class_equivalent . statement_class_individuals
    (10) statement_class_individuals -> . empty
    (11) statement_class_individuals -> . Individuals statement_class_individuals_check
    (24) empty -> .

    Individuals     shift and go to state 12
    $end            reduce using rule 24 (empty -> .)

    statement_class_individuals    shift and go to state 10
    empty                          shift and go to state 11

state 6

    (18) statement -> Class CLASS_IDENTIFIER SpecialCharacters . statement_enumerated_class_check
    (19) statement_enumerated_class_check -> . CLASS_IDENTIFIER
    (20) statement_enumerated_class_check -> . CLASS_IDENTIFIER SpecialCharacters statement_enumerated_class_check

    CLASS_IDENTIFIER shift and go to state 13

    statement_enumerated_class_check shift and go to state 14

state 7

    (21) statement -> Class CLASS_IDENTIFIER EquivalentTo . statement_covered_class_check
    (15) statement_defined_class_equivalent -> EquivalentTo . CLASS_IDENTIFIER AND SpecialCharacters CLASS_IDENTIFIER SOME CLASS_IDENTIFIER SpecialCharacters
    (16) statement_defined_class_equivalent -> EquivalentTo . CLASS_IDENTIFIER AND SpecialCharacters CLASS_IDENTIFIER SOME NAMESPACEID DATA_TYPE SpecialCharacters SpecialCharacters SpecialCharacters NUMBER SpecialCharacters SpecialCharacters
    (17) statement_defined_class_equivalent -> EquivalentTo . CLASS_IDENTIFIER AND SpecialCharacters CLASS_IDENTIFIER SOME NAMESPACEID DATA_TYPE SpecialCharacters SpecialCharacters NUMBER SpecialCharacters SpecialCharacters
    (22) statement_covered_class_check -> . CLASS_IDENTIFIER
    (23) statement_covered_class_check -> . CLASS_IDENTIFIER OR statement_covered_class_check

    CLASS_IDENTIFIER shift and go to state 15

    statement_covered_class_check  shift and go to state 16

state 8

    (1) statement -> Class CLASS_IDENTIFIER SubClassOf primitive_class_mandatory . statement_class_disjoin statement_class_individuals
    (6) statement_class_disjoin -> . empty
    (7) statement_class_disjoin -> . DisjointClasses statement_class_disjoin_check
    (24) empty -> .

    DisjointClasses shift and go to state 19
    Individuals     reduce using rule 24 (empty -> .)
    $end            reduce using rule 24 (empty -> .)

    statement_class_disjoin        shift and go to state 17
    empty                          shift and go to state 18

state 9

    (2) primitive_class_mandatory -> PROPERTY_IDENTIFIER_has . SOME CLASS_IDENTIFIER
    (3) primitive_class_mandatory -> PROPERTY_IDENTIFIER_has . SOME CLASS_IDENTIFIER SpecialCharacters primitive_class_mandatory
    (4) primitive_class_mandatory -> PROPERTY_IDENTIFIER_has . SOME NAMESPACEID DATA_TYPE
    (5) primitive_class_mandatory -> PROPERTY_IDENTIFIER_has . SOME NAMESPACEID DATA_TYPE SpecialCharacters primitive_class_mandatory

    SOME            shift and go to state 20


state 10

    (14) statement -> Class CLASS_IDENTIFIER statement_defined_class_equivalent statement_class_individuals .

    $end            reduce using rule 14 (statement -> Class CLASS_IDENTIFIER statement_defined_class_equivalent statement_class_individuals .)


state 11

    (10) statement_class_individuals -> empty .

    $end            reduce using rule 10 (statement_class_individuals -> empty .)


state 12

    (11) statement_class_individuals -> Individuals . statement_class_individuals_check
    (12) statement_class_individuals_check -> . IndividualNames
    (13) statement_class_individuals_check -> . IndividualNames SpecialCharacters statement_class_individuals_check

    IndividualNames shift and go to state 22

    statement_class_individuals_check shift and go to state 21

state 13

    (19) statement_enumerated_class_check -> CLASS_IDENTIFIER .
    (20) statement_enumerated_class_check -> CLASS_IDENTIFIER . SpecialCharacters statement_enumerated_class_check

    $end            reduce using rule 19 (statement_enumerated_class_check -> CLASS_IDENTIFIER .)
    SpecialCharacters shift and go to state 23


state 14

    (18) statement -> Class CLASS_IDENTIFIER SpecialCharacters statement_enumerated_class_check .

    $end            reduce using rule 18 (statement -> Class CLASS_IDENTIFIER SpecialCharacters statement_enumerated_class_check .)


state 15

    (15) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER . AND SpecialCharacters CLASS_IDENTIFIER SOME CLASS_IDENTIFIER SpecialCharacters
    (16) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER . AND SpecialCharacters CLASS_IDENTIFIER SOME NAMESPACEID DATA_TYPE SpecialCharacters SpecialCharacters SpecialCharacters NUMBER SpecialCharacters SpecialCharacters
    (17) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER . AND SpecialCharacters CLASS_IDENTIFIER SOME NAMESPACEID DATA_TYPE SpecialCharacters SpecialCharacters NUMBER SpecialCharacters SpecialCharacters
    (22) statement_covered_class_check -> CLASS_IDENTIFIER .
    (23) statement_covered_class_check -> CLASS_IDENTIFIER . OR statement_covered_class_check

    AND             shift and go to state 24
    $end            reduce using rule 22 (statement_covered_class_check -> CLASS_IDENTIFIER .)
    OR              shift and go to state 25


state 16

    (21) statement -> Class CLASS_IDENTIFIER EquivalentTo statement_covered_class_check .

    $end            reduce using rule 21 (statement -> Class CLASS_IDENTIFIER EquivalentTo statement_covered_class_check .)


state 17

    (1) statement -> Class CLASS_IDENTIFIER SubClassOf primitive_class_mandatory statement_class_disjoin . statement_class_individuals
    (10) statement_class_individuals -> . empty
    (11) statement_class_individuals -> . Individuals statement_class_individuals_check
    (24) empty -> .

    Individuals     shift and go to state 12
    $end            reduce using rule 24 (empty -> .)

    statement_class_individuals    shift and go to state 26
    empty                          shift and go to state 11

state 18

    (6) statement_class_disjoin -> empty .

    Individuals     reduce using rule 6 (statement_class_disjoin -> empty .)
    $end            reduce using rule 6 (statement_class_disjoin -> empty .)


state 19

    (7) statement_class_disjoin -> DisjointClasses . statement_class_disjoin_check
    (8) statement_class_disjoin_check -> . CLASS_IDENTIFIER
    (9) statement_class_disjoin_check -> . CLASS_IDENTIFIER SpecialCharacters statement_class_disjoin_check

    CLASS_IDENTIFIER shift and go to state 28

    statement_class_disjoin_check  shift and go to state 27

state 20

    (2) primitive_class_mandatory -> PROPERTY_IDENTIFIER_has SOME . CLASS_IDENTIFIER
    (3) primitive_class_mandatory -> PROPERTY_IDENTIFIER_has SOME . CLASS_IDENTIFIER SpecialCharacters primitive_class_mandatory
    (4) primitive_class_mandatory -> PROPERTY_IDENTIFIER_has SOME . NAMESPACEID DATA_TYPE
    (5) primitive_class_mandatory -> PROPERTY_IDENTIFIER_has SOME . NAMESPACEID DATA_TYPE SpecialCharacters primitive_class_mandatory

    CLASS_IDENTIFIER shift and go to state 29
    NAMESPACEID     shift and go to state 30


state 21

    (11) statement_class_individuals -> Individuals statement_class_individuals_check .

    $end            reduce using rule 11 (statement_class_individuals -> Individuals statement_class_individuals_check .)


state 22

    (12) statement_class_individuals_check -> IndividualNames .
    (13) statement_class_individuals_check -> IndividualNames . SpecialCharacters statement_class_individuals_check

    $end            reduce using rule 12 (statement_class_individuals_check -> IndividualNames .)
    SpecialCharacters shift and go to state 31


state 23

    (20) statement_enumerated_class_check -> CLASS_IDENTIFIER SpecialCharacters . statement_enumerated_class_check
    (19) statement_enumerated_class_check -> . CLASS_IDENTIFIER
    (20) statement_enumerated_class_check -> . CLASS_IDENTIFIER SpecialCharacters statement_enumerated_class_check

    CLASS_IDENTIFIER shift and go to state 13

    statement_enumerated_class_check shift and go to state 32

state 24

    (15) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND . SpecialCharacters CLASS_IDENTIFIER SOME CLASS_IDENTIFIER SpecialCharacters
    (16) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND . SpecialCharacters CLASS_IDENTIFIER SOME NAMESPACEID DATA_TYPE SpecialCharacters SpecialCharacters SpecialCharacters NUMBER SpecialCharacters SpecialCharacters
    (17) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND . SpecialCharacters CLASS_IDENTIFIER SOME NAMESPACEID DATA_TYPE SpecialCharacters SpecialCharacters NUMBER SpecialCharacters SpecialCharacters

    SpecialCharacters shift and go to state 33


state 25

    (23) statement_covered_class_check -> CLASS_IDENTIFIER OR . statement_covered_class_check
    (22) statement_covered_class_check -> . CLASS_IDENTIFIER
    (23) statement_covered_class_check -> . CLASS_IDENTIFIER OR statement_covered_class_check

    CLASS_IDENTIFIER shift and go to state 34

    statement_covered_class_check  shift and go to state 35

state 26

    (1) statement -> Class CLASS_IDENTIFIER SubClassOf primitive_class_mandatory statement_class_disjoin statement_class_individuals .

    $end            reduce using rule 1 (statement -> Class CLASS_IDENTIFIER SubClassOf primitive_class_mandatory statement_class_disjoin statement_class_individuals .)


state 27

    (7) statement_class_disjoin -> DisjointClasses statement_class_disjoin_check .

    Individuals     reduce using rule 7 (statement_class_disjoin -> DisjointClasses statement_class_disjoin_check .)
    $end            reduce using rule 7 (statement_class_disjoin -> DisjointClasses statement_class_disjoin_check .)


state 28

    (8) statement_class_disjoin_check -> CLASS_IDENTIFIER .
    (9) statement_class_disjoin_check -> CLASS_IDENTIFIER . SpecialCharacters statement_class_disjoin_check

    Individuals     reduce using rule 8 (statement_class_disjoin_check -> CLASS_IDENTIFIER .)
    $end            reduce using rule 8 (statement_class_disjoin_check -> CLASS_IDENTIFIER .)
    SpecialCharacters shift and go to state 36


state 29

    (2) primitive_class_mandatory -> PROPERTY_IDENTIFIER_has SOME CLASS_IDENTIFIER .
    (3) primitive_class_mandatory -> PROPERTY_IDENTIFIER_has SOME CLASS_IDENTIFIER . SpecialCharacters primitive_class_mandatory

    DisjointClasses reduce using rule 2 (primitive_class_mandatory -> PROPERTY_IDENTIFIER_has SOME CLASS_IDENTIFIER .)
    Individuals     reduce using rule 2 (primitive_class_mandatory -> PROPERTY_IDENTIFIER_has SOME CLASS_IDENTIFIER .)
    $end            reduce using rule 2 (primitive_class_mandatory -> PROPERTY_IDENTIFIER_has SOME CLASS_IDENTIFIER .)
    SpecialCharacters shift and go to state 37


state 30

    (4) primitive_class_mandatory -> PROPERTY_IDENTIFIER_has SOME NAMESPACEID . DATA_TYPE
    (5) primitive_class_mandatory -> PROPERTY_IDENTIFIER_has SOME NAMESPACEID . DATA_TYPE SpecialCharacters primitive_class_mandatory

    DATA_TYPE       shift and go to state 38


state 31

    (13) statement_class_individuals_check -> IndividualNames SpecialCharacters . statement_class_individuals_check
    (12) statement_class_individuals_check -> . IndividualNames
    (13) statement_class_individuals_check -> . IndividualNames SpecialCharacters statement_class_individuals_check

    IndividualNames shift and go to state 22

    statement_class_individuals_check shift and go to state 39

state 32

    (20) statement_enumerated_class_check -> CLASS_IDENTIFIER SpecialCharacters statement_enumerated_class_check .

    $end            reduce using rule 20 (statement_enumerated_class_check -> CLASS_IDENTIFIER SpecialCharacters statement_enumerated_class_check .)


state 33

    (15) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND SpecialCharacters . CLASS_IDENTIFIER SOME CLASS_IDENTIFIER SpecialCharacters
    (16) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND SpecialCharacters . CLASS_IDENTIFIER SOME NAMESPACEID DATA_TYPE SpecialCharacters SpecialCharacters SpecialCharacters NUMBER SpecialCharacters SpecialCharacters
    (17) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND SpecialCharacters . CLASS_IDENTIFIER SOME NAMESPACEID DATA_TYPE SpecialCharacters SpecialCharacters NUMBER SpecialCharacters SpecialCharacters

    CLASS_IDENTIFIER shift and go to state 40


state 34

    (22) statement_covered_class_check -> CLASS_IDENTIFIER .
    (23) statement_covered_class_check -> CLASS_IDENTIFIER . OR statement_covered_class_check

    $end            reduce using rule 22 (statement_covered_class_check -> CLASS_IDENTIFIER .)
    OR              shift and go to state 25


state 35

    (23) statement_covered_class_check -> CLASS_IDENTIFIER OR statement_covered_class_check .

    $end            reduce using rule 23 (statement_covered_class_check -> CLASS_IDENTIFIER OR statement_covered_class_check .)


state 36

    (9) statement_class_disjoin_check -> CLASS_IDENTIFIER SpecialCharacters . statement_class_disjoin_check
    (8) statement_class_disjoin_check -> . CLASS_IDENTIFIER
    (9) statement_class_disjoin_check -> . CLASS_IDENTIFIER SpecialCharacters statement_class_disjoin_check

    CLASS_IDENTIFIER shift and go to state 28

    statement_class_disjoin_check  shift and go to state 41

state 37

    (3) primitive_class_mandatory -> PROPERTY_IDENTIFIER_has SOME CLASS_IDENTIFIER SpecialCharacters . primitive_class_mandatory
    (2) primitive_class_mandatory -> . PROPERTY_IDENTIFIER_has SOME CLASS_IDENTIFIER
    (3) primitive_class_mandatory -> . PROPERTY_IDENTIFIER_has SOME CLASS_IDENTIFIER SpecialCharacters primitive_class_mandatory
    (4) primitive_class_mandatory -> . PROPERTY_IDENTIFIER_has SOME NAMESPACEID DATA_TYPE
    (5) primitive_class_mandatory -> . PROPERTY_IDENTIFIER_has SOME NAMESPACEID DATA_TYPE SpecialCharacters primitive_class_mandatory

    PROPERTY_IDENTIFIER_has shift and go to state 9

    primitive_class_mandatory      shift and go to state 42

state 38

    (4) primitive_class_mandatory -> PROPERTY_IDENTIFIER_has SOME NAMESPACEID DATA_TYPE .
    (5) primitive_class_mandatory -> PROPERTY_IDENTIFIER_has SOME NAMESPACEID DATA_TYPE . SpecialCharacters primitive_class_mandatory

    DisjointClasses reduce using rule 4 (primitive_class_mandatory -> PROPERTY_IDENTIFIER_has SOME NAMESPACEID DATA_TYPE .)
    Individuals     reduce using rule 4 (primitive_class_mandatory -> PROPERTY_IDENTIFIER_has SOME NAMESPACEID DATA_TYPE .)
    $end            reduce using rule 4 (primitive_class_mandatory -> PROPERTY_IDENTIFIER_has SOME NAMESPACEID DATA_TYPE .)
    SpecialCharacters shift and go to state 43


state 39

    (13) statement_class_individuals_check -> IndividualNames SpecialCharacters statement_class_individuals_check .

    $end            reduce using rule 13 (statement_class_individuals_check -> IndividualNames SpecialCharacters statement_class_individuals_check .)


state 40

    (15) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND SpecialCharacters CLASS_IDENTIFIER . SOME CLASS_IDENTIFIER SpecialCharacters
    (16) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND SpecialCharacters CLASS_IDENTIFIER . SOME NAMESPACEID DATA_TYPE SpecialCharacters SpecialCharacters SpecialCharacters NUMBER SpecialCharacters SpecialCharacters
    (17) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND SpecialCharacters CLASS_IDENTIFIER . SOME NAMESPACEID DATA_TYPE SpecialCharacters SpecialCharacters NUMBER SpecialCharacters SpecialCharacters

    SOME            shift and go to state 44


state 41

    (9) statement_class_disjoin_check -> CLASS_IDENTIFIER SpecialCharacters statement_class_disjoin_check .

    Individuals     reduce using rule 9 (statement_class_disjoin_check -> CLASS_IDENTIFIER SpecialCharacters statement_class_disjoin_check .)
    $end            reduce using rule 9 (statement_class_disjoin_check -> CLASS_IDENTIFIER SpecialCharacters statement_class_disjoin_check .)


state 42

    (3) primitive_class_mandatory -> PROPERTY_IDENTIFIER_has SOME CLASS_IDENTIFIER SpecialCharacters primitive_class_mandatory .

    DisjointClasses reduce using rule 3 (primitive_class_mandatory -> PROPERTY_IDENTIFIER_has SOME CLASS_IDENTIFIER SpecialCharacters primitive_class_mandatory .)
    Individuals     reduce using rule 3 (primitive_class_mandatory -> PROPERTY_IDENTIFIER_has SOME CLASS_IDENTIFIER SpecialCharacters primitive_class_mandatory .)
    $end            reduce using rule 3 (primitive_class_mandatory -> PROPERTY_IDENTIFIER_has SOME CLASS_IDENTIFIER SpecialCharacters primitive_class_mandatory .)


state 43

    (5) primitive_class_mandatory -> PROPERTY_IDENTIFIER_has SOME NAMESPACEID DATA_TYPE SpecialCharacters . primitive_class_mandatory
    (2) primitive_class_mandatory -> . PROPERTY_IDENTIFIER_has SOME CLASS_IDENTIFIER
    (3) primitive_class_mandatory -> . PROPERTY_IDENTIFIER_has SOME CLASS_IDENTIFIER SpecialCharacters primitive_class_mandatory
    (4) primitive_class_mandatory -> . PROPERTY_IDENTIFIER_has SOME NAMESPACEID DATA_TYPE
    (5) primitive_class_mandatory -> . PROPERTY_IDENTIFIER_has SOME NAMESPACEID DATA_TYPE SpecialCharacters primitive_class_mandatory

    PROPERTY_IDENTIFIER_has shift and go to state 9

    primitive_class_mandatory      shift and go to state 45

state 44

    (15) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND SpecialCharacters CLASS_IDENTIFIER SOME . CLASS_IDENTIFIER SpecialCharacters
    (16) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND SpecialCharacters CLASS_IDENTIFIER SOME . NAMESPACEID DATA_TYPE SpecialCharacters SpecialCharacters SpecialCharacters NUMBER SpecialCharacters SpecialCharacters
    (17) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND SpecialCharacters CLASS_IDENTIFIER SOME . NAMESPACEID DATA_TYPE SpecialCharacters SpecialCharacters NUMBER SpecialCharacters SpecialCharacters

    CLASS_IDENTIFIER shift and go to state 46
    NAMESPACEID     shift and go to state 47


state 45

    (5) primitive_class_mandatory -> PROPERTY_IDENTIFIER_has SOME NAMESPACEID DATA_TYPE SpecialCharacters primitive_class_mandatory .

    DisjointClasses reduce using rule 5 (primitive_class_mandatory -> PROPERTY_IDENTIFIER_has SOME NAMESPACEID DATA_TYPE SpecialCharacters primitive_class_mandatory .)
    Individuals     reduce using rule 5 (primitive_class_mandatory -> PROPERTY_IDENTIFIER_has SOME NAMESPACEID DATA_TYPE SpecialCharacters primitive_class_mandatory .)
    $end            reduce using rule 5 (primitive_class_mandatory -> PROPERTY_IDENTIFIER_has SOME NAMESPACEID DATA_TYPE SpecialCharacters primitive_class_mandatory .)


state 46

    (15) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND SpecialCharacters CLASS_IDENTIFIER SOME CLASS_IDENTIFIER . SpecialCharacters

    SpecialCharacters shift and go to state 48


state 47

    (16) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND SpecialCharacters CLASS_IDENTIFIER SOME NAMESPACEID . DATA_TYPE SpecialCharacters SpecialCharacters SpecialCharacters NUMBER SpecialCharacters SpecialCharacters
    (17) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND SpecialCharacters CLASS_IDENTIFIER SOME NAMESPACEID . DATA_TYPE SpecialCharacters SpecialCharacters NUMBER SpecialCharacters SpecialCharacters

    DATA_TYPE       shift and go to state 49


state 48

    (15) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND SpecialCharacters CLASS_IDENTIFIER SOME CLASS_IDENTIFIER SpecialCharacters .

    Individuals     reduce using rule 15 (statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND SpecialCharacters CLASS_IDENTIFIER SOME CLASS_IDENTIFIER SpecialCharacters .)
    $end            reduce using rule 15 (statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND SpecialCharacters CLASS_IDENTIFIER SOME CLASS_IDENTIFIER SpecialCharacters .)


state 49

    (16) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND SpecialCharacters CLASS_IDENTIFIER SOME NAMESPACEID DATA_TYPE . SpecialCharacters SpecialCharacters SpecialCharacters NUMBER SpecialCharacters SpecialCharacters
    (17) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND SpecialCharacters CLASS_IDENTIFIER SOME NAMESPACEID DATA_TYPE . SpecialCharacters SpecialCharacters NUMBER SpecialCharacters SpecialCharacters

    SpecialCharacters shift and go to state 50


state 50

    (16) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND SpecialCharacters CLASS_IDENTIFIER SOME NAMESPACEID DATA_TYPE SpecialCharacters . SpecialCharacters SpecialCharacters NUMBER SpecialCharacters SpecialCharacters
    (17) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND SpecialCharacters CLASS_IDENTIFIER SOME NAMESPACEID DATA_TYPE SpecialCharacters . SpecialCharacters NUMBER SpecialCharacters SpecialCharacters

    SpecialCharacters shift and go to state 51


state 51

    (16) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND SpecialCharacters CLASS_IDENTIFIER SOME NAMESPACEID DATA_TYPE SpecialCharacters SpecialCharacters . SpecialCharacters NUMBER SpecialCharacters SpecialCharacters
    (17) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND SpecialCharacters CLASS_IDENTIFIER SOME NAMESPACEID DATA_TYPE SpecialCharacters SpecialCharacters . NUMBER SpecialCharacters SpecialCharacters

    SpecialCharacters shift and go to state 52
    NUMBER          shift and go to state 53


state 52

    (16) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND SpecialCharacters CLASS_IDENTIFIER SOME NAMESPACEID DATA_TYPE SpecialCharacters SpecialCharacters SpecialCharacters . NUMBER SpecialCharacters SpecialCharacters

    NUMBER          shift and go to state 54


state 53

    (17) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND SpecialCharacters CLASS_IDENTIFIER SOME NAMESPACEID DATA_TYPE SpecialCharacters SpecialCharacters NUMBER . SpecialCharacters SpecialCharacters

    SpecialCharacters shift and go to state 55


state 54

    (16) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND SpecialCharacters CLASS_IDENTIFIER SOME NAMESPACEID DATA_TYPE SpecialCharacters SpecialCharacters SpecialCharacters NUMBER . SpecialCharacters SpecialCharacters

    SpecialCharacters shift and go to state 56


state 55

    (17) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND SpecialCharacters CLASS_IDENTIFIER SOME NAMESPACEID DATA_TYPE SpecialCharacters SpecialCharacters NUMBER SpecialCharacters . SpecialCharacters

    SpecialCharacters shift and go to state 57


state 56

    (16) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND SpecialCharacters CLASS_IDENTIFIER SOME NAMESPACEID DATA_TYPE SpecialCharacters SpecialCharacters SpecialCharacters NUMBER SpecialCharacters . SpecialCharacters

    SpecialCharacters shift and go to state 58


state 57

    (17) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND SpecialCharacters CLASS_IDENTIFIER SOME NAMESPACEID DATA_TYPE SpecialCharacters SpecialCharacters NUMBER SpecialCharacters SpecialCharacters .

    Individuals     reduce using rule 17 (statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND SpecialCharacters CLASS_IDENTIFIER SOME NAMESPACEID DATA_TYPE SpecialCharacters SpecialCharacters NUMBER SpecialCharacters SpecialCharacters .)
    $end            reduce using rule 17 (statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND SpecialCharacters CLASS_IDENTIFIER SOME NAMESPACEID DATA_TYPE SpecialCharacters SpecialCharacters NUMBER SpecialCharacters SpecialCharacters .)


state 58

    (16) statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND SpecialCharacters CLASS_IDENTIFIER SOME NAMESPACEID DATA_TYPE SpecialCharacters SpecialCharacters SpecialCharacters NUMBER SpecialCharacters SpecialCharacters .

    Individuals     reduce using rule 16 (statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND SpecialCharacters CLASS_IDENTIFIER SOME NAMESPACEID DATA_TYPE SpecialCharacters SpecialCharacters SpecialCharacters NUMBER SpecialCharacters SpecialCharacters .)
    $end            reduce using rule 16 (statement_defined_class_equivalent -> EquivalentTo CLASS_IDENTIFIER AND SpecialCharacters CLASS_IDENTIFIER SOME NAMESPACEID DATA_TYPE SpecialCharacters SpecialCharacters SpecialCharacters NUMBER SpecialCharacters SpecialCharacters .)

