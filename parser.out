Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALL
    DIVIDE
    DisjointWith
    Literal
    MINUS
    NCName
    NMTOKEN
    NOT
    Name
    PLUS
    PlainLiteral
    THAT
    TIMES
    XMLLiteral
    anyURI
    base64Binary
    boolean
    byte
    dateTime
    dateTimeStamp
    decimal
    double
    float
    hexBinary
    int
    integer
    langString
    languague
    long
    negativeInteger
    nonNegativeInteger
    owl
    rational
    rdf
    rdfs
    real
    string
    xsd

Grammar

Rule 0     S' -> statements
Rule 1     statements -> statement
Rule 2     statements -> statement statements
Rule 3     statement -> Class CLASS_IDENTIFIER SubClassOf primitive_class_mandatory statement_class_disjoin statement_class_individuals
Rule 4     statement_reserved_word -> SOME
Rule 5     statement_reserved_word -> EXACTLY
Rule 6     statement_reserved_word -> MIN
Rule 7     statement_reserved_word -> MAX
Rule 8     statement_reserved_word -> OR
Rule 9     statement_reserved_word -> ONLY
Rule 10    statement_reserved_word -> AND
Rule 11    statement_reserved_word -> VALUE
Rule 12    statement_property_identify -> PROPERTY_IDENTIFIER_has
Rule 13    statement_property_identify -> PROPERTY_IDENTIFIER_is_Of
Rule 14    statement_property_identify -> PROPERTY_IDENTIFIER
Rule 15    primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER
Rule 16    primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory
Rule 17    primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
Rule 18    primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory
Rule 19    primitive_class_mandatory -> CLASS_IDENTIFIER
Rule 20    primitive_class_mandatory -> CLASS_IDENTIFIER COMMA primitive_class_mandatory
Rule 21    statement_class_disjoin -> empty
Rule 22    statement_class_disjoin -> DisjointClasses statement_class_disjoin_check
Rule 23    statement_class_disjoin_check -> CLASS_IDENTIFIER
Rule 24    statement_class_disjoin_check -> CLASS_IDENTIFIER COMMA statement_class_disjoin_check
Rule 25    statement_class_individuals -> empty
Rule 26    statement_class_individuals -> Individuals statement_class_individuals_check
Rule 27    statement_class_individuals_check -> IndividualNames
Rule 28    statement_class_individuals_check -> IndividualNames COMMA statement_class_individuals_check
Rule 29    statement -> Class CLASS_IDENTIFIER EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_defined_class_equivalent statement_class_individuals
Rule 30    statement_defined_class_equivalent -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN
Rule 31    statement_defined_class_equivalent -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent
Rule 32    statement_defined_class_equivalent -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN
Rule 33    statement_defined_class_equivalent -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent
Rule 34    statement_operator_symbol -> LESS_THAN
Rule 35    statement_operator_symbol -> GREATER_THAN
Rule 36    statement_operator_symbol -> EQUALS
Rule 37    statement_operator_symbol -> GREATER_THAN EQUALS
Rule 38    statement_operator_symbol -> LESS_THAN EQUALS
Rule 39    statement -> Class CLASS_IDENTIFIER SubClassOf CLASS_IDENTIFIER COMMA closed_axiom_mandatory
Rule 40    closed_axiom_mandatory -> CLASS_IDENTIFIER
Rule 41    closed_axiom_mandatory -> statement_property_restriction
Rule 42    closed_axiom_mandatory -> CLASS_IDENTIFIER COMMA closed_axiom_mandatory
Rule 43    closed_axiom_mandatory -> statement_property_restriction COMMA closed_axiom_mandatory
Rule 44    statement_property_restriction -> statement_property_identify SOME CLASS_IDENTIFIER
Rule 45    statement_property_restriction -> statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN
Rule 46    closed_axiom_restriction_combination -> CLASS_IDENTIFIER
Rule 47    closed_axiom_restriction_combination -> CLASS_IDENTIFIER OR closed_axiom_restriction_combination
Rule 48    statement -> Class CLASS_IDENTIFIER EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN nested_descriptions RIGHT_PAREN
Rule 49    nested_descriptions -> nested_descriptions OR nested_descriptions
Rule 50    nested_descriptions -> nested_descriptions AND nested_descriptions
Rule 51    nested_descriptions -> LEFT_PAREN nested_descriptions RIGHT_PAREN
Rule 52    nested_descriptions -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER
Rule 53    nested_descriptions -> statement_property_identify statement_reserved_word nested_descriptions
Rule 54    nested_descriptions -> statement_property_identify statement_reserved_word VALUE CLASS_IDENTIFIER
Rule 55    nested_descriptions -> statement_property_identify statement_reserved_word VALUE nested_descriptions
Rule 56    nested_descriptions -> statement_property_identify statement_reserved_word ONLY CLASS_IDENTIFIER
Rule 57    nested_descriptions -> statement_property_identify statement_reserved_word ONLY nested_descriptions
Rule 58    nested_descriptions -> statement_property_identify statement_reserved_word SOME CLASS_IDENTIFIER
Rule 59    nested_descriptions -> statement_property_identify statement_reserved_word SOME nested_descriptions
Rule 60    nested_descriptions -> CLASS_IDENTIFIER
Rule 61    statement -> Class CLASS_IDENTIFIER EquivalentTo LEFT_CURLY_BRACKET statement_enumerated_class_check RIGHT_CURLY_BRACKET
Rule 62    statement_enumerated_class_check -> IndividualNames
Rule 63    statement_enumerated_class_check -> IndividualNames COMMA statement_enumerated_class_check
Rule 64    statement -> Class CLASS_IDENTIFIER EquivalentTo statement_covered_class_check
Rule 65    statement_covered_class_check -> CLASS_IDENTIFIER
Rule 66    statement_covered_class_check -> CLASS_IDENTIFIER OR statement_covered_class_check
Rule 67    empty -> <empty>

Terminals, with rules where they appear

ALL                  : 
AND                  : 10 29 48 50
CLASS_IDENTIFIER     : 3 15 16 19 20 23 24 29 29 30 31 39 39 40 42 44 46 47 48 48 52 54 56 58 60 61 64 65 66
COMMA                : 16 18 20 24 28 31 33 39 42 43 63
Class                : 3 29 39 48 61 64
DATA_TYPE            : 17 18 32 33
DIVIDE               : 
DisjointClasses      : 22
DisjointWith         : 
EQUALS               : 36 37 38
EXACTLY              : 5
EquivalentTo         : 29 48 61 64
GREATER_THAN         : 35 37
IndividualNames      : 27 28 62 63
Individuals          : 26
LEFT_BRACKET         : 32 33
LEFT_CURLY_BRACKET   : 61
LEFT_PAREN           : 29 45 48 51
LESS_THAN            : 34 38
Literal              : 
MAX                  : 7
MIN                  : 6
MINUS                : 
NAMESPACEID          : 17 18 32 33
NCName               : 
NMTOKEN              : 
NOT                  : 
NUMBER               : 32 33
Name                 : 
ONLY                 : 9 45 56 57
OR                   : 8 47 49 66
PLUS                 : 
PROPERTY_IDENTIFIER  : 14
PROPERTY_IDENTIFIER_has : 12
PROPERTY_IDENTIFIER_is_Of : 13
PlainLiteral         : 
RIGHT_BRACKET        : 32 33
RIGHT_CURLY_BRACKET  : 61
RIGHT_PAREN          : 30 31 32 33 45 48 51
SOME                 : 4 44 58 59
SubClassOf           : 3 39
THAT                 : 
TIMES                : 
VALUE                : 11 54 55
XMLLiteral           : 
anyURI               : 
base64Binary         : 
boolean              : 
byte                 : 
dateTime             : 
dateTimeStamp        : 
decimal              : 
double               : 
error                : 
float                : 
hexBinary            : 
int                  : 
integer              : 
langString           : 
languague            : 
long                 : 
negativeInteger      : 
nonNegativeInteger   : 
owl                  : 
rational             : 
rdf                  : 
rdfs                 : 
real                 : 
string               : 
xsd                  : 

Nonterminals, with rules where they appear

closed_axiom_mandatory : 39 42 43
closed_axiom_restriction_combination : 45 47
empty                : 21 25
nested_descriptions  : 48 49 49 50 50 51 53 55 57 59
primitive_class_mandatory : 3 16 18 20
statement            : 1 2
statement_class_disjoin : 3
statement_class_disjoin_check : 22 24
statement_class_individuals : 3 29
statement_class_individuals_check : 26 28
statement_covered_class_check : 64 66
statement_defined_class_equivalent : 29 31 33
statement_enumerated_class_check : 61 63
statement_operator_symbol : 32 33
statement_property_identify : 15 16 17 18 30 31 32 33 44 45 52 53 54 55 56 57 58 59
statement_property_restriction : 41 43
statement_reserved_word : 15 16 17 18 30 31 32 33 52 53 54 55 56 57 58 59
statements           : 2 0

Parsing method: LALR

state 0

    (0) S' -> . statements
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statement -> . Class CLASS_IDENTIFIER SubClassOf primitive_class_mandatory statement_class_disjoin statement_class_individuals
    (29) statement -> . Class CLASS_IDENTIFIER EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_defined_class_equivalent statement_class_individuals
    (39) statement -> . Class CLASS_IDENTIFIER SubClassOf CLASS_IDENTIFIER COMMA closed_axiom_mandatory
    (48) statement -> . Class CLASS_IDENTIFIER EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN nested_descriptions RIGHT_PAREN
    (61) statement -> . Class CLASS_IDENTIFIER EquivalentTo LEFT_CURLY_BRACKET statement_enumerated_class_check RIGHT_CURLY_BRACKET
    (64) statement -> . Class CLASS_IDENTIFIER EquivalentTo statement_covered_class_check

    Class           shift and go to state 3

    statements                     shift and go to state 1
    statement                      shift and go to state 2

state 1

    (0) S' -> statements .



state 2

    (1) statements -> statement .
    (2) statements -> statement . statements
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statement -> . Class CLASS_IDENTIFIER SubClassOf primitive_class_mandatory statement_class_disjoin statement_class_individuals
    (29) statement -> . Class CLASS_IDENTIFIER EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_defined_class_equivalent statement_class_individuals
    (39) statement -> . Class CLASS_IDENTIFIER SubClassOf CLASS_IDENTIFIER COMMA closed_axiom_mandatory
    (48) statement -> . Class CLASS_IDENTIFIER EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN nested_descriptions RIGHT_PAREN
    (61) statement -> . Class CLASS_IDENTIFIER EquivalentTo LEFT_CURLY_BRACKET statement_enumerated_class_check RIGHT_CURLY_BRACKET
    (64) statement -> . Class CLASS_IDENTIFIER EquivalentTo statement_covered_class_check

    $end            reduce using rule 1 (statements -> statement .)
    Class           shift and go to state 3

    statement                      shift and go to state 2
    statements                     shift and go to state 4

state 3

    (3) statement -> Class . CLASS_IDENTIFIER SubClassOf primitive_class_mandatory statement_class_disjoin statement_class_individuals
    (29) statement -> Class . CLASS_IDENTIFIER EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_defined_class_equivalent statement_class_individuals
    (39) statement -> Class . CLASS_IDENTIFIER SubClassOf CLASS_IDENTIFIER COMMA closed_axiom_mandatory
    (48) statement -> Class . CLASS_IDENTIFIER EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN nested_descriptions RIGHT_PAREN
    (61) statement -> Class . CLASS_IDENTIFIER EquivalentTo LEFT_CURLY_BRACKET statement_enumerated_class_check RIGHT_CURLY_BRACKET
    (64) statement -> Class . CLASS_IDENTIFIER EquivalentTo statement_covered_class_check

    CLASS_IDENTIFIER shift and go to state 5


state 4

    (2) statements -> statement statements .

    $end            reduce using rule 2 (statements -> statement statements .)


state 5

    (3) statement -> Class CLASS_IDENTIFIER . SubClassOf primitive_class_mandatory statement_class_disjoin statement_class_individuals
    (29) statement -> Class CLASS_IDENTIFIER . EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_defined_class_equivalent statement_class_individuals
    (39) statement -> Class CLASS_IDENTIFIER . SubClassOf CLASS_IDENTIFIER COMMA closed_axiom_mandatory
    (48) statement -> Class CLASS_IDENTIFIER . EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN nested_descriptions RIGHT_PAREN
    (61) statement -> Class CLASS_IDENTIFIER . EquivalentTo LEFT_CURLY_BRACKET statement_enumerated_class_check RIGHT_CURLY_BRACKET
    (64) statement -> Class CLASS_IDENTIFIER . EquivalentTo statement_covered_class_check

    SubClassOf      shift and go to state 6
    EquivalentTo    shift and go to state 7


state 6

    (3) statement -> Class CLASS_IDENTIFIER SubClassOf . primitive_class_mandatory statement_class_disjoin statement_class_individuals
    (39) statement -> Class CLASS_IDENTIFIER SubClassOf . CLASS_IDENTIFIER COMMA closed_axiom_mandatory
    (15) primitive_class_mandatory -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (16) primitive_class_mandatory -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (17) primitive_class_mandatory -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (18) primitive_class_mandatory -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory
    (19) primitive_class_mandatory -> . CLASS_IDENTIFIER
    (20) primitive_class_mandatory -> . CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (12) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (13) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (14) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 8
    PROPERTY_IDENTIFIER_has shift and go to state 11
    PROPERTY_IDENTIFIER_is_Of shift and go to state 12
    PROPERTY_IDENTIFIER shift and go to state 13

    primitive_class_mandatory      shift and go to state 9
    statement_property_identify    shift and go to state 10

state 7

    (29) statement -> Class CLASS_IDENTIFIER EquivalentTo . CLASS_IDENTIFIER AND LEFT_PAREN statement_defined_class_equivalent statement_class_individuals
    (48) statement -> Class CLASS_IDENTIFIER EquivalentTo . CLASS_IDENTIFIER AND LEFT_PAREN nested_descriptions RIGHT_PAREN
    (61) statement -> Class CLASS_IDENTIFIER EquivalentTo . LEFT_CURLY_BRACKET statement_enumerated_class_check RIGHT_CURLY_BRACKET
    (64) statement -> Class CLASS_IDENTIFIER EquivalentTo . statement_covered_class_check
    (65) statement_covered_class_check -> . CLASS_IDENTIFIER
    (66) statement_covered_class_check -> . CLASS_IDENTIFIER OR statement_covered_class_check

    CLASS_IDENTIFIER shift and go to state 14
    LEFT_CURLY_BRACKET shift and go to state 15

    statement_covered_class_check  shift and go to state 16

state 8

    (39) statement -> Class CLASS_IDENTIFIER SubClassOf CLASS_IDENTIFIER . COMMA closed_axiom_mandatory
    (19) primitive_class_mandatory -> CLASS_IDENTIFIER .
    (20) primitive_class_mandatory -> CLASS_IDENTIFIER . COMMA primitive_class_mandatory

    COMMA           shift and go to state 17
    DisjointClasses reduce using rule 19 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    Individuals     reduce using rule 19 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    Class           reduce using rule 19 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    $end            reduce using rule 19 (primitive_class_mandatory -> CLASS_IDENTIFIER .)


state 9

    (3) statement -> Class CLASS_IDENTIFIER SubClassOf primitive_class_mandatory . statement_class_disjoin statement_class_individuals
    (21) statement_class_disjoin -> . empty
    (22) statement_class_disjoin -> . DisjointClasses statement_class_disjoin_check
    (67) empty -> .

    DisjointClasses shift and go to state 20
    Individuals     reduce using rule 67 (empty -> .)
    Class           reduce using rule 67 (empty -> .)
    $end            reduce using rule 67 (empty -> .)

    statement_class_disjoin        shift and go to state 18
    empty                          shift and go to state 19

state 10

    (15) primitive_class_mandatory -> statement_property_identify . statement_reserved_word CLASS_IDENTIFIER
    (16) primitive_class_mandatory -> statement_property_identify . statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (17) primitive_class_mandatory -> statement_property_identify . statement_reserved_word NAMESPACEID DATA_TYPE
    (18) primitive_class_mandatory -> statement_property_identify . statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory
    (4) statement_reserved_word -> . SOME
    (5) statement_reserved_word -> . EXACTLY
    (6) statement_reserved_word -> . MIN
    (7) statement_reserved_word -> . MAX
    (8) statement_reserved_word -> . OR
    (9) statement_reserved_word -> . ONLY
    (10) statement_reserved_word -> . AND
    (11) statement_reserved_word -> . VALUE

    SOME            shift and go to state 22
    EXACTLY         shift and go to state 23
    MIN             shift and go to state 24
    MAX             shift and go to state 25
    OR              shift and go to state 26
    ONLY            shift and go to state 27
    AND             shift and go to state 28
    VALUE           shift and go to state 29

    statement_reserved_word        shift and go to state 21

state 11

    (12) statement_property_identify -> PROPERTY_IDENTIFIER_has .

    SOME            reduce using rule 12 (statement_property_identify -> PROPERTY_IDENTIFIER_has .)
    EXACTLY         reduce using rule 12 (statement_property_identify -> PROPERTY_IDENTIFIER_has .)
    MIN             reduce using rule 12 (statement_property_identify -> PROPERTY_IDENTIFIER_has .)
    MAX             reduce using rule 12 (statement_property_identify -> PROPERTY_IDENTIFIER_has .)
    OR              reduce using rule 12 (statement_property_identify -> PROPERTY_IDENTIFIER_has .)
    ONLY            reduce using rule 12 (statement_property_identify -> PROPERTY_IDENTIFIER_has .)
    AND             reduce using rule 12 (statement_property_identify -> PROPERTY_IDENTIFIER_has .)
    VALUE           reduce using rule 12 (statement_property_identify -> PROPERTY_IDENTIFIER_has .)


state 12

    (13) statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .

    SOME            reduce using rule 13 (statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .)
    EXACTLY         reduce using rule 13 (statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .)
    MIN             reduce using rule 13 (statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .)
    MAX             reduce using rule 13 (statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .)
    OR              reduce using rule 13 (statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .)
    ONLY            reduce using rule 13 (statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .)
    AND             reduce using rule 13 (statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .)
    VALUE           reduce using rule 13 (statement_property_identify -> PROPERTY_IDENTIFIER_is_Of .)


state 13

    (14) statement_property_identify -> PROPERTY_IDENTIFIER .

    SOME            reduce using rule 14 (statement_property_identify -> PROPERTY_IDENTIFIER .)
    EXACTLY         reduce using rule 14 (statement_property_identify -> PROPERTY_IDENTIFIER .)
    MIN             reduce using rule 14 (statement_property_identify -> PROPERTY_IDENTIFIER .)
    MAX             reduce using rule 14 (statement_property_identify -> PROPERTY_IDENTIFIER .)
    OR              reduce using rule 14 (statement_property_identify -> PROPERTY_IDENTIFIER .)
    ONLY            reduce using rule 14 (statement_property_identify -> PROPERTY_IDENTIFIER .)
    AND             reduce using rule 14 (statement_property_identify -> PROPERTY_IDENTIFIER .)
    VALUE           reduce using rule 14 (statement_property_identify -> PROPERTY_IDENTIFIER .)


state 14

    (29) statement -> Class CLASS_IDENTIFIER EquivalentTo CLASS_IDENTIFIER . AND LEFT_PAREN statement_defined_class_equivalent statement_class_individuals
    (48) statement -> Class CLASS_IDENTIFIER EquivalentTo CLASS_IDENTIFIER . AND LEFT_PAREN nested_descriptions RIGHT_PAREN
    (65) statement_covered_class_check -> CLASS_IDENTIFIER .
    (66) statement_covered_class_check -> CLASS_IDENTIFIER . OR statement_covered_class_check

    AND             shift and go to state 30
    Class           reduce using rule 65 (statement_covered_class_check -> CLASS_IDENTIFIER .)
    $end            reduce using rule 65 (statement_covered_class_check -> CLASS_IDENTIFIER .)
    OR              shift and go to state 31


state 15

    (61) statement -> Class CLASS_IDENTIFIER EquivalentTo LEFT_CURLY_BRACKET . statement_enumerated_class_check RIGHT_CURLY_BRACKET
    (62) statement_enumerated_class_check -> . IndividualNames
    (63) statement_enumerated_class_check -> . IndividualNames COMMA statement_enumerated_class_check

    IndividualNames shift and go to state 33

    statement_enumerated_class_check shift and go to state 32

state 16

    (64) statement -> Class CLASS_IDENTIFIER EquivalentTo statement_covered_class_check .

    Class           reduce using rule 64 (statement -> Class CLASS_IDENTIFIER EquivalentTo statement_covered_class_check .)
    $end            reduce using rule 64 (statement -> Class CLASS_IDENTIFIER EquivalentTo statement_covered_class_check .)


state 17

    (39) statement -> Class CLASS_IDENTIFIER SubClassOf CLASS_IDENTIFIER COMMA . closed_axiom_mandatory
    (20) primitive_class_mandatory -> CLASS_IDENTIFIER COMMA . primitive_class_mandatory
    (40) closed_axiom_mandatory -> . CLASS_IDENTIFIER
    (41) closed_axiom_mandatory -> . statement_property_restriction
    (42) closed_axiom_mandatory -> . CLASS_IDENTIFIER COMMA closed_axiom_mandatory
    (43) closed_axiom_mandatory -> . statement_property_restriction COMMA closed_axiom_mandatory
    (15) primitive_class_mandatory -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (16) primitive_class_mandatory -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (17) primitive_class_mandatory -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (18) primitive_class_mandatory -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory
    (19) primitive_class_mandatory -> . CLASS_IDENTIFIER
    (20) primitive_class_mandatory -> . CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (44) statement_property_restriction -> . statement_property_identify SOME CLASS_IDENTIFIER
    (45) statement_property_restriction -> . statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN
    (12) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (13) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (14) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 34
    PROPERTY_IDENTIFIER_has shift and go to state 11
    PROPERTY_IDENTIFIER_is_Of shift and go to state 12
    PROPERTY_IDENTIFIER shift and go to state 13

    closed_axiom_mandatory         shift and go to state 35
    primitive_class_mandatory      shift and go to state 36
    statement_property_restriction shift and go to state 37
    statement_property_identify    shift and go to state 38

state 18

    (3) statement -> Class CLASS_IDENTIFIER SubClassOf primitive_class_mandatory statement_class_disjoin . statement_class_individuals
    (25) statement_class_individuals -> . empty
    (26) statement_class_individuals -> . Individuals statement_class_individuals_check
    (67) empty -> .

    Individuals     shift and go to state 41
    Class           reduce using rule 67 (empty -> .)
    $end            reduce using rule 67 (empty -> .)

    statement_class_individuals    shift and go to state 39
    empty                          shift and go to state 40

state 19

    (21) statement_class_disjoin -> empty .

    Individuals     reduce using rule 21 (statement_class_disjoin -> empty .)
    Class           reduce using rule 21 (statement_class_disjoin -> empty .)
    $end            reduce using rule 21 (statement_class_disjoin -> empty .)


state 20

    (22) statement_class_disjoin -> DisjointClasses . statement_class_disjoin_check
    (23) statement_class_disjoin_check -> . CLASS_IDENTIFIER
    (24) statement_class_disjoin_check -> . CLASS_IDENTIFIER COMMA statement_class_disjoin_check

    CLASS_IDENTIFIER shift and go to state 43

    statement_class_disjoin_check  shift and go to state 42

state 21

    (15) primitive_class_mandatory -> statement_property_identify statement_reserved_word . CLASS_IDENTIFIER
    (16) primitive_class_mandatory -> statement_property_identify statement_reserved_word . CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (17) primitive_class_mandatory -> statement_property_identify statement_reserved_word . NAMESPACEID DATA_TYPE
    (18) primitive_class_mandatory -> statement_property_identify statement_reserved_word . NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory

    CLASS_IDENTIFIER shift and go to state 44
    NAMESPACEID     shift and go to state 45


state 22

    (4) statement_reserved_word -> SOME .

    CLASS_IDENTIFIER reduce using rule 4 (statement_reserved_word -> SOME .)
    NAMESPACEID     reduce using rule 4 (statement_reserved_word -> SOME .)
    VALUE           reduce using rule 4 (statement_reserved_word -> SOME .)
    ONLY            reduce using rule 4 (statement_reserved_word -> SOME .)
    SOME            reduce using rule 4 (statement_reserved_word -> SOME .)
    LEFT_PAREN      reduce using rule 4 (statement_reserved_word -> SOME .)
    PROPERTY_IDENTIFIER_has reduce using rule 4 (statement_reserved_word -> SOME .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 4 (statement_reserved_word -> SOME .)
    PROPERTY_IDENTIFIER reduce using rule 4 (statement_reserved_word -> SOME .)


state 23

    (5) statement_reserved_word -> EXACTLY .

    CLASS_IDENTIFIER reduce using rule 5 (statement_reserved_word -> EXACTLY .)
    NAMESPACEID     reduce using rule 5 (statement_reserved_word -> EXACTLY .)
    VALUE           reduce using rule 5 (statement_reserved_word -> EXACTLY .)
    ONLY            reduce using rule 5 (statement_reserved_word -> EXACTLY .)
    SOME            reduce using rule 5 (statement_reserved_word -> EXACTLY .)
    LEFT_PAREN      reduce using rule 5 (statement_reserved_word -> EXACTLY .)
    PROPERTY_IDENTIFIER_has reduce using rule 5 (statement_reserved_word -> EXACTLY .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 5 (statement_reserved_word -> EXACTLY .)
    PROPERTY_IDENTIFIER reduce using rule 5 (statement_reserved_word -> EXACTLY .)


state 24

    (6) statement_reserved_word -> MIN .

    CLASS_IDENTIFIER reduce using rule 6 (statement_reserved_word -> MIN .)
    NAMESPACEID     reduce using rule 6 (statement_reserved_word -> MIN .)
    VALUE           reduce using rule 6 (statement_reserved_word -> MIN .)
    ONLY            reduce using rule 6 (statement_reserved_word -> MIN .)
    SOME            reduce using rule 6 (statement_reserved_word -> MIN .)
    LEFT_PAREN      reduce using rule 6 (statement_reserved_word -> MIN .)
    PROPERTY_IDENTIFIER_has reduce using rule 6 (statement_reserved_word -> MIN .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 6 (statement_reserved_word -> MIN .)
    PROPERTY_IDENTIFIER reduce using rule 6 (statement_reserved_word -> MIN .)


state 25

    (7) statement_reserved_word -> MAX .

    CLASS_IDENTIFIER reduce using rule 7 (statement_reserved_word -> MAX .)
    NAMESPACEID     reduce using rule 7 (statement_reserved_word -> MAX .)
    VALUE           reduce using rule 7 (statement_reserved_word -> MAX .)
    ONLY            reduce using rule 7 (statement_reserved_word -> MAX .)
    SOME            reduce using rule 7 (statement_reserved_word -> MAX .)
    LEFT_PAREN      reduce using rule 7 (statement_reserved_word -> MAX .)
    PROPERTY_IDENTIFIER_has reduce using rule 7 (statement_reserved_word -> MAX .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 7 (statement_reserved_word -> MAX .)
    PROPERTY_IDENTIFIER reduce using rule 7 (statement_reserved_word -> MAX .)


state 26

    (8) statement_reserved_word -> OR .

    CLASS_IDENTIFIER reduce using rule 8 (statement_reserved_word -> OR .)
    NAMESPACEID     reduce using rule 8 (statement_reserved_word -> OR .)
    VALUE           reduce using rule 8 (statement_reserved_word -> OR .)
    ONLY            reduce using rule 8 (statement_reserved_word -> OR .)
    SOME            reduce using rule 8 (statement_reserved_word -> OR .)
    LEFT_PAREN      reduce using rule 8 (statement_reserved_word -> OR .)
    PROPERTY_IDENTIFIER_has reduce using rule 8 (statement_reserved_word -> OR .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 8 (statement_reserved_word -> OR .)
    PROPERTY_IDENTIFIER reduce using rule 8 (statement_reserved_word -> OR .)


state 27

    (9) statement_reserved_word -> ONLY .

    CLASS_IDENTIFIER reduce using rule 9 (statement_reserved_word -> ONLY .)
    NAMESPACEID     reduce using rule 9 (statement_reserved_word -> ONLY .)
    VALUE           reduce using rule 9 (statement_reserved_word -> ONLY .)
    ONLY            reduce using rule 9 (statement_reserved_word -> ONLY .)
    SOME            reduce using rule 9 (statement_reserved_word -> ONLY .)
    LEFT_PAREN      reduce using rule 9 (statement_reserved_word -> ONLY .)
    PROPERTY_IDENTIFIER_has reduce using rule 9 (statement_reserved_word -> ONLY .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 9 (statement_reserved_word -> ONLY .)
    PROPERTY_IDENTIFIER reduce using rule 9 (statement_reserved_word -> ONLY .)


state 28

    (10) statement_reserved_word -> AND .

    CLASS_IDENTIFIER reduce using rule 10 (statement_reserved_word -> AND .)
    NAMESPACEID     reduce using rule 10 (statement_reserved_word -> AND .)
    VALUE           reduce using rule 10 (statement_reserved_word -> AND .)
    ONLY            reduce using rule 10 (statement_reserved_word -> AND .)
    SOME            reduce using rule 10 (statement_reserved_word -> AND .)
    LEFT_PAREN      reduce using rule 10 (statement_reserved_word -> AND .)
    PROPERTY_IDENTIFIER_has reduce using rule 10 (statement_reserved_word -> AND .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 10 (statement_reserved_word -> AND .)
    PROPERTY_IDENTIFIER reduce using rule 10 (statement_reserved_word -> AND .)


state 29

    (11) statement_reserved_word -> VALUE .

    CLASS_IDENTIFIER reduce using rule 11 (statement_reserved_word -> VALUE .)
    NAMESPACEID     reduce using rule 11 (statement_reserved_word -> VALUE .)
    VALUE           reduce using rule 11 (statement_reserved_word -> VALUE .)
    ONLY            reduce using rule 11 (statement_reserved_word -> VALUE .)
    SOME            reduce using rule 11 (statement_reserved_word -> VALUE .)
    LEFT_PAREN      reduce using rule 11 (statement_reserved_word -> VALUE .)
    PROPERTY_IDENTIFIER_has reduce using rule 11 (statement_reserved_word -> VALUE .)
    PROPERTY_IDENTIFIER_is_Of reduce using rule 11 (statement_reserved_word -> VALUE .)
    PROPERTY_IDENTIFIER reduce using rule 11 (statement_reserved_word -> VALUE .)


state 30

    (29) statement -> Class CLASS_IDENTIFIER EquivalentTo CLASS_IDENTIFIER AND . LEFT_PAREN statement_defined_class_equivalent statement_class_individuals
    (48) statement -> Class CLASS_IDENTIFIER EquivalentTo CLASS_IDENTIFIER AND . LEFT_PAREN nested_descriptions RIGHT_PAREN

    LEFT_PAREN      shift and go to state 46


state 31

    (66) statement_covered_class_check -> CLASS_IDENTIFIER OR . statement_covered_class_check
    (65) statement_covered_class_check -> . CLASS_IDENTIFIER
    (66) statement_covered_class_check -> . CLASS_IDENTIFIER OR statement_covered_class_check

    CLASS_IDENTIFIER shift and go to state 47

    statement_covered_class_check  shift and go to state 48

state 32

    (61) statement -> Class CLASS_IDENTIFIER EquivalentTo LEFT_CURLY_BRACKET statement_enumerated_class_check . RIGHT_CURLY_BRACKET

    RIGHT_CURLY_BRACKET shift and go to state 49


state 33

    (62) statement_enumerated_class_check -> IndividualNames .
    (63) statement_enumerated_class_check -> IndividualNames . COMMA statement_enumerated_class_check

    RIGHT_CURLY_BRACKET reduce using rule 62 (statement_enumerated_class_check -> IndividualNames .)
    COMMA           shift and go to state 50


state 34

    (40) closed_axiom_mandatory -> CLASS_IDENTIFIER .
    (42) closed_axiom_mandatory -> CLASS_IDENTIFIER . COMMA closed_axiom_mandatory
    (19) primitive_class_mandatory -> CLASS_IDENTIFIER .
    (20) primitive_class_mandatory -> CLASS_IDENTIFIER . COMMA primitive_class_mandatory

  ! reduce/reduce conflict for Class resolved using rule 19 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 19 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    COMMA           shift and go to state 51
    DisjointClasses reduce using rule 19 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    Individuals     reduce using rule 19 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    Class           reduce using rule 19 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    $end            reduce using rule 19 (primitive_class_mandatory -> CLASS_IDENTIFIER .)

  ! Class           [ reduce using rule 40 (closed_axiom_mandatory -> CLASS_IDENTIFIER .) ]
  ! $end            [ reduce using rule 40 (closed_axiom_mandatory -> CLASS_IDENTIFIER .) ]


state 35

    (39) statement -> Class CLASS_IDENTIFIER SubClassOf CLASS_IDENTIFIER COMMA closed_axiom_mandatory .

    Class           reduce using rule 39 (statement -> Class CLASS_IDENTIFIER SubClassOf CLASS_IDENTIFIER COMMA closed_axiom_mandatory .)
    $end            reduce using rule 39 (statement -> Class CLASS_IDENTIFIER SubClassOf CLASS_IDENTIFIER COMMA closed_axiom_mandatory .)


state 36

    (20) primitive_class_mandatory -> CLASS_IDENTIFIER COMMA primitive_class_mandatory .

    DisjointClasses reduce using rule 20 (primitive_class_mandatory -> CLASS_IDENTIFIER COMMA primitive_class_mandatory .)
    Individuals     reduce using rule 20 (primitive_class_mandatory -> CLASS_IDENTIFIER COMMA primitive_class_mandatory .)
    Class           reduce using rule 20 (primitive_class_mandatory -> CLASS_IDENTIFIER COMMA primitive_class_mandatory .)
    $end            reduce using rule 20 (primitive_class_mandatory -> CLASS_IDENTIFIER COMMA primitive_class_mandatory .)


state 37

    (41) closed_axiom_mandatory -> statement_property_restriction .
    (43) closed_axiom_mandatory -> statement_property_restriction . COMMA closed_axiom_mandatory

    Class           reduce using rule 41 (closed_axiom_mandatory -> statement_property_restriction .)
    $end            reduce using rule 41 (closed_axiom_mandatory -> statement_property_restriction .)
    COMMA           shift and go to state 52


state 38

    (15) primitive_class_mandatory -> statement_property_identify . statement_reserved_word CLASS_IDENTIFIER
    (16) primitive_class_mandatory -> statement_property_identify . statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (17) primitive_class_mandatory -> statement_property_identify . statement_reserved_word NAMESPACEID DATA_TYPE
    (18) primitive_class_mandatory -> statement_property_identify . statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory
    (44) statement_property_restriction -> statement_property_identify . SOME CLASS_IDENTIFIER
    (45) statement_property_restriction -> statement_property_identify . ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN
    (4) statement_reserved_word -> . SOME
    (5) statement_reserved_word -> . EXACTLY
    (6) statement_reserved_word -> . MIN
    (7) statement_reserved_word -> . MAX
    (8) statement_reserved_word -> . OR
    (9) statement_reserved_word -> . ONLY
    (10) statement_reserved_word -> . AND
    (11) statement_reserved_word -> . VALUE

    SOME            shift and go to state 53
    ONLY            shift and go to state 54
    EXACTLY         shift and go to state 23
    MIN             shift and go to state 24
    MAX             shift and go to state 25
    OR              shift and go to state 26
    AND             shift and go to state 28
    VALUE           shift and go to state 29

    statement_reserved_word        shift and go to state 21

state 39

    (3) statement -> Class CLASS_IDENTIFIER SubClassOf primitive_class_mandatory statement_class_disjoin statement_class_individuals .

    Class           reduce using rule 3 (statement -> Class CLASS_IDENTIFIER SubClassOf primitive_class_mandatory statement_class_disjoin statement_class_individuals .)
    $end            reduce using rule 3 (statement -> Class CLASS_IDENTIFIER SubClassOf primitive_class_mandatory statement_class_disjoin statement_class_individuals .)


state 40

    (25) statement_class_individuals -> empty .

    Class           reduce using rule 25 (statement_class_individuals -> empty .)
    $end            reduce using rule 25 (statement_class_individuals -> empty .)


state 41

    (26) statement_class_individuals -> Individuals . statement_class_individuals_check
    (27) statement_class_individuals_check -> . IndividualNames
    (28) statement_class_individuals_check -> . IndividualNames COMMA statement_class_individuals_check

    IndividualNames shift and go to state 56

    statement_class_individuals_check shift and go to state 55

state 42

    (22) statement_class_disjoin -> DisjointClasses statement_class_disjoin_check .

    Individuals     reduce using rule 22 (statement_class_disjoin -> DisjointClasses statement_class_disjoin_check .)
    Class           reduce using rule 22 (statement_class_disjoin -> DisjointClasses statement_class_disjoin_check .)
    $end            reduce using rule 22 (statement_class_disjoin -> DisjointClasses statement_class_disjoin_check .)


state 43

    (23) statement_class_disjoin_check -> CLASS_IDENTIFIER .
    (24) statement_class_disjoin_check -> CLASS_IDENTIFIER . COMMA statement_class_disjoin_check

    Individuals     reduce using rule 23 (statement_class_disjoin_check -> CLASS_IDENTIFIER .)
    Class           reduce using rule 23 (statement_class_disjoin_check -> CLASS_IDENTIFIER .)
    $end            reduce using rule 23 (statement_class_disjoin_check -> CLASS_IDENTIFIER .)
    COMMA           shift and go to state 57


state 44

    (15) primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .
    (16) primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER . COMMA primitive_class_mandatory

    DisjointClasses reduce using rule 15 (primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    Individuals     reduce using rule 15 (primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    Class           reduce using rule 15 (primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    $end            reduce using rule 15 (primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    COMMA           shift and go to state 58


state 45

    (17) primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID . DATA_TYPE
    (18) primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID . DATA_TYPE COMMA primitive_class_mandatory

    DATA_TYPE       shift and go to state 59


state 46

    (29) statement -> Class CLASS_IDENTIFIER EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN . statement_defined_class_equivalent statement_class_individuals
    (48) statement -> Class CLASS_IDENTIFIER EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN . nested_descriptions RIGHT_PAREN
    (30) statement_defined_class_equivalent -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN
    (31) statement_defined_class_equivalent -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent
    (32) statement_defined_class_equivalent -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN
    (33) statement_defined_class_equivalent -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent
    (49) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (50) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (51) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (52) nested_descriptions -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (53) nested_descriptions -> . statement_property_identify statement_reserved_word nested_descriptions
    (54) nested_descriptions -> . statement_property_identify statement_reserved_word VALUE CLASS_IDENTIFIER
    (55) nested_descriptions -> . statement_property_identify statement_reserved_word VALUE nested_descriptions
    (56) nested_descriptions -> . statement_property_identify statement_reserved_word ONLY CLASS_IDENTIFIER
    (57) nested_descriptions -> . statement_property_identify statement_reserved_word ONLY nested_descriptions
    (58) nested_descriptions -> . statement_property_identify statement_reserved_word SOME CLASS_IDENTIFIER
    (59) nested_descriptions -> . statement_property_identify statement_reserved_word SOME nested_descriptions
    (60) nested_descriptions -> . CLASS_IDENTIFIER
    (12) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (13) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (14) statement_property_identify -> . PROPERTY_IDENTIFIER

    LEFT_PAREN      shift and go to state 61
    CLASS_IDENTIFIER shift and go to state 60
    PROPERTY_IDENTIFIER_has shift and go to state 11
    PROPERTY_IDENTIFIER_is_Of shift and go to state 12
    PROPERTY_IDENTIFIER shift and go to state 13

    statement_defined_class_equivalent shift and go to state 62
    nested_descriptions            shift and go to state 63
    statement_property_identify    shift and go to state 64

state 47

    (65) statement_covered_class_check -> CLASS_IDENTIFIER .
    (66) statement_covered_class_check -> CLASS_IDENTIFIER . OR statement_covered_class_check

    Class           reduce using rule 65 (statement_covered_class_check -> CLASS_IDENTIFIER .)
    $end            reduce using rule 65 (statement_covered_class_check -> CLASS_IDENTIFIER .)
    OR              shift and go to state 31


state 48

    (66) statement_covered_class_check -> CLASS_IDENTIFIER OR statement_covered_class_check .

    Class           reduce using rule 66 (statement_covered_class_check -> CLASS_IDENTIFIER OR statement_covered_class_check .)
    $end            reduce using rule 66 (statement_covered_class_check -> CLASS_IDENTIFIER OR statement_covered_class_check .)


state 49

    (61) statement -> Class CLASS_IDENTIFIER EquivalentTo LEFT_CURLY_BRACKET statement_enumerated_class_check RIGHT_CURLY_BRACKET .

    Class           reduce using rule 61 (statement -> Class CLASS_IDENTIFIER EquivalentTo LEFT_CURLY_BRACKET statement_enumerated_class_check RIGHT_CURLY_BRACKET .)
    $end            reduce using rule 61 (statement -> Class CLASS_IDENTIFIER EquivalentTo LEFT_CURLY_BRACKET statement_enumerated_class_check RIGHT_CURLY_BRACKET .)


state 50

    (63) statement_enumerated_class_check -> IndividualNames COMMA . statement_enumerated_class_check
    (62) statement_enumerated_class_check -> . IndividualNames
    (63) statement_enumerated_class_check -> . IndividualNames COMMA statement_enumerated_class_check

    IndividualNames shift and go to state 33

    statement_enumerated_class_check shift and go to state 65

state 51

    (42) closed_axiom_mandatory -> CLASS_IDENTIFIER COMMA . closed_axiom_mandatory
    (20) primitive_class_mandatory -> CLASS_IDENTIFIER COMMA . primitive_class_mandatory
    (40) closed_axiom_mandatory -> . CLASS_IDENTIFIER
    (41) closed_axiom_mandatory -> . statement_property_restriction
    (42) closed_axiom_mandatory -> . CLASS_IDENTIFIER COMMA closed_axiom_mandatory
    (43) closed_axiom_mandatory -> . statement_property_restriction COMMA closed_axiom_mandatory
    (15) primitive_class_mandatory -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (16) primitive_class_mandatory -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (17) primitive_class_mandatory -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (18) primitive_class_mandatory -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory
    (19) primitive_class_mandatory -> . CLASS_IDENTIFIER
    (20) primitive_class_mandatory -> . CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (44) statement_property_restriction -> . statement_property_identify SOME CLASS_IDENTIFIER
    (45) statement_property_restriction -> . statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN
    (12) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (13) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (14) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 34
    PROPERTY_IDENTIFIER_has shift and go to state 11
    PROPERTY_IDENTIFIER_is_Of shift and go to state 12
    PROPERTY_IDENTIFIER shift and go to state 13

    closed_axiom_mandatory         shift and go to state 66
    primitive_class_mandatory      shift and go to state 36
    statement_property_restriction shift and go to state 37
    statement_property_identify    shift and go to state 38

state 52

    (43) closed_axiom_mandatory -> statement_property_restriction COMMA . closed_axiom_mandatory
    (40) closed_axiom_mandatory -> . CLASS_IDENTIFIER
    (41) closed_axiom_mandatory -> . statement_property_restriction
    (42) closed_axiom_mandatory -> . CLASS_IDENTIFIER COMMA closed_axiom_mandatory
    (43) closed_axiom_mandatory -> . statement_property_restriction COMMA closed_axiom_mandatory
    (44) statement_property_restriction -> . statement_property_identify SOME CLASS_IDENTIFIER
    (45) statement_property_restriction -> . statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN
    (12) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (13) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (14) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 68
    PROPERTY_IDENTIFIER_has shift and go to state 11
    PROPERTY_IDENTIFIER_is_Of shift and go to state 12
    PROPERTY_IDENTIFIER shift and go to state 13

    statement_property_restriction shift and go to state 37
    closed_axiom_mandatory         shift and go to state 67
    statement_property_identify    shift and go to state 69

state 53

    (44) statement_property_restriction -> statement_property_identify SOME . CLASS_IDENTIFIER
    (4) statement_reserved_word -> SOME .

  ! shift/reduce conflict for CLASS_IDENTIFIER resolved as shift
    CLASS_IDENTIFIER shift and go to state 70
    NAMESPACEID     reduce using rule 4 (statement_reserved_word -> SOME .)

  ! CLASS_IDENTIFIER [ reduce using rule 4 (statement_reserved_word -> SOME .) ]


state 54

    (45) statement_property_restriction -> statement_property_identify ONLY . LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN
    (9) statement_reserved_word -> ONLY .

    LEFT_PAREN      shift and go to state 71
    CLASS_IDENTIFIER reduce using rule 9 (statement_reserved_word -> ONLY .)
    NAMESPACEID     reduce using rule 9 (statement_reserved_word -> ONLY .)


state 55

    (26) statement_class_individuals -> Individuals statement_class_individuals_check .

    Class           reduce using rule 26 (statement_class_individuals -> Individuals statement_class_individuals_check .)
    $end            reduce using rule 26 (statement_class_individuals -> Individuals statement_class_individuals_check .)


state 56

    (27) statement_class_individuals_check -> IndividualNames .
    (28) statement_class_individuals_check -> IndividualNames . COMMA statement_class_individuals_check

    Class           reduce using rule 27 (statement_class_individuals_check -> IndividualNames .)
    $end            reduce using rule 27 (statement_class_individuals_check -> IndividualNames .)
    COMMA           shift and go to state 72


state 57

    (24) statement_class_disjoin_check -> CLASS_IDENTIFIER COMMA . statement_class_disjoin_check
    (23) statement_class_disjoin_check -> . CLASS_IDENTIFIER
    (24) statement_class_disjoin_check -> . CLASS_IDENTIFIER COMMA statement_class_disjoin_check

    CLASS_IDENTIFIER shift and go to state 43

    statement_class_disjoin_check  shift and go to state 73

state 58

    (16) primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA . primitive_class_mandatory
    (15) primitive_class_mandatory -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (16) primitive_class_mandatory -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (17) primitive_class_mandatory -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (18) primitive_class_mandatory -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory
    (19) primitive_class_mandatory -> . CLASS_IDENTIFIER
    (20) primitive_class_mandatory -> . CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (12) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (13) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (14) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 74
    PROPERTY_IDENTIFIER_has shift and go to state 11
    PROPERTY_IDENTIFIER_is_Of shift and go to state 12
    PROPERTY_IDENTIFIER shift and go to state 13

    statement_property_identify    shift and go to state 10
    primitive_class_mandatory      shift and go to state 75

state 59

    (17) primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE .
    (18) primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE . COMMA primitive_class_mandatory

    DisjointClasses reduce using rule 17 (primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE .)
    Individuals     reduce using rule 17 (primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE .)
    Class           reduce using rule 17 (primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE .)
    $end            reduce using rule 17 (primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE .)
    COMMA           shift and go to state 76


state 60

    (60) nested_descriptions -> CLASS_IDENTIFIER .

    RIGHT_PAREN     reduce using rule 60 (nested_descriptions -> CLASS_IDENTIFIER .)
    OR              reduce using rule 60 (nested_descriptions -> CLASS_IDENTIFIER .)
    AND             reduce using rule 60 (nested_descriptions -> CLASS_IDENTIFIER .)


state 61

    (51) nested_descriptions -> LEFT_PAREN . nested_descriptions RIGHT_PAREN
    (49) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (50) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (51) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (52) nested_descriptions -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (53) nested_descriptions -> . statement_property_identify statement_reserved_word nested_descriptions
    (54) nested_descriptions -> . statement_property_identify statement_reserved_word VALUE CLASS_IDENTIFIER
    (55) nested_descriptions -> . statement_property_identify statement_reserved_word VALUE nested_descriptions
    (56) nested_descriptions -> . statement_property_identify statement_reserved_word ONLY CLASS_IDENTIFIER
    (57) nested_descriptions -> . statement_property_identify statement_reserved_word ONLY nested_descriptions
    (58) nested_descriptions -> . statement_property_identify statement_reserved_word SOME CLASS_IDENTIFIER
    (59) nested_descriptions -> . statement_property_identify statement_reserved_word SOME nested_descriptions
    (60) nested_descriptions -> . CLASS_IDENTIFIER
    (12) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (13) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (14) statement_property_identify -> . PROPERTY_IDENTIFIER

    LEFT_PAREN      shift and go to state 61
    CLASS_IDENTIFIER shift and go to state 60
    PROPERTY_IDENTIFIER_has shift and go to state 11
    PROPERTY_IDENTIFIER_is_Of shift and go to state 12
    PROPERTY_IDENTIFIER shift and go to state 13

    nested_descriptions            shift and go to state 77
    statement_property_identify    shift and go to state 78

state 62

    (29) statement -> Class CLASS_IDENTIFIER EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_defined_class_equivalent . statement_class_individuals
    (25) statement_class_individuals -> . empty
    (26) statement_class_individuals -> . Individuals statement_class_individuals_check
    (67) empty -> .

    Individuals     shift and go to state 41
    Class           reduce using rule 67 (empty -> .)
    $end            reduce using rule 67 (empty -> .)

    statement_class_individuals    shift and go to state 79
    empty                          shift and go to state 40

state 63

    (48) statement -> Class CLASS_IDENTIFIER EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN nested_descriptions . RIGHT_PAREN
    (49) nested_descriptions -> nested_descriptions . OR nested_descriptions
    (50) nested_descriptions -> nested_descriptions . AND nested_descriptions

    RIGHT_PAREN     shift and go to state 81
    OR              shift and go to state 82
    AND             shift and go to state 80


state 64

    (30) statement_defined_class_equivalent -> statement_property_identify . statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN
    (31) statement_defined_class_equivalent -> statement_property_identify . statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent
    (32) statement_defined_class_equivalent -> statement_property_identify . statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN
    (33) statement_defined_class_equivalent -> statement_property_identify . statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent
    (52) nested_descriptions -> statement_property_identify . statement_reserved_word CLASS_IDENTIFIER
    (53) nested_descriptions -> statement_property_identify . statement_reserved_word nested_descriptions
    (54) nested_descriptions -> statement_property_identify . statement_reserved_word VALUE CLASS_IDENTIFIER
    (55) nested_descriptions -> statement_property_identify . statement_reserved_word VALUE nested_descriptions
    (56) nested_descriptions -> statement_property_identify . statement_reserved_word ONLY CLASS_IDENTIFIER
    (57) nested_descriptions -> statement_property_identify . statement_reserved_word ONLY nested_descriptions
    (58) nested_descriptions -> statement_property_identify . statement_reserved_word SOME CLASS_IDENTIFIER
    (59) nested_descriptions -> statement_property_identify . statement_reserved_word SOME nested_descriptions
    (4) statement_reserved_word -> . SOME
    (5) statement_reserved_word -> . EXACTLY
    (6) statement_reserved_word -> . MIN
    (7) statement_reserved_word -> . MAX
    (8) statement_reserved_word -> . OR
    (9) statement_reserved_word -> . ONLY
    (10) statement_reserved_word -> . AND
    (11) statement_reserved_word -> . VALUE

    SOME            shift and go to state 22
    EXACTLY         shift and go to state 23
    MIN             shift and go to state 24
    MAX             shift and go to state 25
    OR              shift and go to state 26
    ONLY            shift and go to state 27
    AND             shift and go to state 28
    VALUE           shift and go to state 29

    statement_reserved_word        shift and go to state 83

state 65

    (63) statement_enumerated_class_check -> IndividualNames COMMA statement_enumerated_class_check .

    RIGHT_CURLY_BRACKET reduce using rule 63 (statement_enumerated_class_check -> IndividualNames COMMA statement_enumerated_class_check .)


state 66

    (42) closed_axiom_mandatory -> CLASS_IDENTIFIER COMMA closed_axiom_mandatory .

    Class           reduce using rule 42 (closed_axiom_mandatory -> CLASS_IDENTIFIER COMMA closed_axiom_mandatory .)
    $end            reduce using rule 42 (closed_axiom_mandatory -> CLASS_IDENTIFIER COMMA closed_axiom_mandatory .)


state 67

    (43) closed_axiom_mandatory -> statement_property_restriction COMMA closed_axiom_mandatory .

    Class           reduce using rule 43 (closed_axiom_mandatory -> statement_property_restriction COMMA closed_axiom_mandatory .)
    $end            reduce using rule 43 (closed_axiom_mandatory -> statement_property_restriction COMMA closed_axiom_mandatory .)


state 68

    (40) closed_axiom_mandatory -> CLASS_IDENTIFIER .
    (42) closed_axiom_mandatory -> CLASS_IDENTIFIER . COMMA closed_axiom_mandatory

    Class           reduce using rule 40 (closed_axiom_mandatory -> CLASS_IDENTIFIER .)
    $end            reduce using rule 40 (closed_axiom_mandatory -> CLASS_IDENTIFIER .)
    COMMA           shift and go to state 84


state 69

    (44) statement_property_restriction -> statement_property_identify . SOME CLASS_IDENTIFIER
    (45) statement_property_restriction -> statement_property_identify . ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN

    SOME            shift and go to state 85
    ONLY            shift and go to state 86


state 70

    (44) statement_property_restriction -> statement_property_identify SOME CLASS_IDENTIFIER .

    COMMA           reduce using rule 44 (statement_property_restriction -> statement_property_identify SOME CLASS_IDENTIFIER .)
    Class           reduce using rule 44 (statement_property_restriction -> statement_property_identify SOME CLASS_IDENTIFIER .)
    $end            reduce using rule 44 (statement_property_restriction -> statement_property_identify SOME CLASS_IDENTIFIER .)


state 71

    (45) statement_property_restriction -> statement_property_identify ONLY LEFT_PAREN . closed_axiom_restriction_combination RIGHT_PAREN
    (46) closed_axiom_restriction_combination -> . CLASS_IDENTIFIER
    (47) closed_axiom_restriction_combination -> . CLASS_IDENTIFIER OR closed_axiom_restriction_combination

    CLASS_IDENTIFIER shift and go to state 88

    closed_axiom_restriction_combination shift and go to state 87

state 72

    (28) statement_class_individuals_check -> IndividualNames COMMA . statement_class_individuals_check
    (27) statement_class_individuals_check -> . IndividualNames
    (28) statement_class_individuals_check -> . IndividualNames COMMA statement_class_individuals_check

    IndividualNames shift and go to state 56

    statement_class_individuals_check shift and go to state 89

state 73

    (24) statement_class_disjoin_check -> CLASS_IDENTIFIER COMMA statement_class_disjoin_check .

    Individuals     reduce using rule 24 (statement_class_disjoin_check -> CLASS_IDENTIFIER COMMA statement_class_disjoin_check .)
    Class           reduce using rule 24 (statement_class_disjoin_check -> CLASS_IDENTIFIER COMMA statement_class_disjoin_check .)
    $end            reduce using rule 24 (statement_class_disjoin_check -> CLASS_IDENTIFIER COMMA statement_class_disjoin_check .)


state 74

    (19) primitive_class_mandatory -> CLASS_IDENTIFIER .
    (20) primitive_class_mandatory -> CLASS_IDENTIFIER . COMMA primitive_class_mandatory

    DisjointClasses reduce using rule 19 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    Individuals     reduce using rule 19 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    Class           reduce using rule 19 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    $end            reduce using rule 19 (primitive_class_mandatory -> CLASS_IDENTIFIER .)
    COMMA           shift and go to state 90


state 75

    (16) primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory .

    DisjointClasses reduce using rule 16 (primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory .)
    Individuals     reduce using rule 16 (primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory .)
    Class           reduce using rule 16 (primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory .)
    $end            reduce using rule 16 (primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory .)


state 76

    (18) primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA . primitive_class_mandatory
    (15) primitive_class_mandatory -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (16) primitive_class_mandatory -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (17) primitive_class_mandatory -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (18) primitive_class_mandatory -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory
    (19) primitive_class_mandatory -> . CLASS_IDENTIFIER
    (20) primitive_class_mandatory -> . CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (12) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (13) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (14) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 74
    PROPERTY_IDENTIFIER_has shift and go to state 11
    PROPERTY_IDENTIFIER_is_Of shift and go to state 12
    PROPERTY_IDENTIFIER shift and go to state 13

    statement_property_identify    shift and go to state 10
    primitive_class_mandatory      shift and go to state 91

state 77

    (51) nested_descriptions -> LEFT_PAREN nested_descriptions . RIGHT_PAREN
    (49) nested_descriptions -> nested_descriptions . OR nested_descriptions
    (50) nested_descriptions -> nested_descriptions . AND nested_descriptions

    RIGHT_PAREN     shift and go to state 92
    OR              shift and go to state 82
    AND             shift and go to state 80


state 78

    (52) nested_descriptions -> statement_property_identify . statement_reserved_word CLASS_IDENTIFIER
    (53) nested_descriptions -> statement_property_identify . statement_reserved_word nested_descriptions
    (54) nested_descriptions -> statement_property_identify . statement_reserved_word VALUE CLASS_IDENTIFIER
    (55) nested_descriptions -> statement_property_identify . statement_reserved_word VALUE nested_descriptions
    (56) nested_descriptions -> statement_property_identify . statement_reserved_word ONLY CLASS_IDENTIFIER
    (57) nested_descriptions -> statement_property_identify . statement_reserved_word ONLY nested_descriptions
    (58) nested_descriptions -> statement_property_identify . statement_reserved_word SOME CLASS_IDENTIFIER
    (59) nested_descriptions -> statement_property_identify . statement_reserved_word SOME nested_descriptions
    (4) statement_reserved_word -> . SOME
    (5) statement_reserved_word -> . EXACTLY
    (6) statement_reserved_word -> . MIN
    (7) statement_reserved_word -> . MAX
    (8) statement_reserved_word -> . OR
    (9) statement_reserved_word -> . ONLY
    (10) statement_reserved_word -> . AND
    (11) statement_reserved_word -> . VALUE

    SOME            shift and go to state 22
    EXACTLY         shift and go to state 23
    MIN             shift and go to state 24
    MAX             shift and go to state 25
    OR              shift and go to state 26
    ONLY            shift and go to state 27
    AND             shift and go to state 28
    VALUE           shift and go to state 29

    statement_reserved_word        shift and go to state 93

state 79

    (29) statement -> Class CLASS_IDENTIFIER EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_defined_class_equivalent statement_class_individuals .

    Class           reduce using rule 29 (statement -> Class CLASS_IDENTIFIER EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_defined_class_equivalent statement_class_individuals .)
    $end            reduce using rule 29 (statement -> Class CLASS_IDENTIFIER EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_defined_class_equivalent statement_class_individuals .)


state 80

    (50) nested_descriptions -> nested_descriptions AND . nested_descriptions
    (49) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (50) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (51) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (52) nested_descriptions -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (53) nested_descriptions -> . statement_property_identify statement_reserved_word nested_descriptions
    (54) nested_descriptions -> . statement_property_identify statement_reserved_word VALUE CLASS_IDENTIFIER
    (55) nested_descriptions -> . statement_property_identify statement_reserved_word VALUE nested_descriptions
    (56) nested_descriptions -> . statement_property_identify statement_reserved_word ONLY CLASS_IDENTIFIER
    (57) nested_descriptions -> . statement_property_identify statement_reserved_word ONLY nested_descriptions
    (58) nested_descriptions -> . statement_property_identify statement_reserved_word SOME CLASS_IDENTIFIER
    (59) nested_descriptions -> . statement_property_identify statement_reserved_word SOME nested_descriptions
    (60) nested_descriptions -> . CLASS_IDENTIFIER
    (12) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (13) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (14) statement_property_identify -> . PROPERTY_IDENTIFIER

    LEFT_PAREN      shift and go to state 61
    CLASS_IDENTIFIER shift and go to state 60
    PROPERTY_IDENTIFIER_has shift and go to state 11
    PROPERTY_IDENTIFIER_is_Of shift and go to state 12
    PROPERTY_IDENTIFIER shift and go to state 13

    nested_descriptions            shift and go to state 94
    statement_property_identify    shift and go to state 78

state 81

    (48) statement -> Class CLASS_IDENTIFIER EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN nested_descriptions RIGHT_PAREN .

    Class           reduce using rule 48 (statement -> Class CLASS_IDENTIFIER EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN nested_descriptions RIGHT_PAREN .)
    $end            reduce using rule 48 (statement -> Class CLASS_IDENTIFIER EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN nested_descriptions RIGHT_PAREN .)


state 82

    (49) nested_descriptions -> nested_descriptions OR . nested_descriptions
    (49) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (50) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (51) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (52) nested_descriptions -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (53) nested_descriptions -> . statement_property_identify statement_reserved_word nested_descriptions
    (54) nested_descriptions -> . statement_property_identify statement_reserved_word VALUE CLASS_IDENTIFIER
    (55) nested_descriptions -> . statement_property_identify statement_reserved_word VALUE nested_descriptions
    (56) nested_descriptions -> . statement_property_identify statement_reserved_word ONLY CLASS_IDENTIFIER
    (57) nested_descriptions -> . statement_property_identify statement_reserved_word ONLY nested_descriptions
    (58) nested_descriptions -> . statement_property_identify statement_reserved_word SOME CLASS_IDENTIFIER
    (59) nested_descriptions -> . statement_property_identify statement_reserved_word SOME nested_descriptions
    (60) nested_descriptions -> . CLASS_IDENTIFIER
    (12) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (13) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (14) statement_property_identify -> . PROPERTY_IDENTIFIER

    LEFT_PAREN      shift and go to state 61
    CLASS_IDENTIFIER shift and go to state 60
    PROPERTY_IDENTIFIER_has shift and go to state 11
    PROPERTY_IDENTIFIER_is_Of shift and go to state 12
    PROPERTY_IDENTIFIER shift and go to state 13

    nested_descriptions            shift and go to state 95
    statement_property_identify    shift and go to state 78

state 83

    (30) statement_defined_class_equivalent -> statement_property_identify statement_reserved_word . CLASS_IDENTIFIER RIGHT_PAREN
    (31) statement_defined_class_equivalent -> statement_property_identify statement_reserved_word . CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent
    (32) statement_defined_class_equivalent -> statement_property_identify statement_reserved_word . NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN
    (33) statement_defined_class_equivalent -> statement_property_identify statement_reserved_word . NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent
    (52) nested_descriptions -> statement_property_identify statement_reserved_word . CLASS_IDENTIFIER
    (53) nested_descriptions -> statement_property_identify statement_reserved_word . nested_descriptions
    (54) nested_descriptions -> statement_property_identify statement_reserved_word . VALUE CLASS_IDENTIFIER
    (55) nested_descriptions -> statement_property_identify statement_reserved_word . VALUE nested_descriptions
    (56) nested_descriptions -> statement_property_identify statement_reserved_word . ONLY CLASS_IDENTIFIER
    (57) nested_descriptions -> statement_property_identify statement_reserved_word . ONLY nested_descriptions
    (58) nested_descriptions -> statement_property_identify statement_reserved_word . SOME CLASS_IDENTIFIER
    (59) nested_descriptions -> statement_property_identify statement_reserved_word . SOME nested_descriptions
    (49) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (50) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (51) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (52) nested_descriptions -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (53) nested_descriptions -> . statement_property_identify statement_reserved_word nested_descriptions
    (54) nested_descriptions -> . statement_property_identify statement_reserved_word VALUE CLASS_IDENTIFIER
    (55) nested_descriptions -> . statement_property_identify statement_reserved_word VALUE nested_descriptions
    (56) nested_descriptions -> . statement_property_identify statement_reserved_word ONLY CLASS_IDENTIFIER
    (57) nested_descriptions -> . statement_property_identify statement_reserved_word ONLY nested_descriptions
    (58) nested_descriptions -> . statement_property_identify statement_reserved_word SOME CLASS_IDENTIFIER
    (59) nested_descriptions -> . statement_property_identify statement_reserved_word SOME nested_descriptions
    (60) nested_descriptions -> . CLASS_IDENTIFIER
    (12) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (13) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (14) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 96
    NAMESPACEID     shift and go to state 97
    VALUE           shift and go to state 99
    ONLY            shift and go to state 100
    SOME            shift and go to state 101
    LEFT_PAREN      shift and go to state 61
    PROPERTY_IDENTIFIER_has shift and go to state 11
    PROPERTY_IDENTIFIER_is_Of shift and go to state 12
    PROPERTY_IDENTIFIER shift and go to state 13

    statement_property_identify    shift and go to state 78
    nested_descriptions            shift and go to state 98

state 84

    (42) closed_axiom_mandatory -> CLASS_IDENTIFIER COMMA . closed_axiom_mandatory
    (40) closed_axiom_mandatory -> . CLASS_IDENTIFIER
    (41) closed_axiom_mandatory -> . statement_property_restriction
    (42) closed_axiom_mandatory -> . CLASS_IDENTIFIER COMMA closed_axiom_mandatory
    (43) closed_axiom_mandatory -> . statement_property_restriction COMMA closed_axiom_mandatory
    (44) statement_property_restriction -> . statement_property_identify SOME CLASS_IDENTIFIER
    (45) statement_property_restriction -> . statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN
    (12) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (13) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (14) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 68
    PROPERTY_IDENTIFIER_has shift and go to state 11
    PROPERTY_IDENTIFIER_is_Of shift and go to state 12
    PROPERTY_IDENTIFIER shift and go to state 13

    closed_axiom_mandatory         shift and go to state 66
    statement_property_restriction shift and go to state 37
    statement_property_identify    shift and go to state 69

state 85

    (44) statement_property_restriction -> statement_property_identify SOME . CLASS_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 70


state 86

    (45) statement_property_restriction -> statement_property_identify ONLY . LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN

    LEFT_PAREN      shift and go to state 71


state 87

    (45) statement_property_restriction -> statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 102


state 88

    (46) closed_axiom_restriction_combination -> CLASS_IDENTIFIER .
    (47) closed_axiom_restriction_combination -> CLASS_IDENTIFIER . OR closed_axiom_restriction_combination

    RIGHT_PAREN     reduce using rule 46 (closed_axiom_restriction_combination -> CLASS_IDENTIFIER .)
    OR              shift and go to state 103


state 89

    (28) statement_class_individuals_check -> IndividualNames COMMA statement_class_individuals_check .

    Class           reduce using rule 28 (statement_class_individuals_check -> IndividualNames COMMA statement_class_individuals_check .)
    $end            reduce using rule 28 (statement_class_individuals_check -> IndividualNames COMMA statement_class_individuals_check .)


state 90

    (20) primitive_class_mandatory -> CLASS_IDENTIFIER COMMA . primitive_class_mandatory
    (15) primitive_class_mandatory -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (16) primitive_class_mandatory -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (17) primitive_class_mandatory -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE
    (18) primitive_class_mandatory -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory
    (19) primitive_class_mandatory -> . CLASS_IDENTIFIER
    (20) primitive_class_mandatory -> . CLASS_IDENTIFIER COMMA primitive_class_mandatory
    (12) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (13) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (14) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 74
    PROPERTY_IDENTIFIER_has shift and go to state 11
    PROPERTY_IDENTIFIER_is_Of shift and go to state 12
    PROPERTY_IDENTIFIER shift and go to state 13

    primitive_class_mandatory      shift and go to state 36
    statement_property_identify    shift and go to state 10

state 91

    (18) primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory .

    DisjointClasses reduce using rule 18 (primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory .)
    Individuals     reduce using rule 18 (primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory .)
    Class           reduce using rule 18 (primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory .)
    $end            reduce using rule 18 (primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory .)


state 92

    (51) nested_descriptions -> LEFT_PAREN nested_descriptions RIGHT_PAREN .

    RIGHT_PAREN     reduce using rule 51 (nested_descriptions -> LEFT_PAREN nested_descriptions RIGHT_PAREN .)
    OR              reduce using rule 51 (nested_descriptions -> LEFT_PAREN nested_descriptions RIGHT_PAREN .)
    AND             reduce using rule 51 (nested_descriptions -> LEFT_PAREN nested_descriptions RIGHT_PAREN .)


state 93

    (52) nested_descriptions -> statement_property_identify statement_reserved_word . CLASS_IDENTIFIER
    (53) nested_descriptions -> statement_property_identify statement_reserved_word . nested_descriptions
    (54) nested_descriptions -> statement_property_identify statement_reserved_word . VALUE CLASS_IDENTIFIER
    (55) nested_descriptions -> statement_property_identify statement_reserved_word . VALUE nested_descriptions
    (56) nested_descriptions -> statement_property_identify statement_reserved_word . ONLY CLASS_IDENTIFIER
    (57) nested_descriptions -> statement_property_identify statement_reserved_word . ONLY nested_descriptions
    (58) nested_descriptions -> statement_property_identify statement_reserved_word . SOME CLASS_IDENTIFIER
    (59) nested_descriptions -> statement_property_identify statement_reserved_word . SOME nested_descriptions
    (49) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (50) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (51) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (52) nested_descriptions -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (53) nested_descriptions -> . statement_property_identify statement_reserved_word nested_descriptions
    (54) nested_descriptions -> . statement_property_identify statement_reserved_word VALUE CLASS_IDENTIFIER
    (55) nested_descriptions -> . statement_property_identify statement_reserved_word VALUE nested_descriptions
    (56) nested_descriptions -> . statement_property_identify statement_reserved_word ONLY CLASS_IDENTIFIER
    (57) nested_descriptions -> . statement_property_identify statement_reserved_word ONLY nested_descriptions
    (58) nested_descriptions -> . statement_property_identify statement_reserved_word SOME CLASS_IDENTIFIER
    (59) nested_descriptions -> . statement_property_identify statement_reserved_word SOME nested_descriptions
    (60) nested_descriptions -> . CLASS_IDENTIFIER
    (12) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (13) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (14) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 104
    VALUE           shift and go to state 99
    ONLY            shift and go to state 100
    SOME            shift and go to state 101
    LEFT_PAREN      shift and go to state 61
    PROPERTY_IDENTIFIER_has shift and go to state 11
    PROPERTY_IDENTIFIER_is_Of shift and go to state 12
    PROPERTY_IDENTIFIER shift and go to state 13

    statement_property_identify    shift and go to state 78
    nested_descriptions            shift and go to state 98

state 94

    (50) nested_descriptions -> nested_descriptions AND nested_descriptions .
    (49) nested_descriptions -> nested_descriptions . OR nested_descriptions
    (50) nested_descriptions -> nested_descriptions . AND nested_descriptions

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    RIGHT_PAREN     reduce using rule 50 (nested_descriptions -> nested_descriptions AND nested_descriptions .)
    OR              shift and go to state 82
    AND             shift and go to state 80

  ! OR              [ reduce using rule 50 (nested_descriptions -> nested_descriptions AND nested_descriptions .) ]
  ! AND             [ reduce using rule 50 (nested_descriptions -> nested_descriptions AND nested_descriptions .) ]


state 95

    (49) nested_descriptions -> nested_descriptions OR nested_descriptions .
    (49) nested_descriptions -> nested_descriptions . OR nested_descriptions
    (50) nested_descriptions -> nested_descriptions . AND nested_descriptions

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    RIGHT_PAREN     reduce using rule 49 (nested_descriptions -> nested_descriptions OR nested_descriptions .)
    OR              shift and go to state 82
    AND             shift and go to state 80

  ! OR              [ reduce using rule 49 (nested_descriptions -> nested_descriptions OR nested_descriptions .) ]
  ! AND             [ reduce using rule 49 (nested_descriptions -> nested_descriptions OR nested_descriptions .) ]


state 96

    (30) statement_defined_class_equivalent -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER . RIGHT_PAREN
    (31) statement_defined_class_equivalent -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER . RIGHT_PAREN COMMA statement_defined_class_equivalent
    (52) nested_descriptions -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .
    (60) nested_descriptions -> CLASS_IDENTIFIER .

  ! shift/reduce conflict for RIGHT_PAREN resolved as shift
  ! reduce/reduce conflict for OR resolved using rule 52 (nested_descriptions -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for AND resolved using rule 52 (nested_descriptions -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
  ! shift/reduce conflict for RIGHT_PAREN resolved as shift
    RIGHT_PAREN     shift and go to state 105
    OR              reduce using rule 52 (nested_descriptions -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    AND             reduce using rule 52 (nested_descriptions -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)

  ! RIGHT_PAREN     [ reduce using rule 52 (nested_descriptions -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .) ]
  ! OR              [ reduce using rule 60 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! AND             [ reduce using rule 60 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! RIGHT_PAREN     [ reduce using rule 60 (nested_descriptions -> CLASS_IDENTIFIER .) ]


state 97

    (32) statement_defined_class_equivalent -> statement_property_identify statement_reserved_word NAMESPACEID . DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN
    (33) statement_defined_class_equivalent -> statement_property_identify statement_reserved_word NAMESPACEID . DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent

    DATA_TYPE       shift and go to state 106


state 98

    (53) nested_descriptions -> statement_property_identify statement_reserved_word nested_descriptions .
    (49) nested_descriptions -> nested_descriptions . OR nested_descriptions
    (50) nested_descriptions -> nested_descriptions . AND nested_descriptions

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    RIGHT_PAREN     reduce using rule 53 (nested_descriptions -> statement_property_identify statement_reserved_word nested_descriptions .)
    OR              shift and go to state 82
    AND             shift and go to state 80

  ! OR              [ reduce using rule 53 (nested_descriptions -> statement_property_identify statement_reserved_word nested_descriptions .) ]
  ! AND             [ reduce using rule 53 (nested_descriptions -> statement_property_identify statement_reserved_word nested_descriptions .) ]


state 99

    (54) nested_descriptions -> statement_property_identify statement_reserved_word VALUE . CLASS_IDENTIFIER
    (55) nested_descriptions -> statement_property_identify statement_reserved_word VALUE . nested_descriptions
    (49) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (50) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (51) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (52) nested_descriptions -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (53) nested_descriptions -> . statement_property_identify statement_reserved_word nested_descriptions
    (54) nested_descriptions -> . statement_property_identify statement_reserved_word VALUE CLASS_IDENTIFIER
    (55) nested_descriptions -> . statement_property_identify statement_reserved_word VALUE nested_descriptions
    (56) nested_descriptions -> . statement_property_identify statement_reserved_word ONLY CLASS_IDENTIFIER
    (57) nested_descriptions -> . statement_property_identify statement_reserved_word ONLY nested_descriptions
    (58) nested_descriptions -> . statement_property_identify statement_reserved_word SOME CLASS_IDENTIFIER
    (59) nested_descriptions -> . statement_property_identify statement_reserved_word SOME nested_descriptions
    (60) nested_descriptions -> . CLASS_IDENTIFIER
    (12) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (13) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (14) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 107
    LEFT_PAREN      shift and go to state 61
    PROPERTY_IDENTIFIER_has shift and go to state 11
    PROPERTY_IDENTIFIER_is_Of shift and go to state 12
    PROPERTY_IDENTIFIER shift and go to state 13

    statement_property_identify    shift and go to state 78
    nested_descriptions            shift and go to state 108

state 100

    (56) nested_descriptions -> statement_property_identify statement_reserved_word ONLY . CLASS_IDENTIFIER
    (57) nested_descriptions -> statement_property_identify statement_reserved_word ONLY . nested_descriptions
    (49) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (50) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (51) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (52) nested_descriptions -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (53) nested_descriptions -> . statement_property_identify statement_reserved_word nested_descriptions
    (54) nested_descriptions -> . statement_property_identify statement_reserved_word VALUE CLASS_IDENTIFIER
    (55) nested_descriptions -> . statement_property_identify statement_reserved_word VALUE nested_descriptions
    (56) nested_descriptions -> . statement_property_identify statement_reserved_word ONLY CLASS_IDENTIFIER
    (57) nested_descriptions -> . statement_property_identify statement_reserved_word ONLY nested_descriptions
    (58) nested_descriptions -> . statement_property_identify statement_reserved_word SOME CLASS_IDENTIFIER
    (59) nested_descriptions -> . statement_property_identify statement_reserved_word SOME nested_descriptions
    (60) nested_descriptions -> . CLASS_IDENTIFIER
    (12) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (13) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (14) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 109
    LEFT_PAREN      shift and go to state 61
    PROPERTY_IDENTIFIER_has shift and go to state 11
    PROPERTY_IDENTIFIER_is_Of shift and go to state 12
    PROPERTY_IDENTIFIER shift and go to state 13

    statement_property_identify    shift and go to state 78
    nested_descriptions            shift and go to state 110

state 101

    (58) nested_descriptions -> statement_property_identify statement_reserved_word SOME . CLASS_IDENTIFIER
    (59) nested_descriptions -> statement_property_identify statement_reserved_word SOME . nested_descriptions
    (49) nested_descriptions -> . nested_descriptions OR nested_descriptions
    (50) nested_descriptions -> . nested_descriptions AND nested_descriptions
    (51) nested_descriptions -> . LEFT_PAREN nested_descriptions RIGHT_PAREN
    (52) nested_descriptions -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER
    (53) nested_descriptions -> . statement_property_identify statement_reserved_word nested_descriptions
    (54) nested_descriptions -> . statement_property_identify statement_reserved_word VALUE CLASS_IDENTIFIER
    (55) nested_descriptions -> . statement_property_identify statement_reserved_word VALUE nested_descriptions
    (56) nested_descriptions -> . statement_property_identify statement_reserved_word ONLY CLASS_IDENTIFIER
    (57) nested_descriptions -> . statement_property_identify statement_reserved_word ONLY nested_descriptions
    (58) nested_descriptions -> . statement_property_identify statement_reserved_word SOME CLASS_IDENTIFIER
    (59) nested_descriptions -> . statement_property_identify statement_reserved_word SOME nested_descriptions
    (60) nested_descriptions -> . CLASS_IDENTIFIER
    (12) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (13) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (14) statement_property_identify -> . PROPERTY_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 111
    LEFT_PAREN      shift and go to state 61
    PROPERTY_IDENTIFIER_has shift and go to state 11
    PROPERTY_IDENTIFIER_is_Of shift and go to state 12
    PROPERTY_IDENTIFIER shift and go to state 13

    statement_property_identify    shift and go to state 78
    nested_descriptions            shift and go to state 112

state 102

    (45) statement_property_restriction -> statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN .

    COMMA           reduce using rule 45 (statement_property_restriction -> statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN .)
    Class           reduce using rule 45 (statement_property_restriction -> statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN .)
    $end            reduce using rule 45 (statement_property_restriction -> statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN .)


state 103

    (47) closed_axiom_restriction_combination -> CLASS_IDENTIFIER OR . closed_axiom_restriction_combination
    (46) closed_axiom_restriction_combination -> . CLASS_IDENTIFIER
    (47) closed_axiom_restriction_combination -> . CLASS_IDENTIFIER OR closed_axiom_restriction_combination

    CLASS_IDENTIFIER shift and go to state 88

    closed_axiom_restriction_combination shift and go to state 113

state 104

    (52) nested_descriptions -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .
    (60) nested_descriptions -> CLASS_IDENTIFIER .

  ! reduce/reduce conflict for OR resolved using rule 52 (nested_descriptions -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for AND resolved using rule 52 (nested_descriptions -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 52 (nested_descriptions -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    RIGHT_PAREN     reduce using rule 52 (nested_descriptions -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    OR              reduce using rule 52 (nested_descriptions -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)
    AND             reduce using rule 52 (nested_descriptions -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER .)

  ! OR              [ reduce using rule 60 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! AND             [ reduce using rule 60 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! RIGHT_PAREN     [ reduce using rule 60 (nested_descriptions -> CLASS_IDENTIFIER .) ]


state 105

    (30) statement_defined_class_equivalent -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN .
    (31) statement_defined_class_equivalent -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN . COMMA statement_defined_class_equivalent

    Individuals     reduce using rule 30 (statement_defined_class_equivalent -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN .)
    Class           reduce using rule 30 (statement_defined_class_equivalent -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN .)
    $end            reduce using rule 30 (statement_defined_class_equivalent -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN .)
    COMMA           shift and go to state 114


state 106

    (32) statement_defined_class_equivalent -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE . LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN
    (33) statement_defined_class_equivalent -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE . LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent

    LEFT_BRACKET    shift and go to state 115


state 107

    (54) nested_descriptions -> statement_property_identify statement_reserved_word VALUE CLASS_IDENTIFIER .
    (60) nested_descriptions -> CLASS_IDENTIFIER .

  ! reduce/reduce conflict for OR resolved using rule 54 (nested_descriptions -> statement_property_identify statement_reserved_word VALUE CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for AND resolved using rule 54 (nested_descriptions -> statement_property_identify statement_reserved_word VALUE CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 54 (nested_descriptions -> statement_property_identify statement_reserved_word VALUE CLASS_IDENTIFIER .)
    RIGHT_PAREN     reduce using rule 54 (nested_descriptions -> statement_property_identify statement_reserved_word VALUE CLASS_IDENTIFIER .)
    OR              reduce using rule 54 (nested_descriptions -> statement_property_identify statement_reserved_word VALUE CLASS_IDENTIFIER .)
    AND             reduce using rule 54 (nested_descriptions -> statement_property_identify statement_reserved_word VALUE CLASS_IDENTIFIER .)

  ! OR              [ reduce using rule 60 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! AND             [ reduce using rule 60 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! RIGHT_PAREN     [ reduce using rule 60 (nested_descriptions -> CLASS_IDENTIFIER .) ]


state 108

    (55) nested_descriptions -> statement_property_identify statement_reserved_word VALUE nested_descriptions .
    (49) nested_descriptions -> nested_descriptions . OR nested_descriptions
    (50) nested_descriptions -> nested_descriptions . AND nested_descriptions

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    RIGHT_PAREN     reduce using rule 55 (nested_descriptions -> statement_property_identify statement_reserved_word VALUE nested_descriptions .)
    OR              shift and go to state 82
    AND             shift and go to state 80

  ! OR              [ reduce using rule 55 (nested_descriptions -> statement_property_identify statement_reserved_word VALUE nested_descriptions .) ]
  ! AND             [ reduce using rule 55 (nested_descriptions -> statement_property_identify statement_reserved_word VALUE nested_descriptions .) ]


state 109

    (56) nested_descriptions -> statement_property_identify statement_reserved_word ONLY CLASS_IDENTIFIER .
    (60) nested_descriptions -> CLASS_IDENTIFIER .

  ! reduce/reduce conflict for OR resolved using rule 56 (nested_descriptions -> statement_property_identify statement_reserved_word ONLY CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for AND resolved using rule 56 (nested_descriptions -> statement_property_identify statement_reserved_word ONLY CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 56 (nested_descriptions -> statement_property_identify statement_reserved_word ONLY CLASS_IDENTIFIER .)
    RIGHT_PAREN     reduce using rule 56 (nested_descriptions -> statement_property_identify statement_reserved_word ONLY CLASS_IDENTIFIER .)
    OR              reduce using rule 56 (nested_descriptions -> statement_property_identify statement_reserved_word ONLY CLASS_IDENTIFIER .)
    AND             reduce using rule 56 (nested_descriptions -> statement_property_identify statement_reserved_word ONLY CLASS_IDENTIFIER .)

  ! OR              [ reduce using rule 60 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! AND             [ reduce using rule 60 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! RIGHT_PAREN     [ reduce using rule 60 (nested_descriptions -> CLASS_IDENTIFIER .) ]


state 110

    (57) nested_descriptions -> statement_property_identify statement_reserved_word ONLY nested_descriptions .
    (49) nested_descriptions -> nested_descriptions . OR nested_descriptions
    (50) nested_descriptions -> nested_descriptions . AND nested_descriptions

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    RIGHT_PAREN     reduce using rule 57 (nested_descriptions -> statement_property_identify statement_reserved_word ONLY nested_descriptions .)
    OR              shift and go to state 82
    AND             shift and go to state 80

  ! OR              [ reduce using rule 57 (nested_descriptions -> statement_property_identify statement_reserved_word ONLY nested_descriptions .) ]
  ! AND             [ reduce using rule 57 (nested_descriptions -> statement_property_identify statement_reserved_word ONLY nested_descriptions .) ]


state 111

    (58) nested_descriptions -> statement_property_identify statement_reserved_word SOME CLASS_IDENTIFIER .
    (60) nested_descriptions -> CLASS_IDENTIFIER .

  ! reduce/reduce conflict for OR resolved using rule 58 (nested_descriptions -> statement_property_identify statement_reserved_word SOME CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for AND resolved using rule 58 (nested_descriptions -> statement_property_identify statement_reserved_word SOME CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 58 (nested_descriptions -> statement_property_identify statement_reserved_word SOME CLASS_IDENTIFIER .)
    RIGHT_PAREN     reduce using rule 58 (nested_descriptions -> statement_property_identify statement_reserved_word SOME CLASS_IDENTIFIER .)
    OR              reduce using rule 58 (nested_descriptions -> statement_property_identify statement_reserved_word SOME CLASS_IDENTIFIER .)
    AND             reduce using rule 58 (nested_descriptions -> statement_property_identify statement_reserved_word SOME CLASS_IDENTIFIER .)

  ! OR              [ reduce using rule 60 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! AND             [ reduce using rule 60 (nested_descriptions -> CLASS_IDENTIFIER .) ]
  ! RIGHT_PAREN     [ reduce using rule 60 (nested_descriptions -> CLASS_IDENTIFIER .) ]


state 112

    (59) nested_descriptions -> statement_property_identify statement_reserved_word SOME nested_descriptions .
    (49) nested_descriptions -> nested_descriptions . OR nested_descriptions
    (50) nested_descriptions -> nested_descriptions . AND nested_descriptions

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    RIGHT_PAREN     reduce using rule 59 (nested_descriptions -> statement_property_identify statement_reserved_word SOME nested_descriptions .)
    OR              shift and go to state 82
    AND             shift and go to state 80

  ! OR              [ reduce using rule 59 (nested_descriptions -> statement_property_identify statement_reserved_word SOME nested_descriptions .) ]
  ! AND             [ reduce using rule 59 (nested_descriptions -> statement_property_identify statement_reserved_word SOME nested_descriptions .) ]


state 113

    (47) closed_axiom_restriction_combination -> CLASS_IDENTIFIER OR closed_axiom_restriction_combination .

    RIGHT_PAREN     reduce using rule 47 (closed_axiom_restriction_combination -> CLASS_IDENTIFIER OR closed_axiom_restriction_combination .)


state 114

    (31) statement_defined_class_equivalent -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA . statement_defined_class_equivalent
    (30) statement_defined_class_equivalent -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN
    (31) statement_defined_class_equivalent -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent
    (32) statement_defined_class_equivalent -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN
    (33) statement_defined_class_equivalent -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent
    (12) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (13) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (14) statement_property_identify -> . PROPERTY_IDENTIFIER

    PROPERTY_IDENTIFIER_has shift and go to state 11
    PROPERTY_IDENTIFIER_is_Of shift and go to state 12
    PROPERTY_IDENTIFIER shift and go to state 13

    statement_property_identify    shift and go to state 116
    statement_defined_class_equivalent shift and go to state 117

state 115

    (32) statement_defined_class_equivalent -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET . statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN
    (33) statement_defined_class_equivalent -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET . statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent
    (34) statement_operator_symbol -> . LESS_THAN
    (35) statement_operator_symbol -> . GREATER_THAN
    (36) statement_operator_symbol -> . EQUALS
    (37) statement_operator_symbol -> . GREATER_THAN EQUALS
    (38) statement_operator_symbol -> . LESS_THAN EQUALS

    LESS_THAN       shift and go to state 119
    GREATER_THAN    shift and go to state 120
    EQUALS          shift and go to state 121

    statement_operator_symbol      shift and go to state 118

state 116

    (30) statement_defined_class_equivalent -> statement_property_identify . statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN
    (31) statement_defined_class_equivalent -> statement_property_identify . statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent
    (32) statement_defined_class_equivalent -> statement_property_identify . statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN
    (33) statement_defined_class_equivalent -> statement_property_identify . statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent
    (4) statement_reserved_word -> . SOME
    (5) statement_reserved_word -> . EXACTLY
    (6) statement_reserved_word -> . MIN
    (7) statement_reserved_word -> . MAX
    (8) statement_reserved_word -> . OR
    (9) statement_reserved_word -> . ONLY
    (10) statement_reserved_word -> . AND
    (11) statement_reserved_word -> . VALUE

    SOME            shift and go to state 22
    EXACTLY         shift and go to state 23
    MIN             shift and go to state 24
    MAX             shift and go to state 25
    OR              shift and go to state 26
    ONLY            shift and go to state 27
    AND             shift and go to state 28
    VALUE           shift and go to state 29

    statement_reserved_word        shift and go to state 122

state 117

    (31) statement_defined_class_equivalent -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent .

    Individuals     reduce using rule 31 (statement_defined_class_equivalent -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent .)
    Class           reduce using rule 31 (statement_defined_class_equivalent -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent .)
    $end            reduce using rule 31 (statement_defined_class_equivalent -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent .)


state 118

    (32) statement_defined_class_equivalent -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol . NUMBER RIGHT_BRACKET RIGHT_PAREN
    (33) statement_defined_class_equivalent -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol . NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent

    NUMBER          shift and go to state 123


state 119

    (34) statement_operator_symbol -> LESS_THAN .
    (38) statement_operator_symbol -> LESS_THAN . EQUALS

    NUMBER          reduce using rule 34 (statement_operator_symbol -> LESS_THAN .)
    EQUALS          shift and go to state 124


state 120

    (35) statement_operator_symbol -> GREATER_THAN .
    (37) statement_operator_symbol -> GREATER_THAN . EQUALS

    NUMBER          reduce using rule 35 (statement_operator_symbol -> GREATER_THAN .)
    EQUALS          shift and go to state 125


state 121

    (36) statement_operator_symbol -> EQUALS .

    NUMBER          reduce using rule 36 (statement_operator_symbol -> EQUALS .)


state 122

    (30) statement_defined_class_equivalent -> statement_property_identify statement_reserved_word . CLASS_IDENTIFIER RIGHT_PAREN
    (31) statement_defined_class_equivalent -> statement_property_identify statement_reserved_word . CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent
    (32) statement_defined_class_equivalent -> statement_property_identify statement_reserved_word . NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN
    (33) statement_defined_class_equivalent -> statement_property_identify statement_reserved_word . NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent

    CLASS_IDENTIFIER shift and go to state 126
    NAMESPACEID     shift and go to state 97


state 123

    (32) statement_defined_class_equivalent -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER . RIGHT_BRACKET RIGHT_PAREN
    (33) statement_defined_class_equivalent -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER . RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent

    RIGHT_BRACKET   shift and go to state 127


state 124

    (38) statement_operator_symbol -> LESS_THAN EQUALS .

    NUMBER          reduce using rule 38 (statement_operator_symbol -> LESS_THAN EQUALS .)


state 125

    (37) statement_operator_symbol -> GREATER_THAN EQUALS .

    NUMBER          reduce using rule 37 (statement_operator_symbol -> GREATER_THAN EQUALS .)


state 126

    (30) statement_defined_class_equivalent -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER . RIGHT_PAREN
    (31) statement_defined_class_equivalent -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER . RIGHT_PAREN COMMA statement_defined_class_equivalent

    RIGHT_PAREN     shift and go to state 105


state 127

    (32) statement_defined_class_equivalent -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET . RIGHT_PAREN
    (33) statement_defined_class_equivalent -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET . RIGHT_PAREN COMMA statement_defined_class_equivalent

    RIGHT_PAREN     shift and go to state 128


state 128

    (32) statement_defined_class_equivalent -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN .
    (33) statement_defined_class_equivalent -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN . COMMA statement_defined_class_equivalent

    Individuals     reduce using rule 32 (statement_defined_class_equivalent -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN .)
    Class           reduce using rule 32 (statement_defined_class_equivalent -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN .)
    $end            reduce using rule 32 (statement_defined_class_equivalent -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN .)
    COMMA           shift and go to state 129


state 129

    (33) statement_defined_class_equivalent -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA . statement_defined_class_equivalent
    (30) statement_defined_class_equivalent -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN
    (31) statement_defined_class_equivalent -> . statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent
    (32) statement_defined_class_equivalent -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN
    (33) statement_defined_class_equivalent -> . statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent
    (12) statement_property_identify -> . PROPERTY_IDENTIFIER_has
    (13) statement_property_identify -> . PROPERTY_IDENTIFIER_is_Of
    (14) statement_property_identify -> . PROPERTY_IDENTIFIER

    PROPERTY_IDENTIFIER_has shift and go to state 11
    PROPERTY_IDENTIFIER_is_Of shift and go to state 12
    PROPERTY_IDENTIFIER shift and go to state 13

    statement_property_identify    shift and go to state 116
    statement_defined_class_equivalent shift and go to state 130

state 130

    (33) statement_defined_class_equivalent -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent .

    Individuals     reduce using rule 33 (statement_defined_class_equivalent -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent .)
    Class           reduce using rule 33 (statement_defined_class_equivalent -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent .)
    $end            reduce using rule 33 (statement_defined_class_equivalent -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CLASS_IDENTIFIER in state 53 resolved as shift
WARNING: shift/reduce conflict for OR in state 94 resolved as shift
WARNING: shift/reduce conflict for AND in state 94 resolved as shift
WARNING: shift/reduce conflict for OR in state 95 resolved as shift
WARNING: shift/reduce conflict for AND in state 95 resolved as shift
WARNING: shift/reduce conflict for RIGHT_PAREN in state 96 resolved as shift
WARNING: shift/reduce conflict for RIGHT_PAREN in state 96 resolved as shift
WARNING: shift/reduce conflict for OR in state 98 resolved as shift
WARNING: shift/reduce conflict for AND in state 98 resolved as shift
WARNING: shift/reduce conflict for OR in state 108 resolved as shift
WARNING: shift/reduce conflict for AND in state 108 resolved as shift
WARNING: shift/reduce conflict for OR in state 110 resolved as shift
WARNING: shift/reduce conflict for AND in state 110 resolved as shift
WARNING: shift/reduce conflict for OR in state 112 resolved as shift
WARNING: shift/reduce conflict for AND in state 112 resolved as shift
WARNING: reduce/reduce conflict in state 34 resolved using rule (primitive_class_mandatory -> CLASS_IDENTIFIER)
WARNING: rejected rule (closed_axiom_mandatory -> CLASS_IDENTIFIER) in state 34
WARNING: reduce/reduce conflict in state 96 resolved using rule (nested_descriptions -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER)
WARNING: rejected rule (nested_descriptions -> CLASS_IDENTIFIER) in state 96
WARNING: reduce/reduce conflict in state 104 resolved using rule (nested_descriptions -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER)
WARNING: rejected rule (nested_descriptions -> CLASS_IDENTIFIER) in state 104
WARNING: reduce/reduce conflict in state 107 resolved using rule (nested_descriptions -> statement_property_identify statement_reserved_word VALUE CLASS_IDENTIFIER)
WARNING: rejected rule (nested_descriptions -> CLASS_IDENTIFIER) in state 107
WARNING: reduce/reduce conflict in state 109 resolved using rule (nested_descriptions -> statement_property_identify statement_reserved_word ONLY CLASS_IDENTIFIER)
WARNING: rejected rule (nested_descriptions -> CLASS_IDENTIFIER) in state 109
WARNING: reduce/reduce conflict in state 111 resolved using rule (nested_descriptions -> statement_property_identify statement_reserved_word SOME CLASS_IDENTIFIER)
WARNING: rejected rule (nested_descriptions -> CLASS_IDENTIFIER) in state 111
