
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALL AND CLASS_IDENTIFIER COMMA Class DATA_TYPE DIVIDE DisjointClasses DisjointWith EQUALS EXACTLY EquivalentTo GREATER_THAN IndividualNames Individuals LEFT_BRACKET LEFT_CURLY_BRACKET LEFT_PAREN LESS_THAN Literal MAX MIN MINUS NAMESPACEID NCName NMTOKEN NOT NUMBER Name ONLY OR PLUS PROPERTY_IDENTIFIER PROPERTY_IDENTIFIER_has PROPERTY_IDENTIFIER_is_Of PlainLiteral RIGHT_BRACKET RIGHT_CURLY_BRACKET RIGHT_PAREN SOME SubClassOf THAT TIMES VALUE XMLLiteral anyURI base64Binary boolean byte dateTime dateTimeStamp decimal double float hexBinary int integer langString languague long negativeInteger nonNegativeInteger owl rational rdf rdfs real string xsdstatements : statement\n| statement statementsstatement : Class CLASS_IDENTIFIER SubClassOf primitive_class_mandatory statement_class_disjoin statement_class_individualsstatement_reserved_word : SOME\n| EXACTLY\n| MIN\n| MAX\n| OR\n| ONLY\n| AND\n| VALUEstatement_property_identify : PROPERTY_IDENTIFIER_has\n| PROPERTY_IDENTIFIER_is_Of\n| PROPERTY_IDENTIFIERprimitive_class_mandatory : statement_property_identify statement_reserved_word CLASS_IDENTIFIER\n| statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory\n| statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE\n| statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory\n| CLASS_IDENTIFIER\n| CLASS_IDENTIFIER COMMA primitive_class_mandatorystatement_class_disjoin : empty\n| DisjointClasses statement_class_disjoin_checkstatement_class_disjoin_check : CLASS_IDENTIFIER\n| CLASS_IDENTIFIER COMMA statement_class_disjoin_checkstatement_class_individuals : empty\n| Individuals statement_class_individuals_checkstatement_class_individuals_check : IndividualNames\n| IndividualNames COMMA statement_class_individuals_checkstatement : Class CLASS_IDENTIFIER EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_defined_class_equivalent statement_class_individualsstatement_defined_class_equivalent : statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN\n| statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent\n| statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN\n| statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent statement_operator_symbol : LESS_THAN\n| GREATER_THAN\n| EQUALS\n| GREATER_THAN EQUALS\n| LESS_THAN EQUALSstatement : Class CLASS_IDENTIFIER SubClassOf CLASS_IDENTIFIER COMMA closed_axiom_mandatoryclosed_axiom_mandatory : CLASS_IDENTIFIER\n| statement_property_restriction\n| CLASS_IDENTIFIER COMMA closed_axiom_mandatory\n| statement_property_restriction COMMA closed_axiom_mandatorystatement_property_restriction : statement_property_identify SOME CLASS_IDENTIFIER\n| statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PARENclosed_axiom_restriction_combination : CLASS_IDENTIFIER\n| CLASS_IDENTIFIER OR closed_axiom_restriction_combinationstatement : Class CLASS_IDENTIFIER EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN nested_descriptions RIGHT_PARENnested_descriptions : nested_descriptions OR nested_descriptions\n| nested_descriptions AND nested_descriptions\n| LEFT_PAREN nested_descriptions RIGHT_PAREN\n| statement_property_identify statement_reserved_word CLASS_IDENTIFIER\n| statement_property_identify statement_reserved_word nested_descriptions\n| statement_property_identify statement_reserved_word VALUE CLASS_IDENTIFIER\n| statement_property_identify statement_reserved_word VALUE nested_descriptions\n| statement_property_identify statement_reserved_word ONLY CLASS_IDENTIFIER\n| statement_property_identify statement_reserved_word ONLY nested_descriptions\n| statement_property_identify statement_reserved_word SOME CLASS_IDENTIFIER\n| statement_property_identify statement_reserved_word SOME nested_descriptions\n| CLASS_IDENTIFIERstatement : Class CLASS_IDENTIFIER EquivalentTo LEFT_CURLY_BRACKET statement_enumerated_class_check RIGHT_CURLY_BRACKETstatement_enumerated_class_check : IndividualNames\n| IndividualNames COMMA statement_enumerated_class_checkstatement : Class CLASS_IDENTIFIER EquivalentTo statement_covered_class_checkstatement_covered_class_check : CLASS_IDENTIFIER\n| CLASS_IDENTIFIER OR statement_covered_class_checkempty :'
    
_lr_action_items = {'Class':([0,2,8,9,14,16,18,19,34,35,36,37,39,40,42,43,44,47,48,49,55,56,59,62,66,67,68,70,73,74,75,79,81,89,91,102,105,117,128,130,],[3,3,-19,-67,-65,-64,-67,-21,-19,-39,-20,-41,-3,-25,-22,-23,-15,-65,-66,-61,-26,-27,-17,-67,-42,-43,-40,-44,-24,-19,-16,-29,-48,-28,-18,-45,-30,-31,-32,-33,]),'$end':([1,2,4,8,9,14,16,18,19,34,35,36,37,39,40,42,43,44,47,48,49,55,56,59,62,66,67,68,70,73,74,75,79,81,89,91,102,105,117,128,130,],[0,-1,-2,-19,-67,-65,-64,-67,-21,-19,-39,-20,-41,-3,-25,-22,-23,-15,-65,-66,-61,-26,-27,-17,-67,-42,-43,-40,-44,-24,-19,-16,-29,-48,-28,-18,-45,-30,-31,-32,-33,]),'CLASS_IDENTIFIER':([3,6,7,17,20,21,22,23,24,25,26,27,28,29,31,46,51,52,53,54,57,58,61,71,76,80,82,83,84,85,90,93,99,100,101,103,122,],[5,8,14,34,43,44,-4,-5,-6,-7,-8,-9,-10,-11,47,60,34,68,70,-9,43,74,60,88,74,60,60,96,68,70,74,104,107,109,111,88,126,]),'SubClassOf':([5,],[6,]),'EquivalentTo':([5,],[7,]),'PROPERTY_IDENTIFIER_has':([6,17,22,23,24,25,26,27,28,29,46,51,52,58,61,76,80,82,83,84,90,93,99,100,101,114,129,],[11,11,-4,-5,-6,-7,-8,-9,-10,-11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'PROPERTY_IDENTIFIER_is_Of':([6,17,22,23,24,25,26,27,28,29,46,51,52,58,61,76,80,82,83,84,90,93,99,100,101,114,129,],[12,12,-4,-5,-6,-7,-8,-9,-10,-11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'PROPERTY_IDENTIFIER':([6,17,22,23,24,25,26,27,28,29,46,51,52,58,61,76,80,82,83,84,90,93,99,100,101,114,129,],[13,13,-4,-5,-6,-7,-8,-9,-10,-11,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'LEFT_CURLY_BRACKET':([7,],[15,]),'COMMA':([8,33,34,37,43,44,56,59,68,70,74,102,105,128,],[17,50,51,52,57,58,72,76,84,-44,90,-45,114,129,]),'DisjointClasses':([8,9,34,36,44,59,74,75,91,],[-19,20,-19,-20,-15,-17,-19,-16,-18,]),'Individuals':([8,9,18,19,34,36,42,43,44,59,62,73,74,75,91,105,117,128,130,],[-19,-67,41,-21,-19,-20,-22,-23,-15,-17,41,-24,-19,-16,-18,-30,-31,-32,-33,]),'SOME':([10,11,12,13,22,23,24,25,26,27,28,29,38,64,69,78,83,93,116,],[22,-12,-13,-14,-4,-5,-6,-7,-8,-9,-10,-11,53,22,85,22,101,101,22,]),'EXACTLY':([10,11,12,13,38,64,78,116,],[23,-12,-13,-14,23,23,23,23,]),'MIN':([10,11,12,13,38,64,78,116,],[24,-12,-13,-14,24,24,24,24,]),'MAX':([10,11,12,13,38,64,78,116,],[25,-12,-13,-14,25,25,25,25,]),'OR':([10,11,12,13,14,38,47,60,63,64,77,78,88,92,94,95,96,98,104,107,108,109,110,111,112,116,],[26,-12,-13,-14,31,26,31,-60,82,26,82,26,103,-51,82,82,-52,82,-52,-54,82,-56,82,-58,82,26,]),'ONLY':([10,11,12,13,22,23,24,25,26,27,28,29,38,64,69,78,83,93,116,],[27,-12,-13,-14,-4,-5,-6,-7,-8,-9,-10,-11,54,27,86,27,100,100,27,]),'AND':([10,11,12,13,14,38,60,63,64,77,78,92,94,95,96,98,104,107,108,109,110,111,112,116,],[28,-12,-13,-14,30,28,-60,80,28,80,28,-51,80,80,-52,80,-52,-54,80,-56,80,-58,80,28,]),'VALUE':([10,11,12,13,22,23,24,25,26,27,28,29,38,64,78,83,93,116,],[29,-12,-13,-14,-4,-5,-6,-7,-8,-9,-10,-11,29,29,29,99,99,29,]),'IndividualNames':([15,41,50,72,],[33,56,33,56,]),'NAMESPACEID':([21,22,23,24,25,26,27,28,29,53,54,83,122,],[45,-4,-5,-6,-7,-8,-9,-10,-11,-4,-9,97,97,]),'LEFT_PAREN':([22,23,24,25,26,27,28,29,30,46,54,61,80,82,83,86,93,99,100,101,],[-4,-5,-6,-7,-8,-9,-10,-11,46,61,71,61,61,61,61,71,61,61,61,61,]),'RIGHT_CURLY_BRACKET':([32,33,65,],[49,-62,-63,]),'DATA_TYPE':([45,97,],[59,106,]),'RIGHT_PAREN':([60,63,77,87,88,92,94,95,96,98,104,107,108,109,110,111,112,113,126,127,],[-60,81,92,102,-46,-51,-50,-49,105,-53,-52,-54,-55,-56,-57,-58,-59,-47,105,128,]),'LEFT_BRACKET':([106,],[115,]),'LESS_THAN':([115,],[119,]),'GREATER_THAN':([115,],[120,]),'EQUALS':([115,119,120,],[121,124,125,]),'NUMBER':([118,119,120,121,124,125,],[123,-34,-35,-36,-38,-37,]),'RIGHT_BRACKET':([123,],[127,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,2,],[1,4,]),'statement':([0,2,],[2,2,]),'primitive_class_mandatory':([6,17,51,58,76,90,],[9,36,36,75,91,36,]),'statement_property_identify':([6,17,46,51,52,58,61,76,80,82,83,84,90,93,99,100,101,114,129,],[10,38,64,38,69,10,78,10,78,78,78,69,10,78,78,78,78,116,116,]),'statement_covered_class_check':([7,31,],[16,48,]),'statement_class_disjoin':([9,],[18,]),'empty':([9,18,62,],[19,40,40,]),'statement_reserved_word':([10,38,64,78,116,],[21,21,83,93,122,]),'statement_enumerated_class_check':([15,50,],[32,65,]),'closed_axiom_mandatory':([17,51,52,84,],[35,66,67,66,]),'statement_property_restriction':([17,51,52,84,],[37,37,37,37,]),'statement_class_individuals':([18,62,],[39,79,]),'statement_class_disjoin_check':([20,57,],[42,73,]),'statement_class_individuals_check':([41,72,],[55,89,]),'statement_defined_class_equivalent':([46,114,129,],[62,117,130,]),'nested_descriptions':([46,61,80,82,83,93,99,100,101,],[63,77,94,95,98,98,108,110,112,]),'closed_axiom_restriction_combination':([71,103,],[87,113,]),'statement_operator_symbol':([115,],[118,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statement','statements',1,'p_statements','Sintatico.py',6),
  ('statements -> statement statements','statements',2,'p_statements','Sintatico.py',7),
  ('statement -> Class CLASS_IDENTIFIER SubClassOf primitive_class_mandatory statement_class_disjoin statement_class_individuals','statement',6,'p_statement_primitive_class','Sintatico.py',12),
  ('statement_reserved_word -> SOME','statement_reserved_word',1,'p_statement_reserved_word','Sintatico.py',16),
  ('statement_reserved_word -> EXACTLY','statement_reserved_word',1,'p_statement_reserved_word','Sintatico.py',17),
  ('statement_reserved_word -> MIN','statement_reserved_word',1,'p_statement_reserved_word','Sintatico.py',18),
  ('statement_reserved_word -> MAX','statement_reserved_word',1,'p_statement_reserved_word','Sintatico.py',19),
  ('statement_reserved_word -> OR','statement_reserved_word',1,'p_statement_reserved_word','Sintatico.py',20),
  ('statement_reserved_word -> ONLY','statement_reserved_word',1,'p_statement_reserved_word','Sintatico.py',21),
  ('statement_reserved_word -> AND','statement_reserved_word',1,'p_statement_reserved_word','Sintatico.py',22),
  ('statement_reserved_word -> VALUE','statement_reserved_word',1,'p_statement_reserved_word','Sintatico.py',23),
  ('statement_property_identify -> PROPERTY_IDENTIFIER_has','statement_property_identify',1,'p_statement_property_identify','Sintatico.py',27),
  ('statement_property_identify -> PROPERTY_IDENTIFIER_is_Of','statement_property_identify',1,'p_statement_property_identify','Sintatico.py',28),
  ('statement_property_identify -> PROPERTY_IDENTIFIER','statement_property_identify',1,'p_statement_property_identify','Sintatico.py',29),
  ('primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER','primitive_class_mandatory',3,'p_primitive_class_mandatory','Sintatico.py',33),
  ('primitive_class_mandatory -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER COMMA primitive_class_mandatory','primitive_class_mandatory',5,'p_primitive_class_mandatory','Sintatico.py',34),
  ('primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE','primitive_class_mandatory',4,'p_primitive_class_mandatory','Sintatico.py',35),
  ('primitive_class_mandatory -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE COMMA primitive_class_mandatory','primitive_class_mandatory',6,'p_primitive_class_mandatory','Sintatico.py',36),
  ('primitive_class_mandatory -> CLASS_IDENTIFIER','primitive_class_mandatory',1,'p_primitive_class_mandatory','Sintatico.py',37),
  ('primitive_class_mandatory -> CLASS_IDENTIFIER COMMA primitive_class_mandatory','primitive_class_mandatory',3,'p_primitive_class_mandatory','Sintatico.py',38),
  ('statement_class_disjoin -> empty','statement_class_disjoin',1,'p_statement_class_disjoin','Sintatico.py',42),
  ('statement_class_disjoin -> DisjointClasses statement_class_disjoin_check','statement_class_disjoin',2,'p_statement_class_disjoin','Sintatico.py',43),
  ('statement_class_disjoin_check -> CLASS_IDENTIFIER','statement_class_disjoin_check',1,'p_statement_class_disjoin_check','Sintatico.py',47),
  ('statement_class_disjoin_check -> CLASS_IDENTIFIER COMMA statement_class_disjoin_check','statement_class_disjoin_check',3,'p_statement_class_disjoin_check','Sintatico.py',48),
  ('statement_class_individuals -> empty','statement_class_individuals',1,'p_statement_class_individuals','Sintatico.py',52),
  ('statement_class_individuals -> Individuals statement_class_individuals_check','statement_class_individuals',2,'p_statement_class_individuals','Sintatico.py',53),
  ('statement_class_individuals_check -> IndividualNames','statement_class_individuals_check',1,'p_statement_class_individuals_check','Sintatico.py',57),
  ('statement_class_individuals_check -> IndividualNames COMMA statement_class_individuals_check','statement_class_individuals_check',3,'p_statement_class_individuals_check','Sintatico.py',58),
  ('statement -> Class CLASS_IDENTIFIER EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN statement_defined_class_equivalent statement_class_individuals','statement',8,'p_statement_defined_class','Sintatico.py',63),
  ('statement_defined_class_equivalent -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN','statement_defined_class_equivalent',4,'p_statement_defined_class_equivalent','Sintatico.py',68),
  ('statement_defined_class_equivalent -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER RIGHT_PAREN COMMA statement_defined_class_equivalent','statement_defined_class_equivalent',6,'p_statement_defined_class_equivalent','Sintatico.py',69),
  ('statement_defined_class_equivalent -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN','statement_defined_class_equivalent',9,'p_statement_defined_class_equivalent','Sintatico.py',70),
  ('statement_defined_class_equivalent -> statement_property_identify statement_reserved_word NAMESPACEID DATA_TYPE LEFT_BRACKET statement_operator_symbol NUMBER RIGHT_BRACKET RIGHT_PAREN COMMA statement_defined_class_equivalent','statement_defined_class_equivalent',11,'p_statement_defined_class_equivalent','Sintatico.py',71),
  ('statement_operator_symbol -> LESS_THAN','statement_operator_symbol',1,'p_statement_operator_symbol','Sintatico.py',75),
  ('statement_operator_symbol -> GREATER_THAN','statement_operator_symbol',1,'p_statement_operator_symbol','Sintatico.py',76),
  ('statement_operator_symbol -> EQUALS','statement_operator_symbol',1,'p_statement_operator_symbol','Sintatico.py',77),
  ('statement_operator_symbol -> GREATER_THAN EQUALS','statement_operator_symbol',2,'p_statement_operator_symbol','Sintatico.py',78),
  ('statement_operator_symbol -> LESS_THAN EQUALS','statement_operator_symbol',2,'p_statement_operator_symbol','Sintatico.py',79),
  ('statement -> Class CLASS_IDENTIFIER SubClassOf CLASS_IDENTIFIER COMMA closed_axiom_mandatory','statement',6,'p_statement_closed_axiom_class','Sintatico.py',84),
  ('closed_axiom_mandatory -> CLASS_IDENTIFIER','closed_axiom_mandatory',1,'p_closed_axiom_mandatory','Sintatico.py',88),
  ('closed_axiom_mandatory -> statement_property_restriction','closed_axiom_mandatory',1,'p_closed_axiom_mandatory','Sintatico.py',89),
  ('closed_axiom_mandatory -> CLASS_IDENTIFIER COMMA closed_axiom_mandatory','closed_axiom_mandatory',3,'p_closed_axiom_mandatory','Sintatico.py',90),
  ('closed_axiom_mandatory -> statement_property_restriction COMMA closed_axiom_mandatory','closed_axiom_mandatory',3,'p_closed_axiom_mandatory','Sintatico.py',91),
  ('statement_property_restriction -> statement_property_identify SOME CLASS_IDENTIFIER','statement_property_restriction',3,'p_statement_property_restriction','Sintatico.py',95),
  ('statement_property_restriction -> statement_property_identify ONLY LEFT_PAREN closed_axiom_restriction_combination RIGHT_PAREN','statement_property_restriction',5,'p_statement_property_restriction','Sintatico.py',96),
  ('closed_axiom_restriction_combination -> CLASS_IDENTIFIER','closed_axiom_restriction_combination',1,'p_closed_axiom_restriction_combination','Sintatico.py',100),
  ('closed_axiom_restriction_combination -> CLASS_IDENTIFIER OR closed_axiom_restriction_combination','closed_axiom_restriction_combination',3,'p_closed_axiom_restriction_combination','Sintatico.py',101),
  ('statement -> Class CLASS_IDENTIFIER EquivalentTo CLASS_IDENTIFIER AND LEFT_PAREN nested_descriptions RIGHT_PAREN','statement',8,'p_statement_nested_descriptions_class','Sintatico.py',106),
  ('nested_descriptions -> nested_descriptions OR nested_descriptions','nested_descriptions',3,'p_nested_descriptions','Sintatico.py',110),
  ('nested_descriptions -> nested_descriptions AND nested_descriptions','nested_descriptions',3,'p_nested_descriptions','Sintatico.py',111),
  ('nested_descriptions -> LEFT_PAREN nested_descriptions RIGHT_PAREN','nested_descriptions',3,'p_nested_descriptions','Sintatico.py',112),
  ('nested_descriptions -> statement_property_identify statement_reserved_word CLASS_IDENTIFIER','nested_descriptions',3,'p_nested_descriptions','Sintatico.py',113),
  ('nested_descriptions -> statement_property_identify statement_reserved_word nested_descriptions','nested_descriptions',3,'p_nested_descriptions','Sintatico.py',114),
  ('nested_descriptions -> statement_property_identify statement_reserved_word VALUE CLASS_IDENTIFIER','nested_descriptions',4,'p_nested_descriptions','Sintatico.py',115),
  ('nested_descriptions -> statement_property_identify statement_reserved_word VALUE nested_descriptions','nested_descriptions',4,'p_nested_descriptions','Sintatico.py',116),
  ('nested_descriptions -> statement_property_identify statement_reserved_word ONLY CLASS_IDENTIFIER','nested_descriptions',4,'p_nested_descriptions','Sintatico.py',117),
  ('nested_descriptions -> statement_property_identify statement_reserved_word ONLY nested_descriptions','nested_descriptions',4,'p_nested_descriptions','Sintatico.py',118),
  ('nested_descriptions -> statement_property_identify statement_reserved_word SOME CLASS_IDENTIFIER','nested_descriptions',4,'p_nested_descriptions','Sintatico.py',119),
  ('nested_descriptions -> statement_property_identify statement_reserved_word SOME nested_descriptions','nested_descriptions',4,'p_nested_descriptions','Sintatico.py',120),
  ('nested_descriptions -> CLASS_IDENTIFIER','nested_descriptions',1,'p_nested_descriptions','Sintatico.py',121),
  ('statement -> Class CLASS_IDENTIFIER EquivalentTo LEFT_CURLY_BRACKET statement_enumerated_class_check RIGHT_CURLY_BRACKET','statement',6,'p_statement_enumerated_class','Sintatico.py',126),
  ('statement_enumerated_class_check -> IndividualNames','statement_enumerated_class_check',1,'p_statement_enumerated_class_check','Sintatico.py',130),
  ('statement_enumerated_class_check -> IndividualNames COMMA statement_enumerated_class_check','statement_enumerated_class_check',3,'p_statement_enumerated_class_check','Sintatico.py',131),
  ('statement -> Class CLASS_IDENTIFIER EquivalentTo statement_covered_class_check','statement',4,'p_statement_covered_class','Sintatico.py',136),
  ('statement_covered_class_check -> CLASS_IDENTIFIER','statement_covered_class_check',1,'p_statement_covered_class_check','Sintatico.py',140),
  ('statement_covered_class_check -> CLASS_IDENTIFIER OR statement_covered_class_check','statement_covered_class_check',3,'p_statement_covered_class_check','Sintatico.py',141),
  ('empty -> <empty>','empty',0,'p_empty','Sintatico.py',146),
]
