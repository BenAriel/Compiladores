
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORANDleftNOTleftPLUSMINUSleftTIMESDIVIDEleftLPARENRPARENALL AND CLASS_IDENTIFIER Class DIVIDE DisjointClasses EXACTLY EquivalentTo IndividualNames Individuals LPAREN MAX MIN MINUS NAMESPACEID NOT NUMBER OR PLUS PROPERTY_IDENTIFIER PROPERTY_IDENTIFIER_has PROPERTY_IDENTIFIER_is_Of RPAREN SOME SpecialCharacters SubClassOf THAT TIMES VALUEexpression : expression AND expression\n| expression OR expressionexpression : NOT expressionexpression : VALUEexpression : NUMBERexpression : CLASS_IDENTIFIER MIN expression\n| CLASS_IDENTIFIER MAX expression\n| CLASS_IDENTIFIER EXACTLY expression\n| CLASS_IDENTIFIER VALUEexpression : CLASS_IDENTIFIERexpression : PROPERTY_IDENTIFIERexpression : NAMESPACEIDexpression : IndividualNamesexpression : PROPERTY_IDENTIFIER MIN NUMBER\n| PROPERTY_IDENTIFIER MAX NUMBER\n| PROPERTY_IDENTIFIER EXACTLY NUMBERexpression : LPAREN expression RPAREN'
    
_lr_action_items = {'NOT':([0,2,9,10,11,13,14,15,],[2,2,2,2,2,2,2,2,]),'VALUE':([0,2,5,9,10,11,13,14,15,],[3,3,16,3,3,3,3,3,3,]),'NUMBER':([0,2,9,10,11,13,14,15,17,18,19,],[4,4,4,4,4,4,4,4,26,27,28,]),'CLASS_IDENTIFIER':([0,2,9,10,11,13,14,15,],[5,5,5,5,5,5,5,5,]),'PROPERTY_IDENTIFIER':([0,2,9,10,11,13,14,15,],[6,6,6,6,6,6,6,6,]),'NAMESPACEID':([0,2,9,10,11,13,14,15,],[7,7,7,7,7,7,7,7,]),'IndividualNames':([0,2,9,10,11,13,14,15,],[8,8,8,8,8,8,8,8,]),'LPAREN':([0,2,9,10,11,13,14,15,],[9,9,9,9,9,9,9,9,]),'$end':([1,3,4,5,6,7,8,12,16,21,22,23,24,25,26,27,28,29,],[0,-4,-5,-10,-11,-12,-13,-3,-9,-1,-2,-6,-7,-8,-14,-15,-16,-17,]),'AND':([1,3,4,5,6,7,8,12,16,20,21,22,23,24,25,26,27,28,29,],[10,-4,-5,-10,-11,-12,-13,-3,-9,10,-1,-2,10,10,10,-14,-15,-16,-17,]),'OR':([1,3,4,5,6,7,8,12,16,20,21,22,23,24,25,26,27,28,29,],[11,-4,-5,-10,-11,-12,-13,-3,-9,11,-1,-2,11,11,11,-14,-15,-16,-17,]),'RPAREN':([3,4,5,6,7,8,12,16,20,21,22,23,24,25,26,27,28,29,],[-4,-5,-10,-11,-12,-13,-3,-9,29,-1,-2,-6,-7,-8,-14,-15,-16,-17,]),'MIN':([5,6,],[13,17,]),'MAX':([5,6,],[14,18,]),'EXACTLY':([5,6,],[15,19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,2,9,10,11,13,14,15,],[1,12,20,21,22,23,24,25,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression AND expression','expression',3,'p_expression_binop','Sintatico.py',52),
  ('expression -> expression OR expression','expression',3,'p_expression_binop','Sintatico.py',53),
  ('expression -> NOT expression','expression',2,'p_expression_not','Sintatico.py',60),
  ('expression -> VALUE','expression',1,'p_expression_value','Sintatico.py',64),
  ('expression -> NUMBER','expression',1,'p_expression_number','Sintatico.py',68),
  ('expression -> CLASS_IDENTIFIER MIN expression','expression',3,'p_expression_comparison','Sintatico.py',72),
  ('expression -> CLASS_IDENTIFIER MAX expression','expression',3,'p_expression_comparison','Sintatico.py',73),
  ('expression -> CLASS_IDENTIFIER EXACTLY expression','expression',3,'p_expression_comparison','Sintatico.py',74),
  ('expression -> CLASS_IDENTIFIER VALUE','expression',2,'p_expression_comparison','Sintatico.py',75),
  ('expression -> CLASS_IDENTIFIER','expression',1,'p_expression_class','Sintatico.py',79),
  ('expression -> PROPERTY_IDENTIFIER','expression',1,'p_expression_property','Sintatico.py',83),
  ('expression -> NAMESPACEID','expression',1,'p_expression_namespace','Sintatico.py',87),
  ('expression -> IndividualNames','expression',1,'p_expression_individual','Sintatico.py',91),
  ('expression -> PROPERTY_IDENTIFIER MIN NUMBER','expression',3,'p_expression_cardinality','Sintatico.py',95),
  ('expression -> PROPERTY_IDENTIFIER MAX NUMBER','expression',3,'p_expression_cardinality','Sintatico.py',96),
  ('expression -> PROPERTY_IDENTIFIER EXACTLY NUMBER','expression',3,'p_expression_cardinality','Sintatico.py',97),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','Sintatico.py',101),
]
